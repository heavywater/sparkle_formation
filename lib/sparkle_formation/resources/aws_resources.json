{
  "AWS::AmazonMQ::Broker": {
    "full_properties": {
      "AutoMinorVersionUpgrade": {
        "description": "Enables automatic upgrades to new minor versions for brokers, as Apache releases the versions. The automatic upgrades occur during the maintenance window of the broker or after a manual broker reboot.",
        "required": true,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "BrokerName": {
        "description": "The name of the broker. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain whitespaces, brackets, wildcard characters, or special characters.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Users": {
        "description": "The list of all ActiveMQ usernames for the specified broker.",
        "required": true,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "Configuration": {
        "description": "The broker configuration. If no configuration exists for a broker, Amazon MQ creates a default configuration",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "DeploymentMode": {
        "description": "The deployment mode of the broker. SINGLE_INSTANCE creates a single-instance broker in a single Availability Zone. ACTIVE_STANDBY_MULTI_AZ creates an active/standby broker for high availability.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineType": {
        "description": "The type of broker engine",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineVersion": {
        "description": "The version of the broker engine",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "HostInstanceType": {
        "description": "The broker's instance type",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MaintenanceWindowStartTime": {
        "description": "The parameters that determine the WeeklyStartTime",
        "required": false,
        "type": "Hash",
        "update_causes": "replacement"
      },
      "PubliclyAccessible": {
        "description": "Enables connections from applications outside of the VPC that hosts the broker's subnets",
        "required": true,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "SecurityGroups": {
        "description": "The list of rules (1 minimum, 125 maximum) that authorize connections to brokers",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "The list of groups (2 maximum) that define which subnets and IP ranges the broker can use from different Availability Zones. A SINGLE_INSTANCE deployment requires one subnet (for example, the default subnet). An ACTIVE_STANDBY_MULTI_AZ deployment requires two subnets.",
        "required": "false",
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-amazonmq-broker.html",
    "properties": [
      "AutoMinorVersionUpgrade",
      "BrokerName",
      "Users",
      "Configuration",
      "DeploymentMode",
      "EngineType",
      "EngineVersion",
      "HostInstanceType",
      "MaintenanceWindowStartTime",
      "PublicalyAccessible",
      "SecurityGroups",
      "SubnetIds"
    ]
  },
  "AWS::AmazonMQ::Configuration": {
    "full_properties": {
      "Description": {
        "description": "The description of the configuration for activemq",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Data": {
        "description": "The base64-encoded XML configuration for activemq",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "EngineType": {
        "description": "The broker engine to use with amazonmq. Currently only ACTIVEMQ supported",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineVersion": {
        "description": "The version of broker engine to run. Currently only version 5.15.0 is supported",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-amazonmq-configuration.html",
    "properties": [
      "Data",
      "EngineType",
      "EngineVersion"
    ]
  },
  "AWS::ApiGateway::Account": {
    "full_properties": {
      "CloudWatchRoleArn": {
        "description": "The Amazon Resource Name (ARN) of an IAM role that has write access to CloudWatch Logs in your account.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-account.html",
    "properties": [
      "CloudWatchRoleArn"
    ]
  },
  "AWS::ApiGateway::ApiKey": {
    "full_properties": {
      "CustomerId": {
        "description": "An AWS Marketplace customer identifier to use when integrating with the AWS SaaS Marketplace.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the purpose of the API key.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Enabled": {
        "description": "Indicates whether the API key can be used by clients.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "GenerateDistinctId": {
        "description": "Specifies whether the key identifier is distinct from the created API key value.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A name for the API key. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the API key name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "StageKeys": {
        "description": "A list of stages to associate with this API key.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-apikey.html",
    "properties": [
      "CustomerId",
      "Description",
      "Enabled",
      "GenerateDistinctId",
      "Name",
      "StageKeys"
    ]
  },
  "AWS::ApiGateway::Authorizer": {
    "full_properties": {
      "AuthType": {
        "description": "An optional customer-defined field that's used in Swagger imports and exports without functional impact.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AuthorizerCredentials": {
        "description": "The credentials that are required for the authorizer. To specify an AWS Identity and Access Management (IAM) role that API Gateway assumes, specify the role's Amazon Resource Name (ARN). To use resource-based permissions on the AWS Lambda (Lambda) function, specify null.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AuthorizerResultTtlInSeconds": {
        "description": "The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches authorizer results. If you specify a value greater than 0, API Gateway caches the authorizer responses. By default, API Gateway sets this property to 300. The maximum value is 3600, or 1 hour.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "AuthorizerUri": {
        "description": "The authorizer's Uniform Resource Identifier (URI). If you specify TOKEN for the authorizer's Type property, specify a Lambda function URI that has the form arn:aws:apigateway:region:lambda:path/path. The path usually has the form /2015-03-31/functions/LambdaFunctionARN/invocations.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "IdentitySource": {
        "description": "The source of the identity in an incoming request. If you specify TOKEN for the authorizer's Type property, specify a mapping expression. The custom header mapping expression has the form method.request.header.name, where name is the name of a custom authorization header that clients submit as part of their requests.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "IdentityValidationExpression": {
        "description": "A validation expression for the incoming identity. If you specify TOKEN for the authorizer's Type property, specify a regular expression. API Gateway uses the expression to attempt to match the incoming client token, and proceeds if the token matches. If the token doesn't match, API Gateway responds with a 401 (unauthorized request) error code.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the authorizer.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ProviderARNs": {
        "description": "A list of the Amazon Cognito user pool Amazon Resource Names (ARNs) to associate with this authorizer. For more information, see Use Amazon Cognito Your User Pool in the API Gateway Developer Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "RestApiId": {
        "description": "The ID of the RestApi resource that API Gateway creates the authorizer in.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Type": {
        "description": "The type of authorizer:",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-authorizer.html",
    "properties": [
      "AuthType",
      "AuthorizerCredentials",
      "AuthorizerResultTtlInSeconds",
      "AuthorizerUri",
      "IdentitySource",
      "IdentityValidationExpression",
      "Name",
      "ProviderARNs",
      "RestApiId",
      "Type"
    ]
  },
  "AWS::ApiGateway::BasePathMapping": {
    "full_properties": {
      "BasePath": {
        "description": "The base path name that callers of the API must provide in the URL after the domain name. If you specify this property, it can't be an empty string.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DomainName": {
        "description": "The domain name of a DomainName resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RestApiId": {
        "description": "The name of the API.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Stage": {
        "description": "The name of the API's stage.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-basepathmapping.html",
    "properties": [
      "BasePath",
      "DomainName",
      "RestApiId",
      "Stage"
    ]
  },
  "AWS::ApiGateway::ClientCertificate": {
    "full_properties": {
      "Description": {
        "description": "A description of the client certificate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-clientcertificate.html",
    "properties": [
      "Description"
    ]
  },
  "AWS::ApiGateway::Deployment": {
    "full_properties": {
      "Description": {
        "description": "A description of the purpose of the API Gateway deployment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RestApiId": {
        "description": "The ID of the RestApi resource to deploy.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StageDescription": {
        "description": "Configures the stage that API Gateway creates with this deployment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StageName": {
        "description": "A name for the stage that API Gateway creates with this deployment. Use only alphanumeric characters.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-deployment.html",
    "properties": [
      "Description",
      "RestApiId",
      "StageDescription",
      "StageName"
    ]
  },
  "AWS::ApiGateway::DocumentationPart": {
    "full_properties": {
      "Location": {
        "description": "The location of the API entity that the documentation applies to.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Properties": {
        "description": "The documentation content map of the targeted API entity.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RestApiId": {
        "description": "The identifier of the targeted API entity.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-apigateway-documentationpart.html",
    "properties": [
      "Location",
      "Properties",
      "RestApiId"
    ]
  },
  "AWS::ApiGateway::DocumentationVersion": {
    "full_properties": {
      "Description": {
        "description": "The description of the API documentation snapshot.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DocumentationVersion": {
        "description": "The version identifier of the API documentation snapshot.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RestApiId": {
        "description": "The identifier of the targeted API entity.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-apigateway-documentationversion.html",
    "properties": [
      "Description",
      "DocumentationVersion",
      "RestApiId"
    ]
  },
  "AWS::ApiGateway::DomainName": {
    "full_properties": {
      "CertificateArn": {
        "description": "The reference to an AWS-managed certificate for use by the edge-optimized endpoint for this domain name. AWS Certificate Manager is the only supported source. For requirements and additional information about setting up certificates, see Get Certificates Ready in AWS Certificate Manager in the API Gateway Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DomainName": {
        "description": "The custom domain name for your API in Amazon API Gateway.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EndpointConfiguration": {
        "description": "A list of the endpoint types of the domain name.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RegionalCertificateArn": {
        "description": "The reference to an AWS-managed certificate for use by the regional endpoint for the domain name. AWS Certificate Manager is the only supported source.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-domainname.html",
    "properties": [
      "CertificateArn",
      "DomainName",
      "EndpointConfiguration",
      "RegionalCertificateArn"
    ]
  },
  "AWS::ApiGateway::GatewayResponse": {
    "full_properties": {
      "ResponseParameters": {
        "description": "The response parameters (paths, query strings, and headers) for the response. Duplicates not allowed.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResponseTemplates": {
        "description": "The response templates for the response. Duplicates not allowed.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResponseType": {
        "description": "The response type. For valid values, see GatewayResponse in the API Gateway API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RestApiId": {
        "description": "The identifier of the targeted API entity.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StatusCode": {
        "description": "The HTTP status code for the response.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-gatewayresponse.html",
    "properties": [
      "ResponseParameters",
      "ResponseTemplates",
      "ResponseType",
      "RestApiId",
      "StatusCode"
    ]
  },
  "AWS::ApiGateway::Method": {
    "full_properties": {
      "ApiKeyRequired": {
        "description": "Indicates whether the method requires clients to submit a valid API key.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AuthorizationType": {
        "description": "The method's authorization type.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "AuthorizerId": {
        "description": "The identifier of the authorizer to use on this method. If you specify this property, specify CUSTOM for the AuthorizationType property.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "HttpMethod": {
        "description": "The HTTP method that clients use to call this method.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Integration": {
        "description": "The backend system that the method calls when it receives a request.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MethodResponses": {
        "description": "The responses that can be sent to the client who calls the method.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "OperationName": {
        "description": "A friendly operation name for the method. For example, you can assign the OperationName of ListPets for the GET /pets method.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RequestModels": {
        "description": "The resources that are used for the response's content type. Specify response models as key-value pairs (string-to-string mapping), with a content type as the key and a Model resource name as the value.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RequestParameters": {
        "description": "The request parameters that API Gateway accepts. Specify request parameters as key-value pairs (string-to-Boolean mapping), with a source as the key and a Boolean as the value. The Boolean specifies whether a parameter is required. A source must match the format method.request.location.name, where the location is querystring, path, or header, and name is a valid, unique parameter name.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RequestValidatorId": {
        "description": "The ID of the associated request validator.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResourceId": {
        "description": "The ID of an API Gateway resource. For root resource methods, specify the RestApi root resource ID, such as { \"Fn::GetAtt\": [\"MyRestApi\", \"RootResourceId\"] }.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RestApiId": {
        "description": "The ID of the RestApi resource in which API Gateway creates the method.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-method.html",
    "properties": [
      "ApiKeyRequired",
      "AuthorizationType",
      "AuthorizerId",
      "HttpMethod",
      "Integration",
      "MethodResponses",
      "OperationName",
      "RequestModels",
      "RequestParameters",
      "RequestValidatorId",
      "ResourceId",
      "RestApiId"
    ]
  },
  "AWS::ApiGateway::Model": {
    "full_properties": {
      "ContentType": {
        "description": "The content type for the model.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description that identifies this model.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the model. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the model name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RestApiId": {
        "description": "The ID of a REST API with which to associate this model.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Schema": {
        "description": "The schema to use to transform data to one or more output formats. Specify null ({}) if you don't want to specify a schema.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-model.html",
    "properties": [
      "ContentType",
      "Description",
      "Name",
      "RestApiId",
      "Schema"
    ]
  },
  "AWS::ApiGateway::RequestValidator": {
    "full_properties": {
      "Name": {
        "description": "The name of this request validator.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RestApiId": {
        "description": "The identifier of the targeted API entity.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ValidateRequestBody": {
        "description": "Indicates whether to validate the request body according to the configured schema for the targeted API and method.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "ValidateRequestParameters": {
        "description": "Indicates whether to validate request parameters.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-requestvalidator.html",
    "properties": [
      "Name",
      "RestApiId",
      "ValidateRequestBody",
      "ValidateRequestParameters"
    ]
  },
  "AWS::ApiGateway::Resource": {
    "full_properties": {
      "ParentId": {
        "description": "If you want to create a child resource, the ID of the parent resource. For resources without a parent, specify the RestApi root resource ID, such as { \"Fn::GetAtt\": [\"MyRestApi\", \"RootResourceId\"] }.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PathPart": {
        "description": "A path name for the resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RestApiId": {
        "description": "The ID of the RestApi resource in which you want to create this resource.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-apigateway-resource.html",
    "properties": [
      "ParentId",
      "PathPart",
      "RestApiId"
    ]
  },
  "AWS::ApiGateway::RestApi": {
    "full_properties": {
      "ApiKeySourceType": {
        "description": "The source of the API key for metering requests according to a usage plan. Valid values are:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "BinaryMediaTypes": {
        "description": "The list of binary media types that are supported by the RestApi resource, such as image/png or application/octet-stream. By default, RestApi supports only UTF-8-encoded text payloads. For more information, see Enable Support for Binary Payloads in API Gateway in the API Gateway Developer Guide. Duplicates are not allowed.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Body": {
        "description": "An OpenAPI specification that defines a set of RESTful APIs in the JSON format. For YAML templates, you can also provide the specification in the YAML format.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BodyS3Location": {
        "description": "The Amazon Simple Storage Service (Amazon S3) location that points to an OpenAPI file, which defines a set of RESTful APIs in JSON or YAML format.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CloneFrom": {
        "description": "The ID of the API Gateway RestApi resource that you want to clone.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the purpose of this API Gateway RestApi resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EndpointConfiguration": {
        "description": "A list of the endpoint types of the API. Use this property when creating an API. When importing an existing API, specify the endpoint configuration types using the Parameters property.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "FailOnWarnings": {
        "description": "Indicates whether to roll back the resource if a warning occurs while API Gateway is creating the RestApi resource.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "MinimumCompressionSize": {
        "description": "A nullable integer that is used to enable compression (with non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable compression (with a null value) on an API. When compression is enabled, compression or decompression is not applied on the payload if the payload size is smaller than this value. Setting it to zero allows compression for any payload size.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the API Gateway RestApi resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Parameters": {
        "description": "Custom header parameters for the request.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Policy": {
        "description": "A policy document that contains the permissions for this RestApi resource, in JSON format.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-restapi.html",
    "properties": [
      "ApiKeySourceType",
      "BinaryMediaTypes",
      "Body",
      "BodyS3Location",
      "CloneFrom",
      "Description",
      "EndpointConfiguration",
      "FailOnWarnings",
      "MinimumCompressionSize",
      "Name",
      "Parameters",
      "Policy"
    ]
  },
  "AWS::ApiGateway::Stage": {
    "full_properties": {
      "CacheClusterEnabled": {
        "description": "Indicates whether cache clustering is enabled for the stage.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "CacheClusterSize": {
        "description": "The stage's cache cluster size.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ClientCertificateId": {
        "description": "The identifier of the client certificate that API Gateway uses to call your integration endpoints in the stage.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DeploymentId": {
        "description": "The ID of the deployment that the stage points to.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the stage's purpose.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DocumentationVersion": {
        "description": "The version identifier of the API documentation snapshot.",
        "required": false,
        "type": "String",
        "update_causes": "unknown"
      },
      "MethodSettings": {
        "description": "Settings for all methods in the stage.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "RestApiId": {
        "description": "The ID of the RestApi resource that you're deploying with this stage.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StageName": {
        "description": "The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Variables": {
        "description": "A map (string-to-string map) that defines the stage variables, where the variable name is the key and the variable value is the value. Variable names are limited to alphanumeric characters. Values must match the following regular expression: [A-Za-z0-9-._~:/?#&amp;=,]+.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-stage.html",
    "properties": [
      "CacheClusterEnabled",
      "CacheClusterSize",
      "ClientCertificateId",
      "DeploymentId",
      "Description",
      "DocumentationVersion",
      "MethodSettings",
      "RestApiId",
      "StageName",
      "Variables"
    ]
  },
  "AWS::ApiGateway::UsagePlan": {
    "full_properties": {
      "ApiStages": {
        "description": "The API stages to associate with this usage plan.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "The purpose of this usage plan.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Quota": {
        "description": "Configures the number of requests that users can make within a given interval.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Throttle": {
        "description": "Configures the overall request rate (average requests per second) and burst capacity.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "UsagePlanName": {
        "description": "A name for this usage plan.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-apigateway-usageplan.html",
    "properties": [
      "ApiStages",
      "Description",
      "Quota",
      "Throttle",
      "UsagePlanName"
    ]
  },
  "AWS::ApiGateway::UsagePlanKey": {
    "full_properties": {
      "KeyId": {
        "description": "The ID of the usage plan key.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "KeyType": {
        "description": "The type of usage plan key. Currently, the valid key type is API_KEY.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UsagePlanId": {
        "description": "The value of the usage plan key.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-apigateway-usageplankey.html",
    "properties": [
      "KeyId",
      "KeyType",
      "UsagePlanId"
    ]
  },
  "AWS::ApiGateway::VpcLink": {
    "full_properties": {
      "Description": {
        "description": "The description of the VPC link.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name used to label and identify the VPC link.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TargetArns": {
        "description": "The ARNs of network load balancers of the VPC targeted by the VPC link. The network load balancers must be owned by the same AWS account of the API owner.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-apigateway-vpclink.html",
    "properties": [
      "Description",
      "Name",
      "TargetArns"
    ]
  },
  "AWS::AppSync::ApiKey": {
    "full_properties": {
      "ApiId": {
        "description": "Unique AWS AppSync GraphQL API Identifier for this API Key.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "Unique description of your API Key.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Expires": {
        "description": "Expiration time of the API Key in seconds (using Unix Epoch time), with a minimum of 1 day and a maximum of 365 days.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appsync-apikey.html",
    "properties": [
      "Description",
      "Expires",
      "ApiId"
    ]
  },
  "AWS::AppSync::DataSource": {
    "full_properties": {
      "ApiId": {
        "description": "Unique AWS AppSync GraphQL API Identifier where this data source will be created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "Friendly description for this data source.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DynamoDBConfig": {
        "description": "AwsRegion and TableName for an Amazon DynamoDB table in your account.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ElasticsearchConfig": {
        "description": "AwsRegion and Endpoints for an Amazon Elasticsearch Service domain in your account.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LambdaConfig": {
        "description": "A valid ARN of a Lambda function in your account.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "Friendly name for you to identify your AppSync data source after creation.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceRoleArn": {
        "description": "IAM role ARN which the data source will use to connect to a resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Type": {
        "description": "Mandatory resource to return data from in customer AWS account. You can also specify NONE to use Local Resolvers. See Local Resolvers Tutorial for more information.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appsync-datasource.html",
    "properties": [
      "Type",
      "Description",
      "ServiceRoleArn",
      "LambdaConfig",
      "ApiId",
      "Name",
      "DynamoDBConfig",
      "ElasticsearchConfig"
    ]
  },
  "AWS::AppSync::GraphQLApi": {
    "full_properties": {
      "AuthenticationType": {
        "description": "Security configuration for your GraphQL API. For allowed values (such as API_KEY, AWS_IAM, or AMAZON_COGNITO_USER_POOLS, OPENID_CONNECT), see Security in the AWS AppSync Developer Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "LogConfig": {
        "description": "Logging configuration when writing GraphQL operations and tracing to Amazon Cloudwatch.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "Friendly name for your GraphQL API in AWS AppSync.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "OpenIDConnectConfig": {
        "description": "Optional authorization configuration for using an OpenId Connect compliant service with your GraphQL endpoint.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "UserPoolConfig": {
        "description": "Optional authorization configuration for using Amazon Cognito User Pools with your GraphQL endpoint.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appsync-graphqlapi.html",
    "properties": [
      "UserPoolConfig",
      "OpenIDConnectConfig",
      "Name",
      "AuthenticationType",
      "LogConfig"
    ]
  },
  "AWS::AppSync::GraphQLSchema": {
    "full_properties": {
      "ApiId": {
        "description": "The AWS AppSync GraphQL API identifier to which you will apply this schema.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Definition": {
        "description": "The text representation of a GraphQL schema in SDL format.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefinitionS3Location": {
        "description": "A location of a GraphQL schema file on an S3 bucket if you wish to provision with the schema living in S3 rather than embedded in your CloudFormation template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-appsync-graphqlschema.html",
    "properties": [
      "Definition",
      "DefinitionS3Location",
      "ApiId"
    ]
  },
  "AWS::AppSync::Resolver": {
    "full_properties": {
      "ApiId": {
        "description": "The AWS AppSync GraphQL API which you will attach this resolver.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DataSourceName": {
        "description": "The AWS AppSync data source that this resolver will run against in order to return data to the caller.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "FieldName": {
        "description": "The GraphQL field on a type that will invoke the resolver.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RequestMappingTemplate": {
        "description": "The resolver’s request mapping template, written in text within the CloudFormation template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RequestMappingTemplateS3Location": {
        "description": "A location of a request mapping template on an S3 bucket if you wish to provision with the template file living in S3 rather than embedded in your CloudFormation template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResponseMappingTemplate": {
        "description": "The resolver’s response mapping template, written in text within the CloudFormation template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResponseMappingTemplateS3Location": {
        "description": "A location of a response mapping template on an S3 bucket if you wish to provision with the template file living in S3 rather than embedded in your CloudFormation template.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TypeName": {
        "description": "The GraphQL type that will invoke this resolver.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-appsync-resolver.html",
    "properties": [
      "ResponseMappingTemplateS3Location",
      "TypeName",
      "DataSourceName",
      "RequestMappingTemplate",
      "ResponseMappingTemplate",
      "RequestMappingTemplateS3Location",
      "ApiId",
      "FieldName"
    ]
  },
  "AWS::ApplicationAutoScaling::ScalableTarget": {
    "full_properties": {
      "MaxCapacity": {
        "description": "The maximum value that Application Auto Scaling can use to scale a target during a scaling activity.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "MinCapacity": {
        "description": "The minimum value that Application Auto Scaling can use to scale a target during a scaling activity.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "ResourceId": {
        "description": "The resource identifier to associate with this scalable target. This string consists of the resource type and unique identifier. For more information, see the ResourceId parameter for the RegisterScalableTarget action in the Application Auto Scaling API Reference, or see the ScalableTarget examples.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleARN": {
        "description": "The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that allows Application Auto Scaling to modify your scalable target.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ScalableDimension": {
        "description": "The scalable dimension that's associated with the scalable target. Specify the service namespace, resource type, and scaling property—for example, ecs:service:DesiredCount for the desired task count of an Amazon Elastic Container Service service. For valid values, see the ScalableDimension content for the ScalingPolicy data type in the Application Auto Scaling API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ScheduledActions": {
        "description": "The scheduled actions for the scalable target. Duplicates aren't allowed.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ServiceNamespace": {
        "description": "The AWS service namespace of the scalable target. For a list of service namespaces, see AWS Service Namespaces in the AWS General Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-applicationautoscaling-scalabletarget.html",
    "properties": [
      "MaxCapacity",
      "MinCapacity",
      "ResourceId",
      "RoleARN",
      "ScalableDimension",
      "ScheduledActions",
      "ServiceNamespace"
    ]
  },
  "AWS::ApplicationAutoScaling::ScalingPolicy": {
    "full_properties": {
      "PolicyName": {
        "description": "A name for the scaling policy.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PolicyType": {
        "description": "An Application Auto Scaling policy type.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ResourceId": {
        "description": "The unique resource identifier for the scalable target that this scaling policy applies to. For more information, see the ResourceId parameter for the PutScalingPolicy action in the Application Auto Scaling API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ScalableDimension": {
        "description": "The scalable dimension of the scalable target that this scaling policy applies to. The scalable dimension contains the service namespace, resource type, and scaling property, such as ecs:service:DesiredCount for the desired task count of an Amazon ECS service.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ScalingTargetId": {
        "description": "The AWS CloudFormation-generated ID of an Application Auto Scaling scalable target. For more information about the ID, see the Return Value section of the AWS::ApplicationAutoScaling::ScalableTarget resource.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceNamespace": {
        "description": "The AWS service namespace of the scalable target that this scaling policy applies to. For a list of service namespaces, see AWS Service Namespaces in the AWS General Reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StepScalingPolicyConfiguration": {
        "description": "A step policy that configures when Application Auto Scaling scales resources up or down, and by how much.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TargetTrackingScalingPolicyConfiguration": {
        "description": "Configures a target tracking scaling policy.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-applicationautoscaling-scalingpolicy.html",
    "properties": [
      "PolicyName",
      "PolicyType",
      "ResourceId",
      "ScalableDimension",
      "ServiceNamespace",
      "ScalingTargetId",
      "StepScalingPolicyConfiguration",
      "TargetTrackingScalingPolicyConfiguration"
    ]
  },
  "AWS::Athena::NamedQuery": {
    "full_properties": {
      "Database": {
        "description": "The database to which the query belongs.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "A brief description of the query.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The plain-language name of the query.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "QueryString": {
        "description": "The SQL query statements that comprise the query.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-athena-namedquery.html",
    "properties": [
      "Description",
      "QueryString",
      "Database",
      "Name"
    ]
  },
  "AWS::AutoScaling::AutoScalingGroup": {
    "full_properties": {
      "AutoScalingGroupName": {
        "description": "The name of the Auto Scaling group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "AvailabilityZones": {
        "description": "Contains a list of availability zones for the group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Cooldown": {
        "description": "The number of seconds after a scaling activity is completed before any further scaling activities can start.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DesiredCapacity": {
        "description": "Specifies the desired capacity for the Auto Scaling group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HealthCheckGracePeriod": {
        "description": "The length of time in seconds after a new EC2 instance comes into service that Auto Scaling starts checking its health.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "HealthCheckType": {
        "description": "The service you want the health status from, Amazon EC2 or Elastic Load Balancer. Valid values are EC2 or ELB.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceId": {
        "description": "The ID of the Amazon EC2 instance you want to use to create the Auto Scaling group. Use this property if you want to create an Auto Scaling group that uses an existing Amazon EC2 instance instead of a launch configuration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LaunchConfigurationName": {
        "description": "Specifies the name of the associated AWS::AutoScaling::LaunchConfiguration resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LaunchTemplate": {
        "description": "The launch template to use to launch instances.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LifecycleHookSpecificationList": {
        "description": "The lifecycle hooks for the group, which specify actions to perform when Auto Scaling launches or terminates instances. For more information, see Amazon EC2 Auto Scaling Lifecycle Hooks in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "LoadBalancerNames": {
        "description": "A list of Classic load balancers associated with this Auto Scaling group. To specify Application load balancers, use TargetGroupARNs.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MaxSize": {
        "description": "The maximum size of the Auto Scaling group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "MetricsCollection": {
        "description": "Enables the monitoring of group metrics of an Auto Scaling group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MinSize": {
        "description": "The minimum size of the Auto Scaling group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "NotificationConfigurations": {
        "description": "An embedded property that configures an Auto Scaling group to send notifications when specified events take place.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PlacementGroup": {
        "description": "The name of an existing cluster placement group into which you want to launch your instances. A placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a placement group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ServiceLinkedRoleARN": {
        "description": "The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf. By default, Auto Scaling uses a service-linked role named AWSServiceRoleForAutoScaling, which it creates if it does not exist.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The Auto Scaling tags to attach to this resource. For more information about Auto Scaling tags, see Tagging Auto Scaling Groups and Instances in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetGroupARNs": {
        "description": "A list of Amazon Resource Names (ARN) of target groups to associate with the Auto Scaling group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TerminationPolicies": {
        "description": "A policy or a list of policies that are used to select the instances to terminate. The policies are executed in the order that you list them.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VPCZoneIdentifier": {
        "description": "A list of subnet identifiers of Amazon Virtual Private Cloud (Amazon VPCs).",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-properties-as-group.html",
    "properties": [
      "AutoScalingGroupName",
      "AvailabilityZones",
      "Cooldown",
      "DesiredCapacity",
      "HealthCheckGracePeriod",
      "HealthCheckType",
      "InstanceId",
      "LaunchConfigurationName",
      "LaunchTemplate",
      "LifecycleHookSpecificationList",
      "LoadBalancerNames",
      "MaxSize",
      "MetricsCollection",
      "MinSize",
      "NotificationConfigurations",
      "PlacementGroup",
      "ServiceLinkedRoleARN",
      "Tags",
      "TargetGroupARNs",
      "TerminationPolicies",
      "VPCZoneIdentifier"
    ]
  },
  "AWS::AutoScaling::LaunchConfiguration": {
    "full_properties": {
      "AssociatePublicIpAddress": {
        "description": "For Amazon EC2 instances in a VPC, indicates whether instances in the Auto Scaling group receive public IP addresses. If you specify true, each instance in the Auto Scaling receives a unique public IP address.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "BlockDeviceMappings": {
        "description": "Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "ClassicLinkVPCId": {
        "description": "The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to. You can specify this property only for EC2-Classic instances. For more information, see ClassicLink in the Amazon Elastic Compute Cloud User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClassicLinkVPCSecurityGroups": {
        "description": "The IDs of one or more security groups for the VPC that you specified in the ClassicLinkVPCId property.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "EbsOptimized": {
        "description": "Specifies whether the launch configuration is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "IamInstanceProfile": {
        "description": "Provides the name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ImageId": {
        "description": "Provides the unique ID of the Amazon Machine Image (AMI) that was assigned during registration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceId": {
        "description": "The ID of the Amazon EC2 instance you want to use to create the launch configuration. Use this property if you want the launch configuration to use settings from an existing Amazon EC2 instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceMonitoring": {
        "description": "Indicates whether detailed instance monitoring is enabled for the Auto Scaling group. By default, this property is set to true (enabled).",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "InstanceType": {
        "description": "Specifies the instance type of the EC2 instance.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "KernelId": {
        "description": "Provides the ID of the kernel associated with the EC2 AMI.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "KeyName": {
        "description": "Provides the name of the EC2 key pair.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LaunchConfigurationName": {
        "description": "The name of the launch configuration. This name must be unique within the scope of your AWS account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PlacementTenancy": {
        "description": "The tenancy of the instance. An instance with a tenancy of dedicated runs on single-tenant hardware and can only be launched in a VPC. You must set the value of this parameter to dedicated if want to launch dedicated instances in a shared tenancy VPC (a VPC with the instance placement tenancy attribute set to default). For more information, see CreateLaunchConfiguration in the Amazon EC2 Auto Scaling API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RamDiskId": {
        "description": "The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, refer to the AWS Resource Center and search for the kernel ID.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityGroups": {
        "description": "A list that contains the EC2 security groups to assign to the instances in the Auto Scaling group. The list can contain the IDs of existing EC2 security groups or references to AWS::EC2::SecurityGroup resources created in the template.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SpotPrice": {
        "description": "The spot price for this Auto Scaling group. If a spot price is set, then the Auto Scaling group will launch when the current spot price is less than the amount specified in the template.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserData": {
        "description": "The user data available to the launched EC2 instances.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-properties-as-launchconfig.html",
    "properties": [
      "AssociatePublicIpAddress",
      "BlockDeviceMappings",
      "ClassicLinkVPCId",
      "ClassicLinkVPCSecurityGroups",
      "EbsOptimized",
      "IamInstanceProfile",
      "ImageId",
      "InstanceId",
      "InstanceMonitoring",
      "InstanceType",
      "KernelId",
      "KeyName",
      "LaunchConfigurationName",
      "PlacementTenancy",
      "RamDiskId",
      "SecurityGroups",
      "SpotPrice",
      "UserData"
    ]
  },
  "AWS::AutoScaling::LifecycleHook": {
    "full_properties": {
      "AutoScalingGroupName": {
        "description": "The name of the Auto Scaling group for the lifecycle hook.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DefaultResult": {
        "description": "The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. Valid values are CONTINUE (default) and ABANDON.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HeartbeatTimeout": {
        "description": "The amount of time that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action that you specified in the DefaultResult property.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "LifecycleHookName": {
        "description": "The name of the lifecycle hook. Length Constraints: Minimum length of 1. Maximum length of 255.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LifecycleTransition": {
        "description": "The state of the Amazon EC2 instance to which you want to attach the lifecycle hook. For valid values, see the LifecycleTransition content for the LifecycleHook data type in the Amazon EC2 Auto Scaling API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "NotificationMetadata": {
        "description": "Additional information that you want to include when Auto Scaling sends a message to the notification target.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NotificationTargetARN": {
        "description": "The Amazon resource name (ARN) of the notification target that Auto Scaling uses to notify you when an instance is in the transition state for the lifecycle hook. You can specify an Amazon SQS queue or an Amazon SNS topic. The notification message includes the following information: lifecycle action token, user account ID, Auto Scaling group name, lifecycle hook name, instance ID, lifecycle transition, and notification metadata.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RoleARN": {
        "description": "The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target. The role requires permissions to Amazon SNS and Amazon SQS.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-as-lifecyclehook.html",
    "properties": [
      "AutoScalingGroupName",
      "DefaultResult",
      "HeartbeatTimeout",
      "LifecycleHookName",
      "LifecycleTransition",
      "NotificationMetadata",
      "NotificationTargetARN",
      "RoleARN"
    ]
  },
  "AWS::AutoScaling::ScalingPolicy": {
    "full_properties": {
      "AdjustmentType": {
        "description": "Specifies whether the ScalingAdjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AutoScalingGroupName": {
        "description": "The name or Amazon Resource Name (ARN) of the Auto Scaling Group that you want to attach the policy to.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Cooldown": {
        "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EstimatedInstanceWarmup": {
        "description": "The estimated time, in seconds, until a newly launched instance can send metrics to CloudWatch. By default, Auto Scaling uses the cooldown period, as specified in the Cooldown property.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MetricAggregationType": {
        "description": "The aggregation type for the CloudWatch metrics. You can specify Minimum, Maximum, or Average. By default, AWS CloudFormation specifies Average.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MinAdjustmentMagnitude": {
        "description": "For the PercentChangeInCapacity adjustment type, the minimum number of instances to scale. The scaling policy changes the desired capacity of the Auto Scaling group by a minimum of this many instances. This property replaces the MinAdjustmentStep property.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "PolicyType": {
        "description": "An Auto Scaling policy type. You can specify SimpleScaling, StepScaling, or TargetTrackingScaling. By default, AWS CloudFormation specifies SimpleScaling. For more information, see Dynamic Scaling in the Amazon EC2 Auto Scaling User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ScalingAdjustment": {
        "description": "The number of instances by which to scale. The AdjustmentType property determines if AWS CloudFormation interprets this number as an absolute number (when the ExactCapacity value is specified), increase or decrease capacity by a specified number (when the ChangeInCapacity value is specified), or increase or decrease capacity as a percentage of the existing Auto Scaling group size (when the PercentChangeInCapacity value is specified). A positive value adds to the current capacity and a negative value subtracts from the current capacity. For exact capacity, you must specify a positive value.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StepAdjustments": {
        "description": "A set of adjustments that enable you to scale based on the size of the alarm breach.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetTrackingConfiguration": {
        "description": "Configures a target tracking scaling policy.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-as-policy.html",
    "properties": [
      "AdjustmentType",
      "AutoScalingGroupName",
      "Cooldown",
      "EstimatedInstanceWarmup",
      "MetricAggregationType",
      "MinAdjustmentMagnitude",
      "PolicyType",
      "ScalingAdjustment",
      "StepAdjustments",
      "TargetTrackingConfiguration"
    ]
  },
  "AWS::AutoScaling::ScheduledAction": {
    "full_properties": {
      "AutoScalingGroupName": {
        "description": "The name or ARN of the Auto Scaling group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DesiredCapacity": {
        "description": "The number of Amazon EC2 instances that should be running in the Auto Scaling group. At least one of MaxSize, MinSize, or DesiredCapacity must be specified.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "EndTime": {
        "description": "The time in UTC for this schedule to end. For example, 2010-06-01T00:00:00Z.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MaxSize": {
        "description": "The maximum number of Amazon EC2 instances in the Auto Scaling group. At least one of MaxSize, MinSize, or DesiredCapacity must be specified.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MinSize": {
        "description": "The minimum number of Amazon EC2 instances in the Auto Scaling group. At least one of MaxSize, MinSize, or DesiredCapacity must be specified.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Recurrence": {
        "description": "The time in UTC when recurring future actions will start. You specify the start time by following the Unix cron syntax format. For more information about cron syntax, go to http://en.wikipedia.org/wiki/Cron.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "StartTime": {
        "description": "The time in UTC for this schedule to start. For example, 2010-06-01T00:00:00Z.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-as-scheduledaction.html",
    "properties": [
      "AutoScalingGroupName",
      "DesiredCapacity",
      "EndTime",
      "MaxSize",
      "MinSize",
      "Recurrence",
      "StartTime"
    ]
  },
  "AWS::AutoScalingPlans::ScalingPlan": {
    "full_properties": {
      "ApplicationSource": {
        "description": "A CloudFormation stack or a set of tags. You can create one scaling plan per application source.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ScalingInstructions": {
        "description": "The scaling instructions.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-autoscalingplans-scalingplan.html",
    "properties": [
      "ApplicationSource",
      "ScalingInstructions"
    ]
  },
  "AWS::Batch::ComputeEnvironment": {
    "full_properties": {
      "ComputeEnvironmentName": {
        "description": "The name of the compute environment.",
        "required": false,
        "type": "String",
        "update_causes": "unknown"
      },
      "ComputeResources": {
        "description": "The compute resources defined for the compute environment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "unknown"
      },
      "ServiceRole": {
        "description": "The service role associated with the compute environment that allows AWS Batch to make calls to AWS API operations on your behalf.",
        "required": false,
        "type": "String",
        "update_causes": "unknown"
      },
      "State": {
        "description": "The state of the compute environment. The valid values are ENABLED or DISABLED. An ENABLED state indicates that you can register instances with the compute environment and that the associated instances can accept jobs.",
        "required": false,
        "type": "String",
        "update_causes": "unknown"
      },
      "Type": {
        "description": "The type of the compute environment.",
        "required": false,
        "type": "String",
        "update_causes": "unknown"
      }
    },
    "path": "aws-resource-batch-computeenvironment.html",
    "properties": [
      "Type",
      "ServiceRole",
      "ComputeEnvironmentName",
      "ComputeResources",
      "State"
    ]
  },
  "AWS::Batch::JobDefinition": {
    "full_properties": {
      "ContainerProperties": {
        "description": "An object with various properties specific to container-based jobs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "unknown"
      },
      "JobDefinitionName": {
        "description": "The name of the job definition.",
        "required": false,
        "type": "String",
        "update_causes": "unknown"
      },
      "Parameters": {
        "description": "Default parameters or parameter substitution placeholders that are set in the job definition. Parameters are specified as a key-value pair mapping.",
        "required": false,
        "type": "Unknown",
        "update_causes": "unknown"
      },
      "RetryStrategy": {
        "description": "The retry strategy to use for failed jobs that are submitted with this job definition.",
        "required": false,
        "type": "Unknown",
        "update_causes": "unknown"
      },
      "Type": {
        "description": "The type of job definition.",
        "required": false,
        "type": "String",
        "update_causes": "unknown"
      }
    },
    "path": "aws-resource-batch-jobdefinition.html",
    "properties": [
      "Type",
      "Parameters",
      "JobDefinitionName",
      "ContainerProperties",
      "RetryStrategy"
    ]
  },
  "AWS::Batch::JobQueue": {
    "full_properties": {
      "ComputeEnvironmentOrder": {
        "description": "The compute environments that are attached to the job queue and the order in which job placement is preferred. Compute environments are selected for job placement in ascending order.",
        "required": false,
        "type": "Array",
        "update_causes": "unknown"
      },
      "JobQueueName": {
        "description": "The name of the job queue.",
        "required": false,
        "type": "String",
        "update_causes": "unknown"
      },
      "Priority": {
        "description": "The priority of the job queue.",
        "required": false,
        "type": "Number",
        "update_causes": "unknown"
      },
      "State": {
        "description": "The status of the job queue (for example, CREATING or VALID).",
        "required": false,
        "type": "String",
        "update_causes": "unknown"
      }
    },
    "path": "aws-resource-batch-jobqueue.html",
    "properties": [
      "ComputeEnvironmentOrder",
      "State",
      "Priority",
      "JobQueueName"
    ]
  },
  "AWS::Budgets::Budget": {
    "full_properties": {
      "Budget": {
        "description": "The budget for tracking your service usage, costs, and RI utilization. Single accounts and master and member accounts in an organization can, by default, create budgets.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "NotificationsWithSubscribers": {
        "description": "The notification that you want associated with the budget. A budget can have up to five notifications, and each notification can have one SNS subscriber and up to ten email subscribers.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-budgets-budget.html",
    "properties": [
      "NotificationsWithSubscribers",
      "Budget"
    ]
  },
  "AWS::CertificateManager::Certificate": {
    "full_properties": {
      "DomainName": {
        "description": "Fully qualified domain name (FQDN), such as www.example.com, of the site that you want to secure with the ACM certificate. To protect several sites in the same domain, use an asterisk (*) to specify a wildcard. For example, *.example.com protects www.example.com, site.example.com, and images.example.com.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DomainValidationOptions": {
        "description": "Domain information that domain name registrars use to verify your identity. For more information and the default values, see Configure Email for Your Domain and Validate Domain Ownership in the AWS Certificate Manager User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SubjectAlternativeNames": {
        "description": "FQDNs to be included in the Subject Alternative Name extension of the ACM certificate. For example, you can add www.example.net to a certificate for the www.example.com domain name so that users can reach your site by using either name.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this ACM certificate.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-certificatemanager-certificate.html",
    "properties": [
      "DomainName",
      "DomainValidationOptions",
      "SubjectAlternativeNames",
      "Tags"
    ]
  },
  "AWS::Cloud9::EnvironmentEC2": {
    "full_properties": {
      "AutomaticStopTimeMinutes": {
        "description": "The number of minutes until the running instance is shut down after the environment has last been used.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description of the environment to create.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceType": {
        "description": "The type of instance to host the environment on (for example, t2.micro).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the environment to create.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "OwnerArn": {
        "description": "The Amazon Resource Name (ARN) of the environment owner. If this value is not specified, the ARN defaults to this environment's creator.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Repositories": {
        "description": "Any AWS CodeCommit source code repositories to be cloned into the development environment.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SubnetId": {
        "description": "The ID of the subnet in Amazon Virtual Private Cloud (Amazon VPC) to use.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cloud9-environmentec2.html",
    "properties": [
      "Repositories",
      "OwnerArn",
      "Description",
      "AutomaticStopTimeMinutes",
      "InstanceType",
      "Name",
      "SubnetId"
    ]
  },
  "AWS::CloudFormation::Authentication": {
    "full_properties": {
      "accessKeyId": {
        "description": "Specifies the access key ID for S3 authentication.",
        "required": false,
        "type": "String",
        "update_causes": "unknown"
      },
      "buckets": {
        "description": "A comma-delimited list of Amazon S3 buckets to be associated with the S3 authentication credentials.",
        "required": false,
        "type": "Array",
        "update_causes": "unknown"
      },
      "password": {
        "description": "Specifies the password for basic authentication.",
        "required": false,
        "type": "String",
        "update_causes": "unknown"
      },
      "roleName": {
        "description": "Describes the role for role-based authentication.",
        "required": false,
        "type": "String",
        "update_causes": "unknown"
      },
      "secretKey": {
        "description": "Specifies the secret key for S3 authentication.",
        "required": false,
        "type": "String",
        "update_causes": "unknown"
      },
      "type": {
        "description": "Specifies whether the authentication scheme uses a user name and password (\"basic\") or an access key ID and secret key (\"S3\").",
        "required": true,
        "type": "String",
        "update_causes": "unknown"
      },
      "uris": {
        "description": "A comma-delimited list of URIs to be associated with the basic authentication credentials. The authorization applies to the specified URIs and any more specific URI. For example, if you specify http://www.example.com, the authorization will also apply to http://www.example.com/test.",
        "required": false,
        "type": "Array",
        "update_causes": "unknown"
      },
      "username": {
        "description": "Specifies the user name for basic authentication.",
        "required": false,
        "type": "String",
        "update_causes": "unknown"
      }
    },
    "path": "aws-resource-authentication.html",
    "properties": [
      "accessKeyId",
      "buckets",
      "password",
      "secretKey",
      "type",
      "uris",
      "username",
      "roleName"
    ]
  },
  "AWS::CloudFormation::CustomResource": {
    "full_properties": {
      "ServiceToken": {
        "description": "The service token that was given to the template developer by the service provider to access the service, such as an Amazon SNS topic ARN or Lambda function ARN. The service token must be from the same region in which you are creating the stack.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      }
    },
    "path": "aws-resource-cfn-customresource.html",
    "properties": [
      "ServiceToken"
    ]
  },
  "AWS::CloudFormation::Interface": {
    "full_properties": {
      "ParameterGroups": {
        "description": "A list of parameter group types, where you specify group names, the parameters in each group, and the order in which the parameters are shown.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ParameterLabels": {
        "description": "A mapping of parameters and their friendly names that the AWS CloudFormation console shows when a stack is created or updated.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudformation-interface.html",
    "properties": [
      "ParameterGroups",
      "ParameterLabels"
    ]
  },
  "AWS::CloudFormation::Stack": {
    "full_properties": {
      "NotificationARNs": {
        "description": "A list of existing Amazon SNS topics where notifications about stack events are sent.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Parameters": {
        "description": "The set of parameters passed to AWS CloudFormation when this nested stack is created.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) to describe this stack.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TemplateURL": {
        "description": "The URL of a template that specifies the stack that you want to create as a resource.  Template files can use any extension, such as .json, .yaml, .template, or .txt. The template must be stored on an Amazon S3 bucket, so the URL must have the form: https://s3.amazonaws.com/.../TemplateName.extension",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "TimeoutInMinutes": {
        "description": "The length of time, in minutes, that AWS CloudFormation waits for the nested stack to reach the CREATE_COMPLETE state. The default is no timeout. When AWS CloudFormation detects that the nested stack has reached the CREATE_COMPLETE state, it marks the nested stack resource as CREATE_COMPLETE in the parent stack and resumes creating the parent stack. If the timeout period expires before the nested stack reaches CREATE_COMPLETE, AWS CloudFormation marks the nested stack as failed and rolls back both the nested stack and parent stack.",
        "required": false,
        "type": "Number",
        "update_causes": "unavailable"
      }
    },
    "path": "aws-properties-stack.html",
    "properties": [
      "NotificationARNs",
      "Parameters",
      "Tags",
      "TemplateURL",
      "TimeoutInMinutes"
    ]
  },
  "AWS::CloudFormation::WaitCondition": {
    "full_properties": {
      "Count": {
        "description": "The number of success signals that AWS CloudFormation must receive before it continues the stack creation process. When the wait condition receives the requisite number of success signals, AWS CloudFormation resumes the creation of the stack. If the wait condition does not receive the specified number of success signals before the Timeout period expires, AWS CloudFormation assumes that the wait condition has failed and rolls the stack back.",
        "required": false,
        "type": "Number",
        "update_causes": "unavailable"
      },
      "Handle": {
        "description": "A reference to the wait condition handle used to signal this wait condition. Use the Ref intrinsic function to specify an AWS::CloudFormation::WaitConditionHandle resource.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Timeout": {
        "description": "The length of time (in seconds) to wait for the number of signals that the Count property specifies. Timeout is a minimum-bound property, meaning the timeout occurs no sooner than the time you specify, but can occur shortly thereafter. The maximum time that can be specified for this property is 12 hours (43200 seconds).",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      }
    },
    "path": "aws-properties-waitcondition.html",
    "properties": [
      "Count",
      "Handle",
      "Timeout"
    ]
  },
  "AWS::CloudFront::CloudFrontOriginAccessIdentity": {
    "full_properties": {
      "CloudFrontOriginAccessIdentityConfig": {
        "description": "The configuration of the CloudFront origin access identity.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudfront-cloudfrontoriginaccessidentity.html",
    "properties": [
      "CloudFrontOriginAccessIdentityConfig"
    ]
  },
  "AWS::CloudFront::Distribution": {
    "full_properties": {
      "DistributionConfig": {
        "description": "The distribution's configuration information.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) to associate with a CloudFront distribution.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudfront-distribution.html",
    "properties": [
      "DistributionConfig",
      "Tags"
    ]
  },
  "AWS::CloudFront::StreamingDistribution": {
    "full_properties": {
      "StreamingDistributionConfig": {
        "description": "Information about the configuration of the RMTP streaming distribution.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Key-value tags to assign to this streaming distribution.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cloudfront-streamingdistribution.html",
    "properties": [
      "StreamingDistributionConfig",
      "Tags"
    ]
  },
  "AWS::CloudTrail::Trail": {
    "full_properties": {
      "CloudWatchLogsLogGroupArn": {
        "description": "The Amazon Resource Name (ARN) of a log group to which CloudTrail logs will be delivered.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CloudWatchLogsRoleArn": {
        "description": "The role ARN that Amazon CloudWatch Logs (CloudWatch Logs) assumes to write logs to a log group. For more information, see Role Policy Document for CloudTrail to Use CloudWatch Logs for Monitoring in the AWS CloudTrail User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EnableLogFileValidation": {
        "description": "Indicates whether CloudTrail validates the integrity of log files. By default, AWS CloudFormation sets this value to false. When you disable log file integrity validation, CloudTrail stops creating digest files. For more information, see CreateTrail in the AWS CloudTrail API Reference.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EventSelectors": {
        "description": "Configures logging for management and data events.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "IncludeGlobalServiceEvents": {
        "description": "Indicates whether the trail is publishing events from global services, such as IAM, to the log files. By default, AWS CloudFormation sets this value to false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "IsLogging": {
        "description": "Indicates whether the CloudTrail trail is currently logging AWS API calls.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "IsMultiRegionTrail": {
        "description": "Indicates whether the CloudTrail trail is created in the region in which you create the stack (false) or in all regions (true). By default, AWS CloudFormation sets this value to false. For more information, see How Does CloudTrail Behave Regionally and Globally? in the AWS CloudTrail User Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "KMSKeyId": {
        "description": "The AWS Key Management Service (AWS KMS) key ID that you want to use to encrypt CloudTrail logs. You can specify an alias name (prefixed with alias/), an alias ARN, a key ARN, or a globally unique identifier.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "S3BucketName": {
        "description": "The name of the Amazon S3 bucket where CloudTrail publishes log files.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "S3KeyPrefix": {
        "description": "An Amazon S3 object key prefix that precedes the name of all log files.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SnsTopicName": {
        "description": "The name of an Amazon SNS topic that is notified when new log files are published.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this trail.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TrailName": {
        "description": "The name of the trail. For constraint information, see CreateTrail in the AWS CloudTrail API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cloudtrail-trail.html",
    "properties": [
      "CloudWatchLogsLogGroupArn",
      "CloudWatchLogsRoleArn",
      "EnableLogFileValidation",
      "EventSelectors",
      "IncludeGlobalServiceEvents",
      "IsLogging",
      "IsMultiRegionTrail",
      "KMSKeyId",
      "S3BucketName",
      "S3KeyPrefix",
      "SnsTopicName",
      "Tags",
      "TrailName"
    ]
  },
  "AWS::CloudWatch::Alarm": {
    "full_properties": {
      "ActionsEnabled": {
        "description": "Indicates whether actions should be executed during changes to the CloudWatch alarm's state.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AlarmActions": {
        "description": "The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action as an Amazon Resource Name (ARN). For more information about creating alarms and the actions that you can specify, see PutMetricAlarm in the Amazon CloudWatch API Reference and Creating Amazon CloudWatch Alarms in the Amazon CloudWatch User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AlarmDescription": {
        "description": "The description of the alarm.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AlarmName": {
        "description": "A name for the alarm. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the alarm name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ComparisonOperator": {
        "description": "The arithmetic operation to use when comparing the specified Statistic and Threshold. AWS CloudFormation uses the value of Statistic as the first operand.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Dimensions": {
        "description": "The dimensions of the metric for the alarm.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EvaluateLowSampleCountPercentile": {
        "description": "Used only for alarms that are based on percentiles. Specifies whether to evaluate the data and potentially change the alarm state if there are too few data points to be statistically significant.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EvaluationPeriods": {
        "description": "The number of periods over which data is compared to the specified threshold.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "ExtendedStatistic": {
        "description": "The percentile statistic for the metric. Specify a value between p0.0 and p100.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InsufficientDataActions": {
        "description": "The list of actions to execute when this alarm transitions into an INSUFFICIENT_DATA state. Specify each action as an Amazon Resource Number (ARN). Currently, the only action supported is publishing to an Amazon SNS topic or an Auto Scaling policy.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MetricName": {
        "description": "The name of the metric associated with the alarm. For more information about the metrics that you can specify, see Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference in the Amazon CloudWatch User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Namespace": {
        "description": "The namespace of the metric that is associated with the alarm.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "OKActions": {
        "description": "The list of actions to execute when this alarm transitions into an OK state. Specify each action as an Amazon Resource Number (ARN). Currently, the only action supported is publishing to an SNS topic or an Auto Scaling policy.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Period": {
        "description": "The time over which the specified statistic is applied. Specify time in seconds, in multiples of 60.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "Statistic": {
        "description": "The statistic to apply to the alarm's associated metric.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Threshold": {
        "description": "The value against which the specified statistic is compared.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TreatMissingData": {
        "description": "Sets how this alarm is to handle missing data points. If TreatMissingData is omitted, the default behavior of missing is used. For more information, see PutMetricAlarm in the Amazon CloudWatch API Reference and Configuring How CloudWatch Alarms Treats Missing Data in the Amazon CloudWatch User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Unit": {
        "description": "The unit for the metric that is associated with the alarm.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-cw-alarm.html",
    "properties": [
      "ActionsEnabled",
      "AlarmActions",
      "AlarmDescription",
      "AlarmName",
      "ComparisonOperator",
      "Dimensions",
      "EvaluateLowSampleCountPercentile",
      "EvaluationPeriods",
      "ExtendedStatistic",
      "InsufficientDataActions",
      "MetricName",
      "Namespace",
      "OKActions",
      "Period",
      "Statistic",
      "Threshold",
      "TreatMissingData",
      "Unit"
    ]
  },
  "AWS::CloudWatch::Dashboard": {
    "full_properties": {
      "DashboardBody": {
        "description": "A JSON string that defines the widgets contained in the dashboard and their location. For information about how to format this string, see Dashboard Body Structure and Syntax.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DashboardName": {
        "description": "A name for the dashboard. The name must be between 1 and 255 characters. If you do not specify a name, one will be generated automatically.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-properties-cw-dashboard.html",
    "properties": [
      "DashboardName",
      "DashboardBody"
    ]
  },
  "AWS::CodeBuild::Project": {
    "full_properties": {
      "Artifacts": {
        "description": "The output settings for artifacts that the project generates during a build.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BadgeEnabled": {
        "description": "Indicates whether AWS CodeBuild generates a publicly accessible URL for your project's build badge. For more information, see Build Badges Sample in the AWS CodeBuild User Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Cache": {
        "description": "Settings that AWS CodeBuild uses to store and reuse build dependencies.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the project. Use the description to identify the purpose of the project.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EncryptionKey": {
        "description": "The alias or Amazon Resource Name (ARN) of the AWS Key Management Service (AWS KMS) customer master key (CMK) that AWS CodeBuild uses to encrypt the build output. If you don't specify a value, AWS CodeBuild uses the AWS-managed CMK for Amazon Simple Storage Service.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Environment": {
        "description": "The build environment settings for the project, such as the environment type or the environment variables to use for the build environment.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the project. The name must be unique across all of the projects in your AWS account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceRole": {
        "description": "The ARN of the service role that AWS CodeBuild uses to interact with services on your behalf.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Source": {
        "description": "The source code settings for the project, such as the source code's repository type and location.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key-value pairs) for the AWS CodeBuild project.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TimeoutInMinutes": {
        "description": "The number of minutes after which AWS CodeBuild stops the build if it's not complete. For valid values, see the timeoutInMinutes field in the AWS CodeBuild User Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Triggers": {
        "description": "For an existing AWS CodeBuild build project that has its source code stored in a GitHub repository, enables AWS CodeBuild to begin automatically rebuilding the source code every time a code change is pushed to the repository.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VpcConfig": {
        "description": "Settings that enable AWS CodeBuild to access resources in an Amazon VPC. For more information, see Use AWS CodeBuild with Amazon Virtual Private Cloud in the AWS CodeBuild User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-codebuild-project.html",
    "properties": [
      "Artifacts",
      "BadgeEnabled",
      "Cache",
      "Description",
      "EncryptionKey",
      "Environment",
      "Name",
      "ServiceRole",
      "Source",
      "Tags",
      "TimeoutInMinutes",
      "Triggers",
      "VpcConfig"
    ]
  },
  "AWS::CodeCommit::Repository": {
    "full_properties": {
      "RepositoryDescription": {
        "description": "A description about the AWS CodeCommit repository. For constraints, see the CreateRepository action in the AWS CodeCommit API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RepositoryName": {
        "description": "A name for the AWS CodeCommit repository.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Triggers": {
        "description": "Defines the actions to take in response to events that occur in the repository. For example, you can send email notifications when someone pushes to the repository.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-codecommit-repository.html",
    "properties": [
      "RepositoryDescription",
      "RepositoryName",
      "Triggers"
    ]
  },
  "AWS::CodeDeploy::Application": {
    "full_properties": {
      "ApplicationName": {
        "description": "A name for the application. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the application name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "unavailable"
      },
      "ComputePlatform": {
        "description": "The compute platform that AWS CodeDeploy deploys the application to.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-codedeploy-application.html",
    "properties": [
      "ApplicationName",
      "ComputePlatform"
    ]
  },
  "AWS::CodeDeploy::DeploymentConfig": {
    "full_properties": {
      "DeploymentConfigName": {
        "description": "A name for the deployment configuration. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the deployment configuration name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "MinimumHealthyHosts": {
        "description": "The minimum number of healthy instances that must be available at any time during an AWS CodeDeploy deployment. For example, for a fleet of nine instances, if you specify a minimum of six healthy instances, AWS CodeDeploy deploys your application up to three instances at a time so that you always have six healthy instances. The deployment succeeds if your application successfully deploys to six or more instances; otherwise, the deployment fails.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-codedeploy-deploymentconfig.html",
    "properties": [
      "DeploymentConfigName",
      "MinimumHealthyHosts"
    ]
  },
  "AWS::CodeDeploy::DeploymentGroup": {
    "full_properties": {
      "AlarmConfiguration": {
        "description": "Information about the Amazon CloudWatch alarms that are associated with the deployment group.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ApplicationName": {
        "description": "The name of an existing AWS CodeDeploy application to associate this deployment group with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AutoRollbackConfiguration": {
        "description": "Information about the automatic rollback configuration that is associated with the deployment group. If you specify this property, don't specify the Deployment property.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AutoScalingGroups": {
        "description": "A list of associated Auto Scaling groups that AWS CodeDeploy automatically deploys revisions to when new instances are created. Duplicates are not allowed.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Deployment": {
        "description": "The application revision to deploy to this deployment group. If you specify this property, your target application revision will be deployed as soon as the provisioning process is complete. If you specify this property,  don't specify the AutoRollbackConfiguration property.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DeploymentConfigName": {
        "description": "A deployment configuration name or a predefined configuration name. With predefined configurations, you can deploy application revisions to one instance at a time, half of the instances at a time, or all the instances at once. For more information and valid values, see Working with Deployment Configurations in the AWS CodeDeploy User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DeploymentGroupName": {
        "description": "A name for the deployment group. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the deployment group name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DeploymentStyle": {
        "description": "Attributes that determine the type of deployment to run and whether to route deployment traffic behind a load balancer.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Ec2TagFilters": {
        "description": "The EC2 tags that are already applied to EC2 instances that you want to include in the deployment group. AWS CodeDeploy includes all EC2 instances identified by any of the tags you specify in this deployment group. Duplicates are not allowed.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "LoadBalancerInfo": {
        "description": "Information about the load balancer used in the deployment. For more information, see Integrating AWS CodeDeploy with Elastic Load Balancing in the AWS CodeDeploy User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "OnPremisesInstanceTagFilters": {
        "description": "The on-premises instance tags already applied to on-premises instances that you want to include in the deployment group. AWS CodeDeploy includes all on-premises instances identified by any of the tags you specify in this deployment group. To register on-premises instances with AWS CodeDeploy, see Working with On-Premises Instances for AWS CodeDeploy in the AWS CodeDeploy User Guide. Duplicates are not allowed.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ServiceRoleArn": {
        "description": "A service role Amazon Resource Name (ARN) that grants AWS CodeDeploy permission to make calls to AWS services on your behalf. For more information, see Create a Service Role for AWS CodeDeploy in the AWS CodeDeploy User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TriggerConfigurations": {
        "description": "Information about the notification triggers for the deployment group. Duplicates are not allowed.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-codedeploy-deploymentgroup.html",
    "properties": [
      "AlarmConfiguration",
      "ApplicationName",
      "AutoRollbackConfiguration",
      "AutoScalingGroups",
      "Deployment",
      "DeploymentConfigName",
      "DeploymentGroupName",
      "DeploymentStyle",
      "Ec2TagFilters",
      "LoadBalancerInfo",
      "OnPremisesInstanceTagFilters",
      "ServiceRoleArn",
      "TriggerConfigurations"
    ]
  },
  "AWS::CodePipeline::CustomActionType": {
    "full_properties": {
      "Category": {
        "description": "The category of the custom action, such as a source action or a build action. For valid values, see CreateCustomActionType in the AWS CodePipeline API Reference.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ConfigurationProperties": {
        "description": "The configuration properties for the custom action.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "InputArtifactDetails": {
        "description": "The input artifact details for this custom action.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "OutputArtifactDetails": {
        "description": "The output artifact details for this custom action.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Provider": {
        "description": "The name of the service provider that AWS CodePipeline uses for this custom action.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Settings": {
        "description": "URLs that provide users information about this custom action.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Version": {
        "description": "The version number of this custom action.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-codepipeline-customactiontype.html",
    "properties": [
      "Category",
      "ConfigurationProperties",
      "InputArtifactDetails",
      "OutputArtifactDetails",
      "Provider",
      "Settings",
      "Version"
    ]
  },
  "AWS::CodePipeline::Pipeline": {
    "full_properties": {
      "ArtifactStore": {
        "description": "The Amazon Simple Storage Service (Amazon S3) location where AWS CodePipeline stores pipeline artifacts. For more information, see Create an Amazon S3 Bucket for Your Application in the AWS CodePipeline User Guide.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DisableInboundStageTransitions": {
        "description": "Prevents artifacts in a pipeline from transitioning to the stage that you specified. This enables you to manually control transitions.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of your AWS CodePipeline pipeline.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RestartExecutionOnUpdate": {
        "description": "Indicates whether to rerun the AWS CodePipeline pipeline after you update it.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "A service role Amazon Resource Name (ARN) that grants AWS CodePipeline permission to make calls to AWS services on your behalf. For more information, see AWS CodePipeline Access Permissions Reference in the AWS CodePipeline User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Stages": {
        "description": "Defines the AWS CodePipeline pipeline stages.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-codepipeline-pipeline.html",
    "properties": [
      "ArtifactStore",
      "DisableInboundStageTransitions",
      "Name",
      "RestartExecutionOnUpdate",
      "RoleArn",
      "Stages"
    ]
  },
  "AWS::Cognito::IdentityPool": {
    "full_properties": {
      "AllowUnauthenticatedIdentities": {
        "description": "Specifies whether the identity pool supports unauthenticated logins.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "CognitoEvents": {
        "description": "The events to configure.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CognitoIdentityProviders": {
        "description": "An array of Amazon Cognito user pools and their client IDs.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CognitoStreams": {
        "description": "Configuration options for configuring Amazon Cognito streams.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DeveloperProviderName": {
        "description": "The \"domain\" by which Amazon Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Amazon Cognito service to communicate about the developer provider. For the DeveloperProviderName, you can use letters and periods (.), underscores (_), and dashes (-).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IdentityPoolName": {
        "description": "The name of your Amazon Cognito identity pool.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "OpenIdConnectProviderARNs": {
        "description": "A list of  ARNs for the OpendID Connect provider.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PushSync": {
        "description": "Configuration options to be applied to the identity pool.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SamlProviderARNs": {
        "description": "A list of Amazon Resource Names (ARNs) of Security Assertion Markup Language (SAML) providers.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SupportedLoginProviders": {
        "description": "Key-value pairs that map provider names to provider app IDs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cognito-identitypool.html",
    "properties": [
      "IdentityPoolName",
      "AllowUnauthenticatedIdentities",
      "DeveloperProviderName",
      "SupportedLoginProviders",
      "CognitoIdentityProviders",
      "SamlProviderARNs",
      "OpenIdConnectProviderARNs",
      "CognitoStreams",
      "PushSync",
      "CognitoEvents"
    ]
  },
  "AWS::Cognito::IdentityPoolRoleAttachment": {
    "full_properties": {
      "IdentityPoolId": {
        "description": "An identity pool ID in the format REGION:GUID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleMappings": {
        "description": "How users for a specific identity provider are to mapped to roles. This is a string to RoleMapping object map. The string identifies the identity provider, for example, \"graph.facebook.com\" or \"cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id\"",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Roles": {
        "description": "The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cognito-identitypoolroleattachment.html",
    "properties": [
      "IdentityPoolId",
      "RoleMappings",
      "Roles"
    ]
  },
  "AWS::Cognito::UserPool": {
    "full_properties": {
      "AdminCreateUserConfig": {
        "description": "The type of configuration for creating a new user profile.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AliasAttributes": {
        "description": "Attributes supported as an alias for this user pool. Possible values: phone_number, email, and/or preferred_username.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AutoVerifiedAttributes": {
        "description": "The attributes to be auto-verified. Possible values: email and/or phone_number.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DeviceConfiguration": {
        "description": "The type of configuration for the user pool's device tracking.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EmailConfiguration": {
        "description": "The email configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EmailVerificationMessage": {
        "description": "A string representing the email verification message. Must contain {####} in the description.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EmailVerificationSubject": {
        "description": "A string representing the email verification subject.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "LambdaConfig": {
        "description": "The AWS Lambda trigger configuration information for the Amazon Cognito user pool.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MfaConfiguration": {
        "description": "Specifies multi-factor authentication (MFA) configuration details. Can be one of the following values:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Policies": {
        "description": "The policies associated with the Amazon Cognito user pool.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Schema": {
        "description": "A list of schema attributes for the new user pool. These attributes can be standard or custom attributes.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SmsAuthenticationMessage": {
        "description": "A string representing the SMS authentication message. Must contain {####} in the message.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SmsConfiguration": {
        "description": "The Short Message Service (SMS) configuration.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SmsVerificationMessage": {
        "description": "A string representing the SMS verification message. Must contain {####} in the message.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "UserPoolName": {
        "description": "A string used to name the user pool.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserPoolTags": {
        "description": "The cost allocation tags for the user pool. For more information, see Adding Cost Allocation Tags to Your User Pool in the Amazon Cognito Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cognito-userpool.html",
    "properties": [
      "AdminCreateUserConfig",
      "AliasAttributes",
      "AutoVerifiedAttributes",
      "DeviceConfiguration",
      "EmailConfiguration",
      "EmailVerificationMessage",
      "EmailVerificationSubject",
      "LambdaConfig",
      "MfaConfiguration",
      "Policies",
      "UserPoolName",
      "Schema",
      "SmsAuthenticationMessage",
      "SmsConfiguration",
      "SmsVerificationMessage",
      "UserPoolTags"
    ]
  },
  "AWS::Cognito::UserPoolClient": {
    "full_properties": {
      "ClientName": {
        "description": "The client name for the user pool client that you want to create.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ExplicitAuthFlows": {
        "description": "The explicit authentication flows, which can be one of the following: ADMIN_NO_SRP_AUTH or CUSTOM_AUTH_FLOW_ONLY.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "GenerateSecret": {
        "description": "Specifies whether you want to generate a secret for the user pool client being created.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "ReadAttributes": {
        "description": "The read attributes.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "RefreshTokenValidity": {
        "description": "The time limit, in days, after which the refresh token is no longer valid.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "UserPoolId": {
        "description": "The user pool ID for the user pool where you want to create a client.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "WriteAttributes": {
        "description": "The write attributes.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-cognito-userpoolclient.html",
    "properties": [
      "ClientName",
      "ExplicitAuthFlows",
      "GenerateSecret",
      "ReadAttributes",
      "RefreshTokenValidity",
      "UserPoolId",
      "WriteAttributes"
    ]
  },
  "AWS::Cognito::UserPoolGroup": {
    "full_properties": {
      "Description": {
        "description": "A description of the user group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GroupName": {
        "description": "The name of the user group. GroupName must be unique.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Precedence": {
        "description": "A nonnegative integer value that specifies the precedence of this group relative to the other groups that a user can belong to in the user pool. Zero is the highest Precedence value. Groups with lower Precedence values take precedence over groups with higher or null Precedence values. If a user belongs to two or more groups, the  role ARN of the group with the lowest precedence value is used in the cognito:roles and cognito:preferred_role claims in the user's tokens.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The role ARN for the group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "UserPoolId": {
        "description": "The user pool ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cognito-userpoolgroup.html",
    "properties": [
      "Description",
      "GroupName",
      "Precedence",
      "RoleArn",
      "UserPoolId"
    ]
  },
  "AWS::Cognito::UserPoolUser": {
    "full_properties": {
      "DesiredDeliveryMediums": {
        "description": "Specifies how the welcome message will be sent. For email, specify EMAIL. To use a phone number, specify SMS. You can specify more than one value. The default value is SMS.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "ForceAliasCreation": {
        "description": "Use this parameter only if the phone_number_verified attribute or the email_verified attribute is set to True. Otherwise, it is ignored. The default value is False.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "MessageAction": {
        "description": "Specifies the action you'd like to take for the message. Valid values are RESEND and SUPPRESS.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserAttributes": {
        "description": "A list of name-value pairs that contain user attributes and attribute values to be set for the user that you are creating. You can create a user without specifying any attributes other than Username. However, any attributes that you specify as required (in CreateUserPool or in the Attributes tab of the console) must be supplied either by you (in your call to AdminCreateUser) or by the user (when signing up in response to your welcome message).",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "UserPoolId": {
        "description": "The ID for the user pool where the user will be created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Username": {
        "description": "The user name for the user. Username must be unique within the user pool. It must be a UTF-8 string between 1 and 128 characters. You can't change the username.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ValidationData": {
        "description": "The user's validation data. This is a list of name-value pairs that contain user attributes and attribute values that you can use for custom validation, such as restricting the types of user accounts that can be registered. For example, you might choose to allow or disallow user sign-up based on the user's domain.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cognito-userpooluser.html",
    "properties": [
      "DesiredDeliveryMediums",
      "ForceAliasCreation",
      "UserAttributes",
      "MessageAction",
      "Username",
      "UserPoolId",
      "ValidationData"
    ]
  },
  "AWS::Cognito::UserPoolUserToGroupAttachment": {
    "full_properties": {
      "GroupName": {
        "description": "The name of the group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserPoolId": {
        "description": "The ID of the user pool.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Username": {
        "description": "The user's user name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-cognito-userpoolusertogroupattachment.html",
    "properties": [
      "GroupName",
      "Username",
      "UserPoolId"
    ]
  },
  "AWS::Config::AggregationAuthorization": {
    "full_properties": {
      "AuthorizedAccountId": {
        "description": "The 12 digit account ID of the account authorized to aggregate data.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AuthorizedAwsRegion": {
        "description": "The region authorized to collect aggregated data.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-config-aggregationauthorization.html",
    "properties": [
      "AuthorizedAccountId",
      "AuthorizedAwsRegion"
    ]
  },
  "AWS::Config::ConfigRule": {
    "full_properties": {
      "ConfigRuleName": {
        "description": "A name for the AWS Config rule. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the rule name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description about this AWS Config rule.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InputParameters": {
        "description": "Input parameter values that are passed to the AWS Config rule (Lambda function).",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MaximumExecutionFrequency": {
        "description": "The maximum frequency at which the AWS Config rule runs evaluations. For valid values, see the ConfigRule data type in the AWS Config API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Scope": {
        "description": "Defines which AWS resources will trigger an evaluation when their configurations change. The scope can include one or more resource types, a combination of a tag key and value, or a combination of one resource type and one resource ID. Specify a scope to constrain the resources that are evaluated. If you don't specify a scope, the rule evaluates all resources in the recording group.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Source": {
        "description": "Specifies the rule owner, the rule identifier, and the events that cause the function to evaluate your AWS resources.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-config-configrule.html",
    "properties": [
      "ConfigRuleName",
      "Description",
      "InputParameters",
      "MaximumExecutionFrequency",
      "Scope",
      "Source"
    ]
  },
  "AWS::Config::ConfigurationAggregator": {
    "full_properties": {
      "AccountAggregationSources": {
        "description": "A collection of accounts and regions.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ConfigurationAggregatorName": {
        "description": "The name of the configuration aggregator.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "OrganizationAggregationSource": {
        "description": "A collection of regions and IAM role to retrieve AWS Organizations details.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-config-configurationaggregator.html",
    "properties": [
      "AccountAggregationSources",
      "OrganizationAggregationSource",
      "ConfigurationAggregatorName"
    ]
  },
  "AWS::Config::ConfigurationRecorder": {
    "full_properties": {
      "Name": {
        "description": "A name for the configuration recorder. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the configuration recorder name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "unavailable"
      },
      "RecordingGroup": {
        "description": "Indicates whether to record configurations for all supported resources or for a list of resource types. The resource types that you list must be supported by AWS Config.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RoleARN": {
        "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that is used to make read or write requests to the delivery channel that you specify and to get configuration details for supported AWS resources. For more information, see Permissions for the IAM Role Assigned to AWS Config in the AWS Config Developer Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-config-configurationrecorder.html",
    "properties": [
      "Name",
      "RecordingGroup",
      "RoleARN"
    ]
  },
  "AWS::Config::DeliveryChannel": {
    "full_properties": {
      "ConfigSnapshotDeliveryProperties": {
        "description": "Provides options for how AWS Config delivers configuration snapshots to the S3 bucket in your delivery channel.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the delivery channel. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the delivery channel name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "unavailable"
      },
      "S3BucketName": {
        "description": "The name of an S3 bucket where you want to store configuration history for the delivery channel.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "S3KeyPrefix": {
        "description": "A key prefix (folder) for the specified S3 bucket.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SnsTopicARN": {
        "description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (Amazon SNS) topic that AWS Config delivers notifications to.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-config-deliverychannel.html",
    "properties": [
      "ConfigSnapshotDeliveryProperties",
      "Name",
      "S3BucketName",
      "S3KeyPrefix",
      "SnsTopicARN"
    ]
  },
  "AWS::DAX::Cluster": {
    "full_properties": {
      "AvailabilityZones": {
        "description": "The Availability Zones (AZs) in which the cluster nodes will be created. All nodes belonging to the cluster are placed in these Availability Zones. Use this parameter if you want to distribute the nodes across multiple AZs.",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "ClusterName": {
        "description": "The cluster identifier. This parameter is stored as a lowercase string.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Description": {
        "description": "A description of the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IAMRoleARN": {
        "description": "A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX will assume this role and use the role's permissions to access DynamoDB on your behalf.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "NodeType": {
        "description": "The compute and memory capacity of the nodes in the cluster.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "NotificationTopicARN": {
        "description": "The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications will be sent.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ParameterGroupName": {
        "description": "The parameter group to be associated with the DAX cluster.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "PreferredMaintenanceWindow": {
        "description": "Specifies the weekly time range during which maintenance on the DAX cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Valid values for ddd are:",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ReplicationFactor": {
        "description": "The number of nodes in the DAX cluster. A replication factor of 1 will create a single-node cluster, without any read replicas. For additional fault tolerance, you can create a multiple node cluster with one or more read replicas. To do this, set ReplicationFactor to 2 or more.",
        "required": true,
        "type": "Number",
        "update_causes": "interrupt"
      },
      "SecurityGroupIds": {
        "description": "A list of security group IDs to be assigned to each node in the DAX cluster. (Each of the security group ID is system-generated.)",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SubnetGroupName": {
        "description": "The name of the subnet group to be used for the replication group.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Tags": {
        "description": "A map of tags to associate with the DAX cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-dax-cluster.html",
    "properties": [
      "AvailabilityZones",
      "ClusterName",
      "Description",
      "IAMRoleARN",
      "NodeType",
      "NotificationTopicARN",
      "ParameterGroupName",
      "PreferredMaintenanceWindow",
      "ReplicationFactor",
      "SecurityGroupIds",
      "SubnetGroupName",
      "Tags"
    ]
  },
  "AWS::DAX::ParameterGroup": {
    "full_properties": {
      "Description": {
        "description": "A description of the parameter group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ParameterGroupName": {
        "description": "The name of the parameter group.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "ParameterNameValues": {
        "description": "A map of DAX parameter names and values.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-dax-parametergroup.html",
    "properties": [
      "ParameterGroupName",
      "Description",
      "ParameterNameValues"
    ]
  },
  "AWS::DAX::SubnetGroup": {
    "full_properties": {
      "Description": {
        "description": "The description of the subnet group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SubnetGroupName": {
        "description": "The name of the subnet group.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "SubnetIds": {
        "description": "A list of subnets associated with the subnet group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-dax-subnetgroup.html",
    "properties": [
      "SubnetGroupName",
      "Description",
      "SubnetIds"
    ]
  },
  "AWS::DMS::Certificate": {
    "full_properties": {
      "CertificateIdentifier": {
        "description": "The customer-assigned name of the certificate. Valid characters are A-z and 0-9.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CertificatePem": {
        "description": "The contents of the .pem X.509 certificate file for the certificate.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CertificateWallet": {
        "description": "The location of the imported Oracle Wallet certificate for use with SSL.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-dms-certificate.html",
    "properties": [
      "CertificateIdentifier",
      "CertificatePem",
      "CertificateWallet"
    ]
  },
  "AWS::DMS::Endpoint": {
    "full_properties": {
      "CertificateArn": {
        "description": "The Amazon Resource Number (ARN) for the certificate.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DatabaseName": {
        "description": "The name of the endpoint database.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DynamoDbSettings": {
        "description": "Settings in JSON format for the target DynamoDB endpoint. For more information about the available settings, see the Using Object Mapping to Migrate Data to DynamoDB section at  Using an Amazon DynamoDB Database as a Target for AWS Database Migration Service.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "EndpointIdentifier": {
        "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EndpointType": {
        "description": "The type of endpoint. Valid values are source and target.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "EngineName": {
        "description": "The type of engine for the endpoint. Valid values depend on the EndPointType and include MYSQL, ORACLE, POSTGRES, MARIADB, AURORA, REDSHIFT, S3, SYBASE, DYNAMODB, MONGODB, and SQLSERVER.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ExtraConnectionAttributes": {
        "description": "Additional attributes associated with the connection.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The KMS key identifier that will be used to encrypt the connection parameters. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MongoDbSettings": {
        "description": "Settings in JSON format for the source MongoDB endpoint. For more information about the available settings, see the Configuration Properties When Using MongoDB as a Source for AWS Database Migration Service section at Using Amazon S3 as a Target for AWS Database Migration Service.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Password": {
        "description": "The password to be used to login to the endpoint database. Do not use this parameter directly. Use Password as an input parameter with noEcho as shown in the Parameters. For best practices information, see Do Not Embed Credentials in Your Templates.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Port": {
        "description": "The port used by the endpoint database.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "S3Settings": {
        "description": "Settings in JSON format for the target Amazon S3 endpoint. For more information about the available settings, see the Extra Connection Attributes section at Using Amazon S3 as a Target for AWS Database Migration Service in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ServerName": {
        "description": "The name of the server where the endpoint database resides.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SslMode": {
        "description": "The SSL mode to use for the SSL connection.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags that you want to attach to the DMS endpoint.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Username": {
        "description": "The user name to be used to login to the endpoint database.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-dms-endpoint.html",
    "properties": [
      "CertificateArn",
      "DatabaseName",
      "DynamoDbSettings",
      "EndpointIdentifier",
      "EndpointType",
      "EngineName",
      "ExtraConnectionAttributes",
      "KmsKeyId",
      "MongoDbSettings",
      "Password",
      "Port",
      "S3Settings",
      "ServerName",
      "SslMode",
      "Tags",
      "Username"
    ]
  },
  "AWS::DMS::EventSubscription": {
    "full_properties": {
      "Enabled": {
        "description": "Indicates whether to activate the subscription. If you don't specify this property, AWS CloudFormation activates the subscription.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EventCategories": {
        "description": "A list of event categories that you want to subscribe to for a given source type. If you don't specify this property, you are notified about all event categories. For more information, see Using AWS DMS Event Notification in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SnsTopicArn": {
        "description": "The Amazon Resource Name (ARN) of an Amazon SNS topic that you want to send event notifications to.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SourceIds": {
        "description": "A list of identifiers for which AWS DMS provides notification events.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SourceType": {
        "description": "The type of source for which AWS DMS provides notification events. For example, if you want to be notified of events generated by a database instance, set this parameter to replication-instance. If you don't specify a value, notifications are provided for all source types. For valid values, see the SourceType parameter for the CreateEventSubscription action in the AWS Database Migration Service API Reference.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SubscriptionName": {
        "description": "The subscription name.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags that you want to attach to the DMS event subscription.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-dms-eventsubscription.html",
    "properties": [
      "Enabled",
      "EventCategories",
      "SnsTopicArn",
      "SourceIds",
      "SourceType",
      "SubscriptionName",
      "Tags"
    ]
  },
  "AWS::DMS::ReplicationInstance": {
    "full_properties": {
      "AllocatedStorage": {
        "description": "The amount of storage (in gigabytes) to be initially allocated for the replication instance.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "AutoMinorVersionUpgrade": {
        "description": "Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AvailabilityZone": {
        "description": "The EC2 Availability Zone that the replication instance will be created in. The default value is a random, system-chosen Availability Zone in the endpoint's region.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineVersion": {
        "description": "The engine version number of the replication instance.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "KmsKeyId": {
        "description": "The KMS key identifier that will be used to encrypt the content on the replication instance. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MultiAZ": {
        "description": "Specifies if the replication instance is a Multi-AZ deployment. You cannot set the AvailabilityZone parameter if the MultiAZ parameter is set to true .",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "PreferredMaintenanceWindow": {
        "description": "The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PubliclyAccessible": {
        "description": "Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address. The default value is true .",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "ReplicationInstanceClass": {
        "description": "The compute and memory capacity of the replication instance as specified by the replication instance class.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "ReplicationInstanceIdentifier": {
        "description": "A name for the replication instance. If you specify a name, AWS CloudFormation converts it to lower case. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the replication instance identifier. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ReplicationSubnetGroupIdentifier": {
        "description": "A subnet group to associate with the replication instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags that you want to attach to the DMS endpoint.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "VpcSecurityGroupIds": {
        "description": "Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-dms-replicationinstance.html",
    "properties": [
      "AllocatedStorage",
      "AutoMinorVersionUpgrade",
      "AvailabilityZone",
      "EngineVersion",
      "KmsKeyId",
      "MultiAZ",
      "PreferredMaintenanceWindow",
      "PubliclyAccessible",
      "ReplicationInstanceClass",
      "ReplicationInstanceIdentifier",
      "ReplicationSubnetGroupIdentifier",
      "Tags",
      "VpcSecurityGroupIds"
    ]
  },
  "AWS::DMS::ReplicationSubnetGroup": {
    "full_properties": {
      "ReplicationSubnetGroupDescription": {
        "description": "The description for the replication subnet group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ReplicationSubnetGroupIdentifier": {
        "description": "The identifier for the replication subnet group. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the identifier.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "The EC2 subnet IDs for the replication subnet group.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags that you want to attach to the AWS DMS replication subnet group.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-dms-replicationsubnet-group.html",
    "properties": [
      "ReplicationSubnetGroupIdentifier",
      "ReplicationSubnetGroupDescription",
      "SubnetIds",
      "Tags"
    ]
  },
  "AWS::DMS::ReplicationTask": {
    "full_properties": {
      "CdcStartTime": {
        "description": "The start time for the Change Data Capture (CDC) operation.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MigrationType": {
        "description": "The migration type.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ReplicationInstanceArn": {
        "description": "The Amazon Resource Name (ARN) of the replication instance.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ReplicationTaskIdentifier": {
        "description": "The ARN string that uniquely identifies the endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ReplicationTaskSettings": {
        "description": "Settings for the task, such as target metadata settings. For a complete list of task settings, see Task Settings for AWS Database Migration Service Tasks in the AWS Database Migration Service User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SourceEndpointArn": {
        "description": "The ARN string that uniquely identifies the endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TableMappings": {
        "description": "The JSON that contains additional parameter values.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags that you want to attach to the migration task.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "TargetEndpointArn": {
        "description": "The ARN string that uniquely identifies the endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-dms-replicationtask.html",
    "properties": [
      "CdcStartTime",
      "MigrationType",
      "ReplicationInstanceArn",
      "ReplicationTaskIdentifier",
      "ReplicationTaskSettings",
      "SourceEndpointArn",
      "TableMappings",
      "Tags",
      "TargetEndpointArn"
    ]
  },
  "AWS::DataPipeline::Pipeline": {
    "full_properties": {
      "Activate": {
        "description": "Indicates whether to validate and start the pipeline or stop an active pipeline. By default, the value is set to true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description for the pipeline.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A name for the pipeline. Because AWS CloudFormation assigns each new pipeline a unique identifier, you can use the same name for multiple pipelines that are associated with your AWS account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ParameterObjects": {
        "description": "Defines the variables that are in the pipeline definition. For more information, see Creating a Pipeline Using Parameterized Templates in the AWS Data Pipeline Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ParameterValues": {
        "description": "Defines the values for the parameters that are defined in the ParameterObjects property. For more information, see Creating a Pipeline Using Parameterized Templates in the AWS Data Pipeline Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PipelineObjects": {
        "description": "A list of pipeline objects that make up the pipeline. For more information about pipeline objects and a description of each object, see Pipeline Object Reference in the AWS Data Pipeline Developer Guide.",
        "required": true,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "PipelineTags": {
        "description": "A list of arbitrary tags (key-value pairs) to associate with the pipeline, which you can use to control permissions. For more information, see Controlling Access to Pipelines and Resources in the AWS Data Pipeline Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-datapipeline-pipeline.html",
    "properties": [
      "Activate",
      "Description",
      "Name",
      "ParameterObjects",
      "ParameterValues",
      "PipelineObjects",
      "PipelineTags"
    ]
  },
  "AWS::DirectoryService::MicrosoftAD": {
    "full_properties": {
      "CreateAlias": {
        "description": "A unique alias to assign to the Microsoft Active Directory in AWS. AWS Directory Service uses the alias to construct the access URL for the directory, such as http://alias.awsapps.com. By default, AWS CloudFormation does not create an alias.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Edition": {
        "description": "The AWS Microsoft AD edition. Valid values include Standard and Enterprise. The default is Enterprise.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EnableSso": {
        "description": "Whether to enable single sign-on for a Microsoft Active Directory in AWS. Single sign-on allows users in your directory to access certain AWS services from a computer joined to the directory without having to enter their credentials separately. If you don't specify a value, AWS CloudFormation disables single sign-on by default.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Name": {
        "description": "The fully qualified name for the Microsoft Active Directory in AWS, such as corp.example.com. The name doesn't need to be publicly resolvable; it will resolve inside your VPC only.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Password": {
        "description": "The password for the default administrative user, Admin.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ShortName": {
        "description": "The NetBIOS name for your domain, such as CORP. If you don't specify a value, AWS Directory Service uses the first part of your directory DNS server name. For example, if your directory DNS server name is corp.example.com, AWS Directory Service specifies CORP for the NetBIOS name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpcSettings": {
        "description": "Specifies the VPC settings of the Microsoft Active Directory server in AWS.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-directoryservice-microsoftad.html",
    "properties": [
      "CreateAlias",
      "Edition",
      "EnableSso",
      "Name",
      "Password",
      "ShortName",
      "VpcSettings"
    ]
  },
  "AWS::DirectoryService::SimpleAD": {
    "full_properties": {
      "CreateAlias": {
        "description": "A unique alias to assign to the directory. AWS Directory Service uses the alias to construct the access URL for the directory, such as http://alias.awsapps.com. By default, AWS CloudFormation does not create an alias.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description of the directory.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EnableSso": {
        "description": "Whether to enable single sign-on for a directory. If you don't specify a value, AWS CloudFormation disables single sign-on by default.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Name": {
        "description": "The fully qualified name for the directory, such as corp.example.com.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Password": {
        "description": "The password for the directory administrator. AWS Directory Service creates a directory administrator account with the user name Administrator and this password.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ShortName": {
        "description": "The NetBIOS name of the on-premises directory, such as CORP.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Size": {
        "description": "The size of the directory. For valid values, see CreateDirectory in the AWS Directory Service API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpcSettings": {
        "description": "Specifies the VPC settings of the directory server.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-directoryservice-simplead.html",
    "properties": [
      "CreateAlias",
      "Description",
      "EnableSso",
      "Name",
      "Password",
      "ShortName",
      "Size",
      "VpcSettings"
    ]
  },
  "AWS::DynamoDB::Table": {
    "full_properties": {
      "AttributeDefinitions": {
        "description": "A list of attributes that describe the key schema for the table and indexes. Duplicates are allowed.",
        "required": true,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "GlobalSecondaryIndexes": {
        "description": "Global secondary indexes to be created on the table. You can create up to 5 global secondary indexes.",
        "required": false,
        "type": "Array",
        "update_causes": [
          "unavailable",
          "none",
          "interrupt"
        ]
      },
      "KeySchema": {
        "description": "Specifies the attributes that make up the primary key for the table. The attributes in the KeySchema property must also be defined in the AttributeDefinitions property.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "LocalSecondaryIndexes": {
        "description": "Local secondary indexes to be created on the table. You can create up to 5 local secondary indexes. Each index is scoped to a given hash key value. The size of each hash key can be up to 10 gigabytes.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "PointInTimeRecoverySpecification": {
        "description": "The settings used to enable point in time recovery.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ProvisionedThroughput": {
        "description": "Throughput for the specified table, which consists of values for ReadCapacityUnits and WriteCapacityUnits. For more information about the contents of a provisioned throughput structure, see Amazon DynamoDB Table ProvisionedThroughput.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SSESpecification": {
        "description": "Specifies the settings to enable server-side encryption.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "StreamSpecification": {
        "description": "The settings for the DynamoDB table stream, which capture changes to items stored in the table.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TableName": {
        "description": "A name for the table. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the table name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Specifies an arbitrary set of tags (key–value pairs) to associate with this table. Use tags to manage your resources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TimeToLiveSpecification": {
        "description": "Specifies the Time to Live (TTL) settings for the table.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-dynamodb-table.html",
    "properties": [
      "AttributeDefinitions",
      "GlobalSecondaryIndexes",
      "KeySchema",
      "LocalSecondaryIndexes",
      "PointInTimeRecoverySpecification",
      "ProvisionedThroughput",
      "SSESpecification",
      "StreamSpecification",
      "TableName",
      "Tags",
      "TimeToLiveSpecification"
    ]
  },
  "AWS::EC2::CustomerGateway": {
    "full_properties": {
      "BgpAsn": {
        "description": "The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "IpAddress": {
        "description": "The internet-routable IP address for the customer gateway's outside interface. The address must be static.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags that you want to attach to the resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of VPN connection that this customer gateway supports.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-customer-gateway.html",
    "properties": [
      "BgpAsn",
      "IpAddress",
      "Tags",
      "Type"
    ]
  },
  "AWS::EC2::DHCPOptions": {
    "full_properties": {
      "DomainName": {
        "description": "A domain name of your choice.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DomainNameServers": {
        "description": "The IP (IPv4) address of a domain name server. You can specify up to four addresses.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "NetbiosNameServers": {
        "description": "The IP address (IPv4) of a NetBIOS name server. You can specify up to four addresses.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "NetbiosNodeType": {
        "description": "An integer value indicating the NetBIOS node type:",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "NtpServers": {
        "description": "The IP address (IPv4) of a Network Time Protocol (NTP) server. You can specify up to four addresses.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-dhcp-options.html",
    "properties": [
      "DomainName",
      "DomainNameServers",
      "NetbiosNameServers",
      "NetbiosNodeType",
      "NtpServers",
      "Tags"
    ]
  },
  "AWS::EC2::EIP": {
    "full_properties": {
      "Domain": {
        "description": "Set to vpc to allocate the address to your Virtual Private Cloud (VPC). No other values are supported.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceId": {
        "description": "The Instance ID of the Amazon EC2 instance that you want to associate with this Elastic IP address.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-ec2-eip.html",
    "properties": [
      "InstanceId",
      "Domain"
    ]
  },
  "AWS::EC2::EIPAssociation": {
    "full_properties": {
      "AllocationId": {
        "description": "[EC2-VPC] Allocation ID for the VPC Elastic IP address you want to associate with an Amazon EC2 instance in your VPC.",
        "required": false,
        "type": "String",
        "update_causes": [
          "replacement",
          "none"
        ]
      },
      "EIP": {
        "description": "Elastic IP address that you want to associate with the Amazon EC2 instance specified by the InstanceId property. You can specify an existing Elastic IP address or a reference to an Elastic IP address allocated with a AWS::EC2::EIP resource.",
        "required": false,
        "type": "String",
        "update_causes": [
          "replacement",
          "none"
        ]
      },
      "InstanceId": {
        "description": "Instance ID of the Amazon EC2 instance that you want to associate with the Elastic IP address specified by the EIP property. If the instance has more than one network interface, you must specify a network interface ID.",
        "required": false,
        "type": "String",
        "update_causes": [
          "replacement",
          "none"
        ]
      },
      "NetworkInterfaceId": {
        "description": "[EC2-VPC] The ID of the network interface to associate with the Elastic IP address. If the instance has more than one network interface, you must specify a network interface ID.",
        "required": false,
        "type": "String",
        "update_causes": [
          "replacement",
          "none"
        ]
      },
      "PrivateIpAddress": {
        "description": "[EC2-VPC] The private IP address that you want to associate with the Elastic IP address. The private IP address is restricted to the primary and secondary private IP addresses that are associated with the network interface. By default, the private IP address that is associated with the EIP is the primary private IP address of the network interface.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-ec2-eip-association.html",
    "properties": [
      "AllocationId",
      "EIP",
      "InstanceId",
      "NetworkInterfaceId",
      "PrivateIpAddress"
    ]
  },
  "AWS::EC2::EgressOnlyInternetGateway": {
    "full_properties": {
      "VpcId": {
        "description": "The ID of the VPC for which to create the egress-only Internet gateway.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-egressonlyinternetgateway.html",
    "properties": [
      "VpcId"
    ]
  },
  "AWS::EC2::FlowLog": {
    "full_properties": {
      "DeliverLogsPermissionArn": {
        "description": "The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "LogGroupName": {
        "description": "The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceId": {
        "description": "The ID of the subnet, network interface, or VPC for which you want to create a flow log.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceType": {
        "description": "The type of resource that you specified in the ResourceId property. For example, if you specified a VPC ID for the ResourceId property, specify VPC for this property. For valid values, see the ResourceType parameter for the CreateFlowLogs action in the Amazon EC2 API Reference.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "TrafficType": {
        "description": "The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic. For valid values, see the TrafficType parameter for the CreateFlowLogs action in the Amazon EC2 API Reference.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-flowlog.html",
    "properties": [
      "DeliverLogsPermissionArn",
      "LogGroupName",
      "ResourceId",
      "ResourceType",
      "TrafficType"
    ]
  },
  "AWS::EC2::Host": {
    "full_properties": {
      "AutoPlacement": {
        "description": "Indicates if the host accepts EC2 instances with only matching configurations or if instances must also specify the host ID. Instances that don't specify a host ID can't launch onto a host with AutoPlacement set to off. By default, AWS CloudFormation sets this property to on. For more information, see Understanding Instance Placement and Host Affinity in the Amazon EC2 User Guide for Linux Instances.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AvailabilityZone": {
        "description": "The Availability Zone (AZ) in which to launch the dedicated host.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceType": {
        "description": "The instance type that the dedicated host accepts. Only instances of this type can be launched onto the host. For more information, see Supported Instance Types in the Amazon EC2 User Guide for Linux Instances.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-host.html",
    "properties": [
      "AutoPlacement",
      "AvailabilityZone",
      "InstanceType"
    ]
  },
  "AWS::EC2::Instance": {
    "full_properties": {
      "AdditionalInfo": {
        "description": "Reserved.",
        "required": false,
        "type": "String",
        "update_causes": [
          "replacement",
          "interrupt"
        ]
      },
      "Affinity": {
        "description": "Indicates whether Amazon Elastic Compute Cloud (Amazon EC2) always associates the instance with a dedicated host. If you want Amazon EC2 to always restart the instance (if it was stopped) onto the same host on which it was launched, specify host. If you want Amazon EC2 to restart the instance on any available host, but to try to launch the instance onto the last host it ran on (on a best-effort basis), specify default.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AvailabilityZone": {
        "description": "Specifies the name of the Availability Zone in which the instance is located.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "BlockDeviceMappings": {
        "description": "Defines a set of Amazon Elastic Block Store block device mappings, ephemeral instance store block device mappings, or both. For more information, see Amazon Elastic Block Store or Amazon EC2 Instance Store in the Amazon EC2 User Guide for Linux Instances.",
        "required": false,
        "type": "Array",
        "update_causes": [
          "replacement",
          "none"
        ]
      },
      "CreditSpecification": {
        "description": "Specifies the credit option for CPU usage of a T2 instance.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DisableApiTermination": {
        "description": "Specifies whether the instance can be terminated through the API.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EbsOptimized": {
        "description": "Specifies whether the instance is optimized for Amazon Elastic Block Store I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance.",
        "required": false,
        "type": "Boolean",
        "update_causes": [
          "replacement",
          "interrupt"
        ]
      },
      "ElasticGpuSpecifications": {
        "description": "Specifies the Elastic GPUs. An Elastic GPU is a GPU resource that you can attach to your instance to accelerate the graphics performance of your applications. For more information, see Amazon EC2 Elastic GPUs in the Amazon EC2 User Guide for Windows Instances. Duplicates are not allowed.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "HostId": {
        "description": "If you specify host for the Affinity property, the ID of a dedicated host that the instance is associated with. If you don't specify an ID, Amazon EC2 launches the instance onto any available, compatible dedicated host in your account. This type of launch is called an untargeted launch. Note that for untargeted launches, you must have a compatible, dedicated host available to successfully launch instances.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IamInstanceProfile": {
        "description": "The name of an instance profile or a reference to an AWS::IAM::InstanceProfile resource.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ImageId": {
        "description": "Provides the unique ID of the Amazon Machine Image (AMI) that was assigned during registration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceInitiatedShutdownBehavior": {
        "description": "Indicates whether an instance stops or terminates when you shut down the instance from the instance's operating system shutdown command. You can specify stop or terminate. For more information, see the RunInstances command in the Amazon EC2 API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceType": {
        "description": "The instance type, such as t2.micro. The default type is \"m3.medium\". For a list of instance types, see Instance Families and Types.",
        "required": false,
        "type": "Array",
        "update_causes": [
          "replacement",
          "interrupt"
        ]
      },
      "Ipv6AddressCount": {
        "description": "The number of IPv6 addresses to associate with the instance's primary network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. To specify specific IPv6 addresses, use the Ipv6Addresses property and don't specify this property.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Ipv6Addresses": {
        "description": "One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet to associate with the instance's primary network interface. To specify a number of IPv6 addresses, use the Ipv6AddressCount property and don't specify this property.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "KernelId": {
        "description": "The kernel ID.",
        "required": false,
        "type": "String",
        "update_causes": [
          "replacement",
          "interrupt"
        ]
      },
      "KeyName": {
        "description": "Provides the name of the Amazon EC2 key pair.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LaunchTemplate": {
        "description": "The launch template to use.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Monitoring": {
        "description": "Specifies whether detailed monitoring is enabled for the instance.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "NetworkInterfaces": {
        "description": "A list of embedded objects that describes the network interfaces to associate with this instance.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "PlacementGroupName": {
        "description": "The name of an existing placement group that you want to launch the instance into (for cluster instances).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PrivateIpAddress": {
        "description": "The private IP address for this instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RamdiskId": {
        "description": "The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the AWS Resource Center and search for the kernel ID.",
        "required": false,
        "type": "String",
        "update_causes": [
          "replacement",
          "interrupt"
        ]
      },
      "SecurityGroupIds": {
        "description": "A list that contains the security group IDs for VPC security groups to assign to the Amazon EC2 instance. If you specified the NetworkInterfaces property, do not specify this property.",
        "required": false,
        "type": "Array",
        "update_causes": [
          "replacement",
          "none"
        ]
      },
      "SecurityGroups": {
        "description": "Valid only for Amazon EC2 security groups. A list that contains the Amazon EC2 security groups to assign to the Amazon EC2 instance. The list can contain both the name of existing Amazon EC2 security groups or references to AWS::EC2::SecurityGroup resources created in the template.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SourceDestCheck": {
        "description": "Controls whether source/destination checking is enabled on the instance. Also determines if an instance in a VPC will perform network address translation (NAT).",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SsmAssociations": {
        "description": "The SSM document and parameter values in AWS Systems Manager to associate with this instance. To use this property, you must specify an IAM instance profile role for the instance. For more information, see Create an Instance Profile for Systems Manager in the AWS Systems Manager User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SubnetId": {
        "description": "If you're using Amazon VPC, this property specifies the ID of the subnet that you want to launch the instance into. If you specified the NetworkInterfaces property, do not specify this property.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this instance.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tenancy": {
        "description": "The tenancy of the instance that you want to launch, such as default, dedicated, or host. If you specify a tenancy value of dedicated or host, you must launch the instance in a VPC. For more information, see Dedicated Instances in the Amazon VPC User Guide.",
        "required": false,
        "type": "String",
        "update_causes": [
          "replacement",
          "none"
        ]
      },
      "UserData": {
        "description": "Base64-encoded MIME user data that is made available to the instances.",
        "required": false,
        "type": "String",
        "update_causes": [
          "replacement",
          "interrupt"
        ]
      },
      "Volumes": {
        "description": "The Amazon EBS volumes to attach to the instance.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-ec2-instance.html",
    "properties": [
      "Affinity",
      "AvailabilityZone",
      "BlockDeviceMappings",
      "CreditSpecification",
      "DisableApiTermination",
      "EbsOptimized",
      "ElasticGpuSpecifications",
      "HostId",
      "IamInstanceProfile",
      "ImageId",
      "InstanceInitiatedShutdownBehavior",
      "InstanceType",
      "Ipv6AddressCount",
      "Ipv6Addresses",
      "KernelId",
      "KeyName",
      "LaunchTemplate",
      "Monitoring",
      "NetworkInterfaces",
      "PlacementGroupName",
      "PrivateIpAddress",
      "RamdiskId",
      "SecurityGroupIds",
      "SecurityGroups",
      "SourceDestCheck",
      "SsmAssociations",
      "SubnetId",
      "Tags",
      "Tenancy",
      "UserData",
      "Volumes",
      "AdditionalInfo"
    ]
  },
  "AWS::EC2::InternetGateway": {
    "full_properties": {
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-internetgateway.html",
    "properties": [
      "Tags"
    ]
  },
  "AWS::EC2::LaunchTemplate": {
    "full_properties": {
      "LaunchTemplateData": {
        "description": "The information for the launch template.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LaunchTemplateName": {
        "description": "A name for the launch template.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-launchtemplate.html",
    "properties": [
      "LaunchTemplateName",
      "LaunchTemplateData"
    ]
  },
  "AWS::EC2::NatGateway": {
    "full_properties": {
      "AllocationId": {
        "description": "The allocation ID of an Elastic IP address to associate with the NAT gateway. If the Elastic IP address is associated with another resource, you must first disassociate it.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetId": {
        "description": "The public subnet in which to create the NAT gateway.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Specifies an arbitrary set of tags (key–value pairs) to associate with this resource. Use tags to manage your resources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-natgateway.html",
    "properties": [
      "AllocationId",
      "SubnetId",
      "Tags"
    ]
  },
  "AWS::EC2::NetworkAcl": {
    "full_properties": {
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this ACL.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The ID of the VPC where the network ACL will be created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-network-acl.html",
    "properties": [
      "Tags",
      "VpcId"
    ]
  },
  "AWS::EC2::NetworkAclEntry": {
    "full_properties": {
      "CidrBlock": {
        "description": "The IPv4 CIDR range to allow or deny, in CIDR notation (e.g., 172.16.0.0/24).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Egress": {
        "description": "Whether this rule applies to egress traffic from the subnet (true) or ingress traffic to the subnet (false). By default, AWS CloudFormation specifies false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Icmp": {
        "description": "The Internet Control Message Protocol (ICMP) code and type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Ipv6CidrBlock": {
        "description": "The IPv6 CIDR range to allow or deny, in CIDR notation.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NetworkAclId": {
        "description": "ID of the ACL where the entry will be created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PortRange": {
        "description": "The range of port numbers for the UDP/TCP protocol.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Protocol": {
        "description": "The IP protocol that the rule applies to. You must specify -1 or a protocol number (go to Protocol Numbers at iana.org). You can specify -1 for all protocols.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RuleAction": {
        "description": "Whether to allow or deny traffic that matches the rule; valid values are \"allow\" or \"deny\".",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RuleNumber": {
        "description": "Rule number to assign to the entry, such as 100. ACL entries are processed in ascending order by rule number. Entries can't use the same rule number unless one is an egress rule and the other is an ingress rule. For valid values, see the CreateNetworkAclEntry action in the Amazon EC2 API Reference.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-network-acl-entry.html",
    "properties": [
      "CidrBlock",
      "Egress",
      "Icmp",
      "Ipv6CidrBlock",
      "NetworkAclId",
      "PortRange",
      "Protocol",
      "RuleAction",
      "RuleNumber"
    ]
  },
  "AWS::EC2::NetworkInterface": {
    "full_properties": {
      "Description": {
        "description": "The description of this network interface.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GroupSet": {
        "description": "A list of security group IDs associated with this network interface.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Ipv6AddressCount": {
        "description": "The number of IPv6 addresses to associate with the network interface. EC2 automatically selects the IPv6 addresses from the subnet range. To specify specific IPv6 addresses, use the Ipv6Addresses property and don't specify this property.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Ipv6Addresses": {
        "description": "One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet to associate with the network interface. If you're specifying a number of IPv6 addresses, use the Ipv6AddressCount property and don't specify this property.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PrivateIpAddress": {
        "description": "Assigns a single private IP address to the network interface, which is used as the primary private IP address. If you want to specify multiple private IP address, use the PrivateIpAddresses property.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PrivateIpAddresses": {
        "description": "Assigns a list of private IP addresses to the network interface. You can specify a primary private IP address by setting the value of the Primary property to true in the PrivateIpAddressSpecification property. If you want EC2 to automatically assign private IP addresses, use the SecondaryPrivateIpAddressCount property and do not specify this property.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "replacement",
          "none"
        ]
      },
      "SecondaryPrivateIpAddressCount": {
        "description": "The number of secondary private IP addresses that EC2 automatically assigns to the network interface. EC2 uses the value of the PrivateIpAddress property as the primary private IP address. If you don't specify that property, EC2 automatically assigns both the primary and secondary private IP addresses.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SourceDestCheck": {
        "description": "Flag indicating whether traffic to or from the instance is validated.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "SubnetId": {
        "description": "The ID of the subnet to associate with the network interface.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this network interface.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-network-interface.html",
    "properties": [
      "Description",
      "GroupSet",
      "Ipv6AddressCount",
      "Ipv6Addresses",
      "PrivateIpAddress",
      "PrivateIpAddresses",
      "SecondaryPrivateIpAddressCount",
      "SourceDestCheck",
      "SubnetId",
      "Tags"
    ]
  },
  "AWS::EC2::NetworkInterfaceAttachment": {
    "full_properties": {
      "DeleteOnTermination": {
        "description": "Whether to delete the network interface when the instance terminates. By default, this value is set to True.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "DeviceIndex": {
        "description": "The network interface's position in the attachment order. For example, the first attached network interface has a DeviceIndex of 0.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceId": {
        "description": "The ID of the instance to which you will attach the ENI.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "NetworkInterfaceId": {
        "description": "The ID of the ENI that you want to attach.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-network-interface-attachment.html",
    "properties": [
      "DeleteOnTermination",
      "DeviceIndex",
      "InstanceId",
      "NetworkInterfaceId"
    ]
  },
  "AWS::EC2::NetworkInterfacePermission": {
    "full_properties": {
      "AwsAccountId": {
        "description": "The AWS account ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "NetworkInterfaceId": {
        "description": "The ID of the network interface.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Permission": {
        "description": "The type of permission to grant: INSTANCE-ATTACH or EIP-ASSOCIATE.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-networkinterfacepermission.html",
    "properties": [
      "AwsAccountId",
      "NetworkInterfaceId",
      "Permission"
    ]
  },
  "AWS::EC2::PlacementGroup": {
    "full_properties": {
      "Strategy": {
        "description": "The placement strategy, which relates to the instance types that can be added to the placement group. For example, for the cluster strategy, you can cluster C4 instance types but not T2 instance types. For valid values, see CreatePlacementGroup in the Amazon EC2 API Reference. By default, AWS CloudFormation sets the value of this property to cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-placementgroup.html",
    "properties": [
      "Strategy"
    ]
  },
  "AWS::EC2::Route": {
    "full_properties": {
      "DestinationCidrBlock": {
        "description": "The IPv4 CIDR address block used for the destination match. For example, 0.0.0.0/0. Routing decisions are based on the most specific match.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DestinationIpv6CidrBlock": {
        "description": "The IPv6 CIDR address block used for the destination match. For example, ::/0. Routing decisions are based on the most specific match.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EgressOnlyInternetGatewayId": {
        "description": "The ID of an egress-only internet gateway that is attached to your VPC (over IPv6 only).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "GatewayId": {
        "description": "The ID of an internet gateway or virtual private gateway that is attached to your VPC. For example: igw-eaad4883.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceId": {
        "description": "The ID of a NAT instance in your VPC. For example, i-1a2b3c4d.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NatGatewayId": {
        "description": "The ID of a NAT gateway. For example, nat-0a12bc456789de0fg.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NetworkInterfaceId": {
        "description": "Allows the routing of network interface IDs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "RouteTableId": {
        "description": "The ID of the route table where the route will be added.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-route.html",
    "properties": [
      "DestinationCidrBlock",
      "DestinationIpv6CidrBlock",
      "EgressOnlyInternetGatewayId",
      "GatewayId",
      "InstanceId",
      "NatGatewayId",
      "NetworkInterfaceId",
      "RouteTableId"
    ]
  },
  "AWS::EC2::RouteTable": {
    "full_properties": {
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this route table.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The ID of the VPC where the route table will be created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-route-table.html",
    "properties": [
      "VpcId",
      "Tags"
    ]
  },
  "AWS::EC2::SecurityGroup": {
    "full_properties": {
      "GroupDescription": {
        "description": "A description of the security group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "GroupName": {
        "description": "The name of the security group. For valid values, see the GroupName parameter of the CreateSecurityGroup action in the Amazon EC2 API Reference.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SecurityGroupEgress": {
        "description": "A list of Amazon EC2 security group egress rules.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SecurityGroupIngress": {
        "description": "A list of Amazon EC2 security group ingress rules.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags that you want to attach to the resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The physical ID of the VPC. You can obtain the physical ID by using a reference to an AWS::EC2::VPC, such as: { \"Ref\" : \"myVPC\" }.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-properties-ec2-security-group.html",
    "properties": [
      "GroupName",
      "GroupDescription",
      "SecurityGroupEgress",
      "SecurityGroupIngress",
      "Tags",
      "VpcId"
    ]
  },
  "AWS::EC2::SecurityGroupEgress": {
    "full_properties": {
      "CidrIp": {
        "description": "An IPv4 CIDR range.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CidrIpv6": {
        "description": "An IPv6 CIDR range.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "Description of the egress rule.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DestinationPrefixListId": {
        "description": "The AWS service prefix of an Amazon VPC endpoint. For more information, see VPC Endpoints in the Amazon VPC User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DestinationSecurityGroupId": {
        "description": "Specifies the group ID of the destination Amazon VPC security group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "FromPort": {
        "description": "Start of port range for the TCP and UDP protocols, or an ICMP type number. If you specify icmp for the IpProtocol property, you can specify -1 as a wildcard (i.e., any ICMP type number).",
        "required": true,
        "type": "Number",
        "update_causes": "replacement"
      },
      "GroupId": {
        "description": "ID of the Amazon VPC security group to modify. This value can be a reference to an AWS::EC2::SecurityGroup resource that has a valid VpcId property or the ID of an existing Amazon VPC security group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "IpProtocol": {
        "description": "IP protocol name or number. For valid values, see the IpProtocol parameter in AuthorizeSecurityGroupIngress",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ToPort": {
        "description": "End of port range for the TCP and UDP protocols, or an ICMP code. If you specify icmp for the IpProtocol property, you can specify -1 as a wildcard (i.e., any ICMP code).",
        "required": true,
        "type": "Number",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-security-group-egress.html",
    "properties": [
      "CidrIp",
      "CidrIpv6",
      "Description",
      "DestinationPrefixListId",
      "DestinationSecurityGroupId",
      "FromPort",
      "GroupId",
      "IpProtocol",
      "ToPort"
    ]
  },
  "AWS::EC2::SecurityGroupIngress": {
    "full_properties": {
      "CidrIp": {
        "description": "An IPv4 CIDR range.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CidrIpv6": {
        "description": "An IPv6 CIDR range.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "Description of the ingress rule.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FromPort": {
        "description": "Start of port range for the TCP and UDP protocols, or an ICMP type number. If you specify icmp for the IpProtocol property, you can specify -1 as a wildcard (i.e., any ICMP type number).",
        "required": true,
        "type": "Number",
        "update_causes": "replacement"
      },
      "GroupId": {
        "description": "ID of the Amazon EC2 or VPC security group to modify. The group must belong to your account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "GroupName": {
        "description": "Name of the Amazon EC2 security group (non-VPC security group) to modify. This value can be a reference to an AWS::EC2::SecurityGroup resource or the name of an existing Amazon EC2 security group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "IpProtocol": {
        "description": "IP protocol name or number. For valid values, see the IpProtocol parameter in AuthorizeSecurityGroupIngress",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceSecurityGroupId": {
        "description": "Specifies the ID of the source security group or uses the Ref intrinsic function to refer to the logical ID of a security group defined in the same template.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceSecurityGroupName": {
        "description": "Specifies the name of the Amazon EC2 security group (non-VPC security group) to allow access or use the Ref intrinsic function to refer to the logical ID of a security group defined in the same template. For instances in a VPC, specify the SourceSecurityGroupId property.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceSecurityGroupOwnerId": {
        "description": "Specifies the AWS Account ID of the owner of the Amazon EC2 security group specified in the SourceSecurityGroupName property.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ToPort": {
        "description": "End of port range for the TCP and UDP protocols, or an ICMP code. If you specify icmp for the IpProtocol property, you can specify -1 as a wildcard (i.e., any ICMP code).",
        "required": true,
        "type": "Number",
        "update_causes": "replacement"
      }
    },
    "path": "aws-properties-ec2-security-group-ingress.html",
    "properties": [
      "CidrIp",
      "CidrIpv6",
      "Description",
      "FromPort",
      "GroupId",
      "GroupName",
      "IpProtocol",
      "SourceSecurityGroupId",
      "SourceSecurityGroupName",
      "SourceSecurityGroupOwnerId",
      "ToPort"
    ]
  },
  "AWS::EC2::SpotFleet": {
    "full_properties": {
      "SpotFleetRequestConfigData": {
        "description": "The configuration for a Spot fleet request.",
        "required": true,
        "type": "Unknown",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-ec2-spotfleet.html",
    "properties": [
      "SpotFleetRequestConfigData"
    ]
  },
  "AWS::EC2::Subnet": {
    "full_properties": {
      "AssignIpv6AddressOnCreation": {
        "description": "Indicates whether a network interface created in this subnet receives an IPv6 address. The default value is false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AvailabilityZone": {
        "description": "The availability zone in which you want the subnet. Default: AWS selects a zone for you (recommended).",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CidrBlock": {
        "description": "The CIDR block that you want the subnet to cover (for example, \"10.0.0.0/24\").",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Ipv6CidrBlock": {
        "description": "The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MapPublicIpOnLaunch": {
        "description": "Indicates whether instances that are launched in this subnet receive a public IP address. By default, the value is false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this subnet.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "A Ref structure that contains the ID of the VPC on which you want to create the subnet. The VPC ID is provided as the value of the \"Ref\" property, as: { \"Ref\": \"VPCID\" }.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-subnet.html",
    "properties": [
      "AssignIpv6AddressOnCreation",
      "AvailabilityZone",
      "CidrBlock",
      "Ipv6CidrBlock",
      "MapPublicIpOnLaunch",
      "Tags",
      "VpcId"
    ]
  },
  "AWS::EC2::SubnetCidrBlock": {
    "full_properties": {
      "Ipv6CidrBlock": {
        "description": "The IPv6 CIDR block for the subnet. The CIDR block must have a prefix length of /64.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetId": {
        "description": "The ID of the subnet to associate the IPv6 CIDR block with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-subnetcidrblock.html",
    "properties": [
      "Ipv6CidrBlock",
      "SubnetId"
    ]
  },
  "AWS::EC2::SubnetNetworkAclAssociation": {
    "full_properties": {
      "NetworkAclId": {
        "description": "The ID of the new ACL to associate with the subnet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetId": {
        "description": "The ID representing the current association between the original network ACL and the subnet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-subnet-network-acl-assoc.html",
    "properties": [
      "SubnetId",
      "NetworkAclId"
    ]
  },
  "AWS::EC2::SubnetRouteTableAssociation": {
    "full_properties": {
      "RouteTableId": {
        "description": "The ID of the route table. This is commonly written as a reference to a route table declared elsewhere in the template. For example:",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SubnetId": {
        "description": "The ID of the subnet. This is commonly written as a reference to a subnet declared elsewhere in the template. For example:",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-subnet-route-table-assoc.html",
    "properties": [
      "RouteTableId",
      "SubnetId"
    ]
  },
  "AWS::EC2::VPC": {
    "full_properties": {
      "CidrBlock": {
        "description": "The CIDR block you want the VPC to cover. For example: \"10.0.0.0/16\".",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EnableDnsHostnames": {
        "description": "Specifies whether the instances launched in the VPC get DNS hostnames. If this attribute is true, instances in the VPC get DNS hostnames; otherwise, they do not. You can only set EnableDnsHostnames to true if you also set the EnableDnsSupport attribute to true. By default, the value is set to false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EnableDnsSupport": {
        "description": "Specifies whether DNS resolution is supported for the VPC. If this attribute is true, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not. By default the value is set to true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "InstanceTenancy": {
        "description": "The allowed tenancy of instances launched into the VPC.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this VPC. To name a VPC resource, specify a value for the Name key.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-vpc.html",
    "properties": [
      "CidrBlock",
      "EnableDnsSupport",
      "EnableDnsHostnames",
      "InstanceTenancy",
      "Tags"
    ]
  },
  "AWS::EC2::VPCCidrBlock": {
    "full_properties": {
      "AmazonProvidedIpv6CidrBlock": {
        "description": "Whether to request an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You can't specify the range of IPv6 addresses or the size of the CIDR block.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "CidrBlock": {
        "description": "An IPv4 CIDR block to associate with the VPC.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpcId": {
        "description": "The ID of the VPC to associate the Amazon-provided IPv6 CIDR block with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-vpccidrblock.html",
    "properties": [
      "AmazonProvidedIpv6CidrBlock",
      "CidrBlock",
      "VpcId"
    ]
  },
  "AWS::EC2::VPCDHCPOptionsAssociation": {
    "full_properties": {
      "DhcpOptionsId": {
        "description": "The ID of the DHCP options you want to associate with the VPC. Specify default if you want the VPC to use no DHCP options.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The ID of the VPC to associate with this DHCP options set.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-vpc-dhcp-options-assoc.html",
    "properties": [
      "DhcpOptionsId",
      "VpcId"
    ]
  },
  "AWS::EC2::VPCEndpoint": {
    "full_properties": {
      "PolicyDocument": {
        "description": "A policy to attach to the endpoint that controls access to the service. The policy must be valid JSON. The default policy allows full access to the AWS service. For more information, see Controlling Access to Services in the Amazon VPC User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RouteTableIds": {
        "description": "One or more route table IDs that are used by the VPC to reach the endpoint.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ServiceName": {
        "description": "The AWS service to which you want to establish a connection. Specify the service name in the form of com.amazonaws.region.service.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpcId": {
        "description": "The ID of the VPC in which the endpoint is used.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-vpcendpoint.html",
    "properties": [
      "PolicyDocument",
      "RouteTableIds",
      "ServiceName",
      "VpcId"
    ]
  },
  "AWS::EC2::VPCGatewayAttachment": {
    "full_properties": {
      "InternetGatewayId": {
        "description": "The ID of the Internet gateway.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The ID of the VPC to associate with this gateway.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "VpnGatewayId": {
        "description": "The ID of the virtual private network (VPN) gateway to attach to the VPC.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-vpc-gateway-attachment.html",
    "properties": [
      "InternetGatewayId",
      "VpcId",
      "VpnGatewayId"
    ]
  },
  "AWS::EC2::VPCPeeringConnection": {
    "full_properties": {
      "PeerOwnerId": {
        "description": "The AWS account ID of the owner of the VPC that you want to peer with.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PeerRoleArn": {
        "description": "The Amazon Resource Name (ARN) of the VPC peer role for the peering connection in another AWS account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PeerVpcId": {
        "description": "The ID of the VPC with which you are creating the peering connection.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The ID of the VPC that is requesting a peering connection.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-vpcpeeringconnection.html",
    "properties": [
      "PeerVpcId",
      "Tags",
      "VpcId",
      "PeerOwnerId",
      "PeerRoleArn"
    ]
  },
  "AWS::EC2::VPNConnection": {
    "full_properties": {
      "CustomerGatewayId": {
        "description": "The ID of the customer gateway. This can either be an embedded JSON object or a reference to a Gateway ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "StaticRoutesOnly": {
        "description": "Indicates whether the VPN connection requires static routes.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags that you want to attach to the resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of VPN connection this virtual private gateway supports.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpnGatewayId": {
        "description": "The ID of the virtual private gateway. This can either be an embedded JSON object or a reference to a Gateway ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpnTunnelOptionsSpecifications": {
        "description": "The tunnel options for the VPN connection. Duplicates not allowed.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-vpn-connection.html",
    "properties": [
      "Type",
      "CustomerGatewayId",
      "StaticRoutesOnly",
      "Tags",
      "VpnGatewayId",
      "VpnTunnelOptionsSpecifications"
    ]
  },
  "AWS::EC2::VPNConnectionRoute": {
    "full_properties": {
      "DestinationCidrBlock": {
        "description": "The CIDR block that is associated with the local subnet of the customer network.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VpnConnectionId": {
        "description": "The ID of the VPN connection.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-vpn-connection-route.html",
    "properties": [
      "DestinationCidrBlock",
      "VpnConnectionId"
    ]
  },
  "AWS::EC2::VPNGateway": {
    "full_properties": {
      "AmazonSideAsn": {
        "description": "The private Autonomous System Number (ASN) for the Amazon side of a BGP session.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this resource.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of VPN connection this virtual private gateway supports. The only valid value is \"ipsec.1\".",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ec2-vpn-gateway.html",
    "properties": [
      "AmazonSideAsn",
      "Type",
      "Tags"
    ]
  },
  "AWS::EC2::VPNGatewayRoutePropagation": {
    "full_properties": {
      "RouteTableIds": {
        "description": "A list of routing table IDs that are associated with a VPC. The routing tables must be associated with the same VPC that the virtual private gateway is attached to.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "VpnGatewayId": {
        "description": "The ID of the virtual private gateway that is attached to a VPC. The virtual private gateway must be attached to the same VPC that the routing tables are associated with.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ec2-vpn-gatewayrouteprop.html",
    "properties": [
      "RouteTableIds",
      "VpnGatewayId"
    ]
  },
  "AWS::EC2::Volume": {
    "full_properties": {
      "AutoEnableIO": {
        "description": "Indicates whether the volume is auto-enabled for I/O operations. By default, Amazon EBS disables I/O to the volume from attached EC2 instances when it determines that a volume's data is potentially inconsistent. If the consistency of the volume is not a concern, and you prefer that the volume be made available immediately if it's impaired, you can configure the volume to automatically enable I/O. For more information, see Working with the AutoEnableIO Volume Attribute in the Amazon EC2 User Guide for Linux Instances.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AvailabilityZone": {
        "description": "The Availability Zone in which to create the new volume.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Encrypted": {
        "description": "Indicates whether the volume is encrypted. You can attach encrypted Amazon EBS volumes only to instance types that support Amazon EBS encryption. Volumes that are created from encrypted snapshots are automatically encrypted. You can't create an encrypted volume from an unencrypted snapshot, or vice versa. If your AMI uses encrypted volumes, you can launch the AMI only on supported instance types. For more information, see Amazon EBS encryption in the Amazon EC2 User Guide for Linux Instances.",
        "required": false,
        "type": "Boolean",
        "update_causes": "unavailable"
      },
      "Iops": {
        "description": "The number of I/O operations per second (IOPS) that the volume supports. For more information about the valid sizes for each volume type, see the Iops parameter for the CreateVolume action in the Amazon EC2 API Reference.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The Amazon Resource Name (ARN) of the AWS Key Management Service master key that is used to create the encrypted volume, such as arn:aws:kms:us-east-2:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef. If you create an encrypted volume and don't specify this property, AWS CloudFormation uses the default master key.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Size": {
        "description": "The size of the volume, in gibibytes (GiBs). For more information about the valid sizes for each volume type, see the Size parameter for the CreateVolume action in the Amazon EC2 API Reference.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SnapshotId": {
        "description": "The snapshot from which to create the new volume.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this volume.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VolumeType": {
        "description": "The volume type. If you set the type to io1, you must also set the Iops property. For valid values, see the VolumeType parameter for the CreateVolume action in the Amazon EC2 API Reference.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-ec2-ebs-volume.html",
    "properties": [
      "AutoEnableIO",
      "AvailabilityZone",
      "Encrypted",
      "Iops",
      "KmsKeyId",
      "Size",
      "SnapshotId",
      "Tags",
      "VolumeType"
    ]
  },
  "AWS::EC2::VolumeAttachment": {
    "full_properties": {
      "Device": {
        "description": "How the device is exposed to the instance (e.g., /dev/sdh, or xvdh).",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "InstanceId": {
        "description": "The ID of the instance to which the volume attaches. This value can be a reference to an AWS::EC2::Instance resource, or it can be the physical ID of an existing EC2 instance.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "VolumeId": {
        "description": "The ID of the Amazon EBS volume. The volume and instance must be within the same Availability Zone. This value can be a reference to an AWS::EC2::Volume resource, or it can be the volume ID of an existing Amazon EBS volume.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      }
    },
    "path": "aws-properties-ec2-ebs-volumeattachment.html",
    "properties": [
      "Device",
      "InstanceId",
      "VolumeId"
    ]
  },
  "AWS::ECR::Repository": {
    "full_properties": {
      "LifecyclePolicy": {
        "description": "A lifecycle policy for the repository.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RepositoryName": {
        "description": "A name for the image repository. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the repository name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RepositoryPolicyText": {
        "description": "A policy that controls who has access to the repository and which actions they can perform on it. For more information, see Amazon ECR Repository Policies in the Amazon Elastic Container Registry User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ecr-repository.html",
    "properties": [
      "LifecyclePolicy",
      "RepositoryName",
      "RepositoryPolicyText"
    ]
  },
  "AWS::ECS::Cluster": {
    "full_properties": {
      "ClusterName": {
        "description": "A name for the cluster. If you don't specify a name, AWS CloudFormation generates a unique physical ID for the name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ecs-cluster.html",
    "properties": [
      "ClusterName"
    ]
  },
  "AWS::ECS::Service": {
    "full_properties": {
      "Cluster": {
        "description": "The name or Amazon Resource Name (ARN) of the cluster that you want to run your Amazon ECS service on. If you do not specify a cluster, Amazon ECS uses the default cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeploymentConfiguration": {
        "description": "Configures how many tasks run during a deployment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DesiredCount": {
        "description": "The number of simultaneous tasks that you want to run on the cluster. Specify the tasks with the TaskDefinition property.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "HealthCheckGracePeriodSeconds": {
        "description": "The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy Elastic Load Balancing target health checks after a task has first started.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "LaunchType": {
        "description": "The launch type on which to run your service. If one is not specified, EC2 will be used by default. Valid values include EC2 and FARGATE.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LoadBalancers": {
        "description": "A list of load balancer objects to associate with the cluster. If you specify the Role property, LoadBalancers must be specified as well. For information about the number of load balancers that you can specify per service, see Service Load Balancing in the Amazon Elastic Container Service Developer Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "NetworkConfiguration": {
        "description": "The network configuration for the service. This parameter is required for task definitions that use the awsvpc network mode to receive their own Elastic Network Interface, and it is not supported for other network modes. For more information, see Task Networking in the Amazon Elastic Container Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PlacementConstraints": {
        "description": "The placement constraints for the tasks in the service.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "PlacementStrategies": {
        "description": "The placement strategies that determine how tasks for the service are placed.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "PlatformVersion": {
        "description": "The platform version on which to run your service. If one is not specified, the latest version will be used by default.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Role": {
        "description": "The name or ARN of an AWS Identity and Access Management (IAM) role that allows your Amazon ECS container agent to make calls to your load balancer.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceName": {
        "description": "The name of your service. The name is limited to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores. Service names must be unique within a cluster, but you can have similarly named services in multiple clusters within a region or across multiple regions.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceRegistries": {
        "description": "Details of the service registry.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TaskDefinition": {
        "description": "The ARN of the task definition (including the revision number) that you want to run on the cluster, such as arn:aws:ecs:us-east-1:123456789012:task-definition/mytask:3. You can't use :latest to specify a revision because it's ambiguous. For example, if AWS CloudFormation needed to roll back an update, it wouldn't know which revision to roll back to.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-ecs-service.html",
    "properties": [
      "Cluster",
      "DeploymentConfiguration",
      "DesiredCount",
      "HealthCheckGracePeriodSeconds",
      "LaunchType",
      "LoadBalancers",
      "NetworkConfiguration",
      "PlacementConstraints",
      "PlacementStrategies",
      "PlatformVersion",
      "Role",
      "ServiceName",
      "ServiceRegistries",
      "TaskDefinition"
    ]
  },
  "AWS::ECS::TaskDefinition": {
    "full_properties": {
      "ContainerDefinitions": {
        "description": "A list of container definitions in JSON format that describes the containers that make up your task.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Cpu": {
        "description": "The number of cpu units used by the task. If using the EC2 launch type, this field is optional and any value can be used. If you are using the Fargate launch type, this field is required and you must use one of the following values, which determines your range of valid values for the memory parameter:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ExecutionRoleArn": {
        "description": "The Amazon Resource Name (ARN) of the task execution role that containers in this task can assume. All containers in this task are granted the permissions that are specified in this role.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Family": {
        "description": "The name of a family that this task definition is registered to. A family groups multiple versions of a task definition. Amazon ECS gives the first task definition that you registered to a family a revision number of 1. Amazon ECS gives sequential revision numbers to each task definition that you add.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Memory": {
        "description": "The amount (in MiB) of memory used by the task. If using the EC2 launch type, this field is optional and any value can be used. If you are using the Fargate launch type, this field is required and you must use one of the following values, which determines your range of valid values for the cpu parameter:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "NetworkMode": {
        "description": "The Docker networking mode to use for the containers in the task, such as none, bridge, or host. For information about network modes, see NetworkMode in the Task Definition Parameters topic in the Amazon Elastic Container Service Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PlacementConstraints": {
        "description": "The placement constraints for the tasks in the service.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RequiresCompatibilities": {
        "description": "The launch type the task requires. If no value is specified, it will default to EC2. Valid values include EC2 and FARGATE.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "TaskRoleArn": {
        "description": "The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that grants containers in the task permission to call AWS APIs on your behalf. For more information, see IAM Roles for Tasks in the Amazon Elastic Container Service Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Volumes": {
        "description": "A list of volume definitions in JSON format for the volumes that you can use in your container definitions.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ecs-taskdefinition.html",
    "properties": [
      "ContainerDefinitions",
      "Cpu",
      "ExecutionRoleArn",
      "Family",
      "Memory",
      "NetworkMode",
      "PlacementConstraints",
      "RequiresCompatibilities",
      "TaskRoleArn",
      "Volumes"
    ]
  },
  "AWS::EFS::FileSystem": {
    "full_properties": {
      "Encrypted": {
        "description": "A boolean value that, if true, creates an encrypted file system. For more information, see CreateFileSystem in the Amazon Elastic File System User Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "FileSystemTags": {
        "description": "Tags to associate with the file system.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The ID of the AWS KMS customer master key (CMK) to use to protect the encrypted file system.  This parameter is only required if you want to use a non-default CMK. For more information, see CreateFileSystem in the Amazon Elastic File System User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PerformanceMode": {
        "description": "The performance mode of the file system. For valid values, see the PerformanceMode parameter for the CreateFileSystem action in the Amazon Elastic File System User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-efs-filesystem.html",
    "properties": [
      "FileSystemTags",
      "Encrypted",
      "KmsKeyId",
      "PerformanceMode"
    ]
  },
  "AWS::EFS::MountTarget": {
    "full_properties": {
      "FileSystemId": {
        "description": "The ID of the file system for which you want to create the mount target.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "IpAddress": {
        "description": "An IPv4 address that is within the address range of the subnet that is specified in the SubnetId property. If you don't specify an IP address, Amazon EFS automatically assigns an address that is within the range of the subnet.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityGroups": {
        "description": "A maximum of five VPC security group IDs that are in the same VPC as the subnet that is specified in the SubnetId property. For more information about security groups and mount targets, see Security in the Amazon Elastic File System User Guide.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "SubnetId": {
        "description": "The ID of the subnet in which you want to add the mount target.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-efs-mounttarget.html",
    "properties": [
      "FileSystemId",
      "IpAddress",
      "SecurityGroups",
      "SubnetId"
    ]
  },
  "AWS::EKS::Cluster": {
    "full_properties": {
      "Name": {
        "description": "The name of the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourcesVpcConfig": {
        "description": "The VPC subnets and security groups used by the cluster control plane. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see Cluster VPC Considerations and Cluster Security Group Considerations in the Amazon EKS User Guide.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Version": {
        "description": "The Kubernetes server version for the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-eks-cluster.html",
    "properties": [
      "Name",
      "ResourcesVpcConfig",
      "RoleArn",
      "Version"
    ]
  },
  "AWS::EMR::Cluster": {
    "full_properties": {
      "AdditionalInfo": {
        "description": "(Intended for advanced uses only.) Additional features that you want to select. This is meta information about third-party applications that third-party vendors use for testing purposes.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Applications": {
        "description": "The software applications to deploy on the cluster, and the arguments that Amazon EMR passes to those applications.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "AutoScalingRole": {
        "description": "An AWS Identity and Access Management (IAM) role for automatic scaling policies. The default role is EMR_AutoScaling_DefaultRole. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate Amazon EC2 instances in an instance group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "BootstrapActions": {
        "description": "A list of bootstrap actions that Amazon EMR runs before starting applications on the cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Configurations": {
        "description": "The software configuration of the Amazon EMR cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "CustomAmiId": {
        "description": "A custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). For more information, see Using a Custom AMI in the Amazon EMR Management Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EbsRootVolumeSize": {
        "description": "The size, in GiB, of the EBS root device volume of the Linux AMI that's used for each EC2 instance.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Instances": {
        "description": "Configures the EC2 instances that run jobs in the Amazon EMR cluster.",
        "required": true,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "JobFlowRole": {
        "description": "(Also called instance profile and EC2 role.) Accepts an instance profile that's associated with the role that you want to use. All EC2 instances in the cluster assume this role. For more information, see Create and Use IAM Roles for Amazon EMR in the Amazon EMR Management Guide.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "LogUri": {
        "description": "An S3 bucket location that Amazon EMR writes logs files to from a job flow. If you don't specify a value, Amazon EMR doesn't write any log files.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A name for the Amazon EMR cluster.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ReleaseLabel": {
        "description": "The Amazon EMR software release label. A release is a set of software applications and components that you can install and configure on an Amazon EMR cluster. For more information, see About Amazon EMR Releases in the Amazon EMR Release Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ScaleDownBehavior": {
        "description": "Indicates how individual EC2 instances terminate when an automatic scale-in activity occurs or an instance group is resized. For more information, see Cluster in the Amazon EMR API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityConfiguration": {
        "description": "The name of the security configuration that's applied to the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceRole": {
        "description": "The IAM role that Amazon EMR assumes to access AWS resources on your behalf. For more information, see Configure IAM Roles for Amazon EMR in the Amazon EMR Management Guide.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) to help you identify the Amazon EMR cluster.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VisibleToAllUsers": {
        "description": "Indicates whether the instances in the cluster are visible to all IAM users in the AWS account. If you specify true, all IAM users can view and (if they have permissions) manage the instances. If you specify false, only the IAM user that created the cluster can view and manage it.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-emr-cluster.html",
    "properties": [
      "AdditionalInfo",
      "Applications",
      "AutoScalingRole",
      "BootstrapActions",
      "Configurations",
      "CustomAmiId",
      "EbsRootVolumeSize",
      "Instances",
      "JobFlowRole",
      "LogUri",
      "Name",
      "ReleaseLabel",
      "ScaleDownBehavior",
      "SecurityConfiguration",
      "ServiceRole",
      "Tags",
      "VisibleToAllUsers"
    ]
  },
  "AWS::EMR::InstanceFleetConfig": {
    "full_properties": {
      "ClusterId": {
        "description": "The ID of the target cluster.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceFleetType": {
        "description": "The node type that the instance fleet hosts. Valid values are MASTER, CORE, and TASK.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceTypeConfigs": {
        "description": "The instance type configurations that define the EC2 instances in the instance fleet. Duplicates not allowed.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "LaunchSpecifications": {
        "description": "The launch specification for the instance fleet.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The friendly name of the instance fleet. For constraints, see InstanceFleetConfig in the Amazon EMR API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "TargetOnDemandCapacity": {
        "description": "The target capacity of On-Demand units for the instance fleet. This  determines how many On-Demand Instances to provision. For more information, see InstanceFleetConfig in the Amazon EMR API Reference.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "TargetSpotCapacity": {
        "description": "The target capacity of Spot units for the instance fleet. This determines how many Spot Instances to provision. For more information, see InstanceFleetConfig in the Amazon EMR API Reference.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-elasticmapreduce-instancefleetconfig.html",
    "properties": [
      "ClusterId",
      "InstanceFleetType",
      "InstanceTypeConfigs",
      "LaunchSpecifications",
      "Name",
      "TargetOnDemandCapacity",
      "TargetSpotCapacity"
    ]
  },
  "AWS::EMR::InstanceGroupConfig": {
    "full_properties": {
      "AutoScalingPolicy": {
        "description": "An automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster. An automatic scaling policy defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric. For more information, see PutAutoScalingPolicy in the Amazon EMR API Reference.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BidPrice": {
        "description": "The bid price in USD for each Amazon EC2 instance in the instance group when launching instances (nodes) as Spot Instances.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Configurations": {
        "description": "A list of configurations to apply to this instance group. For more information see, Configuring Applications in the Amazon EMR Release Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "EbsConfiguration": {
        "description": "Configures Amazon Elastic Block Store (Amazon EBS) storage volumes to attach to your instances.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "InstanceCount": {
        "description": "The number of instances to launch in the instance group.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "InstanceRole": {
        "description": "The role of the servers in the Amazon EMR cluster, such as TASK. For more information, see Instance Groups in the Amazon EMR Management Guide.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceType": {
        "description": "The EC2 instance type for all instances in the instance group. For more information, see Instance Configurations in the Amazon EMR Management Guide.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "JobFlowId": {
        "description": "The ID of an Amazon EMR cluster that you want to associate this instance group with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Market": {
        "description": "The type of marketplace from which your instances are provisioned into this group, either ON_DEMAND or SPOT. For more information, see Amazon EC2 Purchasing Options.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A name for the instance group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-emr-instancegroupconfig.html",
    "properties": [
      "AutoScalingPolicy",
      "BidPrice",
      "Configurations",
      "EbsConfiguration",
      "InstanceCount",
      "InstanceRole",
      "InstanceType",
      "JobFlowId",
      "Market",
      "Name"
    ]
  },
  "AWS::EMR::SecurityConfiguration": {
    "full_properties": {
      "Name": {
        "description": "The name of the security configuration. For a list of valid parameters for encryption settings, see  AWS CLI Security Configuration JSON Reference in the Amazon EMR Release Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityConfiguration": {
        "description": "The security configuration details in JSON format.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-emr-securityconfiguration.html",
    "properties": [
      "Name",
      "SecurityConfiguration"
    ]
  },
  "AWS::EMR::Step": {
    "full_properties": {
      "ActionOnFailure": {
        "description": "The action to take if the job flow step fails. Currently, AWS CloudFormation supports CONTINUE and CANCEL_AND_WAIT.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "HadoopJarStep": {
        "description": "The JAR file that includes the main function that Amazon EMR executes.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "JobFlowId": {
        "description": "The ID of a cluster in which you want to run this job flow step.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A name for the job flow step.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-emr-step.html",
    "properties": [
      "ActionOnFailure",
      "HadoopJarStep",
      "JobFlowId",
      "Name"
    ]
  },
  "AWS::ElastiCache::CacheCluster": {
    "full_properties": {
      "AZMode": {
        "description": "For Memcached cache clusters, indicates whether the nodes are created in a single Availability Zone or across multiple Availability Zones in the cluster's region. For valid values, see CreateCacheCluster in the Amazon ElastiCache API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AutoMinorVersionUpgrade": {
        "description": "Indicates that minor engine upgrades will be applied automatically to the cache cluster during the maintenance window.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "CacheNodeType": {
        "description": "The compute and memory capacity of nodes in a cache cluster.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "CacheParameterGroupName": {
        "description": "The name of the cache parameter group that is associated with this cache cluster.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "CacheSecurityGroupNames": {
        "description": "A list of cache security group names that are associated with this cache cluster. If your cache cluster is in a VPC, specify the VpcSecurityGroupIds property instead.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "CacheSubnetGroupName": {
        "description": "The cache subnet group that you associate with a cache cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClusterName": {
        "description": "A name for the cache cluster. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the cache cluster. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Engine": {
        "description": "The name of the cache engine to be used for this cache cluster, such as memcached or redis.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineVersion": {
        "description": "The version of the cache engine to be used for this cluster.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "NotificationTopicArn": {
        "description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications will be sent.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NumCacheNodes": {
        "description": "The number of cache nodes that the cache cluster should have.",
        "required": true,
        "type": "Number",
        "update_causes": [
          "replacement",
          "none"
        ]
      },
      "Port": {
        "description": "The port number on which each of the cache nodes will accept connections.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "PreferredAvailabilityZone": {
        "description": "The Amazon EC2 Availability Zone in which the cache cluster is created.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PreferredAvailabilityZones": {
        "description": "For Memcached cache clusters, the list of Availability Zones in which cache nodes are created. The number of Availability Zones listed must equal the number of cache nodes. For example, if you want to create three nodes in two different Availability Zones, you can specify [\"us-east-1a\", \"us-east-1a\", \"us-east-1b\"], which would create two nodes in us-east-1a and one node in us-east-1b.",
        "required": false,
        "type": "Array",
        "update_causes": [
          "replacement",
          "interrupt"
        ]
      },
      "PreferredMaintenanceWindow": {
        "description": "The weekly time range (in UTC) during which system maintenance can occur.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SnapshotArns": {
        "description": "The ARN of the snapshot file that you want to use to seed a new Redis cache cluster. If you manage a Redis instance outside of Amazon ElastiCache, you can create a new cache cluster in ElastiCache by using a snapshot file that is stored in an Amazon S3 bucket.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SnapshotName": {
        "description": "The name of a snapshot from which to restore data into a new Redis cache cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SnapshotRetentionLimit": {
        "description": "For Redis cache clusters, the number of days for which ElastiCache retains automatic snapshots before deleting them. For example, if you set the value to 5, a snapshot that was taken today will be retained for 5 days before being deleted.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SnapshotWindow": {
        "description": "For Redis cache clusters, the daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your node group. For example, you can specify 05:00-09:00.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this cache cluster.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VpcSecurityGroupIds": {
        "description": "A list of VPC security group IDs. If your cache cluster isn't in a VPC, specify the CacheSecurityGroupNames property instead.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-elasticache-cache-cluster.html",
    "properties": [
      "AutoMinorVersionUpgrade",
      "AZMode",
      "CacheNodeType",
      "CacheParameterGroupName",
      "CacheSecurityGroupNames",
      "CacheSubnetGroupName",
      "ClusterName",
      "Engine",
      "EngineVersion",
      "NotificationTopicArn",
      "NumCacheNodes",
      "Port",
      "PreferredAvailabilityZone",
      "PreferredAvailabilityZones",
      "PreferredMaintenanceWindow",
      "SnapshotArns",
      "SnapshotName",
      "SnapshotRetentionLimit",
      "SnapshotWindow",
      "Tags",
      "VpcSecurityGroupIds"
    ]
  },
  "AWS::ElastiCache::ParameterGroup": {
    "full_properties": {
      "CacheParameterGroupFamily": {
        "description": "The name of the cache parameter group family that the cache parameter group can be used with.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Description": {
        "description": "The description for the Cache Parameter Group.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Properties": {
        "description": "A comma-delimited list of parameter name/value pairs. For more information, go to ModifyCacheParameterGroup in the Amazon ElastiCache API Reference Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "unavailable"
      }
    },
    "path": "aws-properties-elasticache-parameter-group.html",
    "properties": [
      "CacheParameterGroupFamily",
      "Description",
      "Properties"
    ]
  },
  "AWS::ElastiCache::ReplicationGroup": {
    "full_properties": {
      "AtRestEncryptionEnabled": {
        "description": "Indicates whether to enable encryption at rest. The default value is false. For more information about how you can use this property, see CreateReplicationGroup in the Amazon ElastiCache API Reference.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "AuthToken": {
        "description": "The password that's used to access a password-protected server. For constraints, see CreateReplicationGroup in the Amazon ElastiCache API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "AutoMinorVersionUpgrade": {
        "description": "Currently, this property isn't used by ElastiCache.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AutomaticFailoverEnabled": {
        "description": "Indicates whether Multi-AZ is enabled. When Multi-AZ is enabled, a read-only replica is automatically promoted to a read-write primary cluster if the existing primary cluster fails. If you specify true, you must specify a value greater than 1 for the NumCacheClusters property. By default, AWS CloudFormation sets the value to true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "CacheNodeType": {
        "description": "The compute and memory capacity of nodes in the node group. For valid values, see CreateReplicationGroup in the Amazon ElastiCache API Reference Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CacheParameterGroupName": {
        "description": "The name of the parameter group to associate with this replication group. For valid and default values, see CreateReplicationGroup in the Amazon ElastiCache API Reference Guide.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "CacheSecurityGroupNames": {
        "description": "A list of cache security group names to associate with this replication group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "CacheSubnetGroupName": {
        "description": "The name of a cache subnet group to use for this replication group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Engine": {
        "description": "The name of the cache engine to use for the cache clusters in this replication group. Currently, you can specify only redis.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "EngineVersion": {
        "description": "The version number of the cache engine to use for the cache clusters in this replication group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NodeGroupConfiguration": {
        "description": "Configuration options for the node group (shard).",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "NotificationTopicArn": {
        "description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service topic to which notifications are sent.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NumCacheClusters": {
        "description": "The number of cache clusters for this replication group. If automatic failover is enabled, you must specify a value greater than 1. For valid values, see CreateReplicationGroup in the Amazon ElastiCache API Reference Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "NumNodeGroups": {
        "description": "The number of node groups (shards) for this Redis (clustered mode enabled) replication group. For Redis (clustered mode disabled), omit this property.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Port": {
        "description": "The port number on which each member of the replication group accepts connections.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "PreferredCacheClusterAZs": {
        "description": "A list of Availability Zones in which the cache clusters in this replication group are created.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "PreferredMaintenanceWindow": {
        "description": "The weekly time range during which system maintenance can occur. Use the following format to specify a time range: ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). For example, you can specify sun:22:00-sun:23:30 for Sunday from 10 PM to 11:30 PM.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PrimaryClusterId": {
        "description": "The cache cluster that ElastiCache uses as the primary cluster for the replication group. The cache cluster must have a status of available.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ReplicasPerNodeGroup": {
        "description": "The number of replica nodes in each node group (shard). For valid values, see CreateReplicationGroup in the Amazon ElastiCache API Reference Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "ReplicationGroupDescription": {
        "description": "A description of the replication group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ReplicationGroupId": {
        "description": "An ID for the replication group. If you don't specify an ID, AWS CloudFormation generates a unique physical ID. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SecurityGroupIds": {
        "description": "A list of Amazon Virtual Private Cloud (Amazon VPC) security groups to associate with this replication group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SnapshotArns": {
        "description": "A single-element string list that specifies an ARN of a Redis .rdb snapshot file that is stored in Amazon Simple Storage Service (Amazon S3). The snapshot file populates the node group. The Amazon S3 object name in the ARN cannot contain commas. For example, you can specify arn:aws:s3:::my_bucket/snapshot1.rdb.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SnapshotName": {
        "description": "The name of a snapshot from which to restore data into the replication group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SnapshotRetentionLimit": {
        "description": "The number of days that ElastiCache retains automatic snapshots before deleting them.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "SnapshotWindow": {
        "description": "The time range (in UTC) when ElastiCache takes a daily snapshot of the node group that you specified in the SnapshottingClusterId property. For example, you can specify 05:00-09:00.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SnapshottingClusterId": {
        "description": "The ID of the cache cluster that ElastiCache uses as the daily snapshot source for the replication group.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this replication group.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TransitEncryptionEnabled": {
        "description": "Indicates whether to enable in-transit encryption. The default value is false. For more information about how you can use this property, see CreateReplicationGroup in the Amazon ElastiCache API Reference.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-elasticache-replicationgroup.html",
    "properties": [
      "AtRestEncryptionEnabled",
      "AuthToken",
      "AutomaticFailoverEnabled",
      "AutoMinorVersionUpgrade",
      "CacheNodeType",
      "CacheParameterGroupName",
      "CacheSecurityGroupNames",
      "CacheSubnetGroupName",
      "Engine",
      "EngineVersion",
      "NodeGroupConfiguration",
      "NotificationTopicArn",
      "NumCacheClusters",
      "NumNodeGroups",
      "Port",
      "PreferredCacheClusterAZs",
      "PreferredMaintenanceWindow",
      "PrimaryClusterId",
      "ReplicasPerNodeGroup",
      "ReplicationGroupDescription",
      "ReplicationGroupId",
      "SecurityGroupIds",
      "SnapshotArns",
      "SnapshotName",
      "SnapshotRetentionLimit",
      "SnapshottingClusterId",
      "SnapshotWindow",
      "Tags",
      "TransitEncryptionEnabled"
    ]
  },
  "AWS::ElastiCache::SecurityGroup": {
    "full_properties": {
      "Description": {
        "description": "A description for the cache security group.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      }
    },
    "path": "aws-properties-elasticache-security-group.html",
    "properties": [
      "Description"
    ]
  },
  "AWS::ElastiCache::SecurityGroupIngress": {
    "full_properties": {
      "CacheSecurityGroupName": {
        "description": "The name of the Cache Security Group to authorize.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "EC2SecurityGroupName": {
        "description": "Name of the EC2 Security Group to include in the authorization.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "EC2SecurityGroupOwnerId": {
        "description": "Specifies the AWS Account ID of the owner of the EC2 security group specified in the EC2SecurityGroupName property. The AWS access key ID is not an acceptable value.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      }
    },
    "path": "aws-properties-elasticache-security-group-ingress.html",
    "properties": [
      "CacheSecurityGroupName",
      "EC2SecurityGroupName",
      "EC2SecurityGroupOwnerId"
    ]
  },
  "AWS::ElastiCache::SubnetGroup": {
    "full_properties": {
      "CacheSubnetGroupName": {
        "description": "A name for the cache subnet group. If you don't specify a name, AWS CloudFormation generates a unique physical ID. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "The description for the cache subnet group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SubnetIds": {
        "description": "The Amazon EC2 subnet IDs for the cache subnet group.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-elasticache-subnetgroup.html",
    "properties": [
      "CacheSubnetGroupName",
      "Description",
      "SubnetIds"
    ]
  },
  "AWS::ElasticBeanstalk::Application": {
    "full_properties": {
      "ApplicationName": {
        "description": "A name for the Elastic Beanstalk application. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the application name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "An optional description of this application.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ResourceLifecycleConfig": {
        "description": "Defines lifecycle settings for resources that belong to the application, and the service role that Elastic Beanstalk assumes in order to apply lifecycle settings.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-beanstalk.html",
    "properties": [
      "ApplicationName",
      "Description",
      "ResourceLifecycleConfig"
    ]
  },
  "AWS::ElasticBeanstalk::ApplicationVersion": {
    "full_properties": {
      "ApplicationName": {
        "description": "Name of the Elastic Beanstalk application that is associated with this application version.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description of this application version.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "SourceBundle": {
        "description": "The location of the source bundle for this version.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-properties-beanstalk-version.html",
    "properties": [
      "ApplicationName",
      "Description",
      "SourceBundle"
    ]
  },
  "AWS::ElasticBeanstalk::ConfigurationTemplate": {
    "full_properties": {
      "ApplicationName": {
        "description": "Name of the Elastic Beanstalk application that is associated with this configuration template.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "An optional description for this configuration.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "EnvironmentId": {
        "description": "An environment whose settings you want to use to create the configuration template. You must specify this property if you don't specify the SolutionStackName or SourceConfiguration properties.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "OptionSettings": {
        "description": "The options for the Elastic Beanstalk configuration, such as the instance type. For a complete list of Elastic Beanstalk configuration options, see  Option Values, in the AWS Elastic Beanstalk Developer Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "PlatformArn": {
        "description": "The Amazon Resource Name (ARN) of the custom platform. For more information, see Custom Platforms in the AWS Elastic Beanstalk Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SolutionStackName": {
        "description": "The name of an Elastic Beanstalk solution stack that this configuration will use. A solution stack specifies the operating system, architecture, and application server for a configuration template, such as 64bit Amazon Linux 2013.09 running Tomcat 7 Java 7. For more information, see Supported Platforms in the AWS Elastic Beanstalk Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceConfiguration": {
        "description": "A configuration template that is associated with another Elastic Beanstalk application. If you specify the SolutionStackName property and the SourceConfiguration property, the solution stack in the source configuration template must match the value that you specified for the SolutionStackName property.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-beanstalk-configurationtemplate.html",
    "properties": [
      "ApplicationName",
      "Description",
      "EnvironmentId",
      "OptionSettings",
      "PlatformArn",
      "SolutionStackName",
      "SourceConfiguration"
    ]
  },
  "AWS::ElasticBeanstalk::Environment": {
    "full_properties": {
      "ApplicationName": {
        "description": "The name of the application that is associated with this environment.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "CNAMEPrefix": {
        "description": "A prefix for your Elastic Beanstalk environment URL.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "A description that helps you identify this environment.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EnvironmentName": {
        "description": "A name for the Elastic Beanstalk environment. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the environment name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "OptionSettings": {
        "description": "Key-value pairs defining configuration options for this environment, such as the instance type. These options override the values that are defined in the solution stack or the configuration template. If you remove any options during a stack update, the removed options revert to default values.",
        "required": true,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "PlatformArn": {
        "description": "The Amazon Resource Name (ARN) of the custom platform to use with the environment.  For more information, see Custom Platforms in the AWS Elastic Beanstalk Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SolutionStackName": {
        "description": "The name of an Elastic Beanstalk solution stack that this configuration will use. For more information, see Supported Platforms in the AWS Elastic Beanstalk Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this environment.",
        "required": false,
        "type": "Unknown",
        "update_causes": "unknown"
      },
      "TemplateName": {
        "description": "The name of the Elastic Beanstalk configuration template to use with the environment.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Tier": {
        "description": "Specifies the tier to use in creating this environment. The environment tier that you choose determines whether Elastic Beanstalk provisions resources to support a web application that handles HTTP(S) requests or a web application that handles background-processing tasks.",
        "required": false,
        "type": "Unknown",
        "update_causes": "unknown"
      },
      "VersionLabel": {
        "description": "The version to associate with the environment.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-properties-beanstalk-environment.html",
    "properties": [
      "ApplicationName",
      "CNAMEPrefix",
      "Description",
      "EnvironmentName",
      "OptionSettings",
      "PlatformArn",
      "SolutionStackName",
      "Tags",
      "TemplateName",
      "Tier",
      "VersionLabel"
    ]
  },
  "AWS::ElasticLoadBalancing::LoadBalancer": {
    "full_properties": {
      "AccessLoggingPolicy": {
        "description": "Captures detailed information for all requests made to your load balancer, such as the time a request was received, client’s IP address, latencies, request path, and server responses.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AppCookieStickinessPolicy": {
        "description": "Generates one or more stickiness policies with sticky session lifetimes that follow that of an application-generated cookie. These policies can be associated only with HTTP/HTTPS listeners.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AvailabilityZones": {
        "description": "The Availability Zones in which to create the load balancer. You can specify the AvailabilityZones or Subnets property, but not both.",
        "required": false,
        "type": "Array",
        "update_causes": [
          "replacement",
          "none"
        ]
      },
      "ConnectionDrainingPolicy": {
        "description": "Whether deregistered or unhealthy instances can complete all in-flight requests.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ConnectionSettings": {
        "description": "Specifies how long front-end and back-end connections of your load balancer can remain idle.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CrossZone": {
        "description": "Whether cross-zone load balancing is enabled for the load balancer. With cross-zone load balancing, your load balancer nodes route traffic to the back-end instances across all Availability Zones. By default the CrossZone property is false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "HealthCheck": {
        "description": "Application health check for the instances.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "replacement",
          "none"
        ]
      },
      "Instances": {
        "description": "A list of EC2 instance IDs for the load balancer.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "LBCookieStickinessPolicy": {
        "description": "Generates a stickiness policy with sticky session lifetimes controlled by the lifetime of the browser (user-agent), or by a specified expiration period. This policy can be associated only with HTTP/HTTPS listeners.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Listeners": {
        "description": "One or more listeners for this load balancer. Each listener must be registered for a specific port, and you cannot have more than one listener for a given port.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "LoadBalancerName": {
        "description": "A name for the load balancer. For valid values, see the LoadBalancerName parameter for the CreateLoadBalancer action in the Elastic Load Balancing API Reference version 2012-06-01.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Policies": {
        "description": "A list of elastic load balancing policies to apply to this elastic load balancer. Specify only back-end server policies. For more information, see DescribeLoadBalancerPolicyTypes in the Elastic Load Balancing API Reference version 2012-06-01.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Scheme": {
        "description": "For load balancers attached to an Amazon VPC, this parameter can be used to specify the type of load balancer to use. Specify internal to create an internal load balancer with a DNS name that resolves to private IP addresses or internet-facing to create a load balancer with a publicly resolvable DNS name, which resolves to public IP addresses.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityGroups": {
        "description": "Required: No",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Subnets": {
        "description": "A list of subnet IDs in your virtual private cloud (VPC) to attach to your load balancer. Do not specify multiple subnets that are in the same Availability Zone. You can specify the AvailabilityZones or Subnets property, but not both.",
        "required": false,
        "type": "Array",
        "update_causes": [
          "replacement",
          "none"
        ]
      },
      "Tags": {
        "description": "An arbitrary set of tags (key-value pairs) for this load balancer.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-ec2-elb.html",
    "properties": [
      "AccessLoggingPolicy",
      "AppCookieStickinessPolicy",
      "AvailabilityZones",
      "ConnectionDrainingPolicy",
      "ConnectionSettings",
      "CrossZone",
      "HealthCheck",
      "Instances",
      "LBCookieStickinessPolicy",
      "LoadBalancerName",
      "Listeners",
      "Policies",
      "Scheme",
      "SecurityGroups",
      "Subnets",
      "Tags"
    ]
  },
  "AWS::ElasticLoadBalancingV2::Listener": {
    "full_properties": {
      "Certificates": {
        "description": "The SSL server certificate for the listener. With a certificate, you can encrypt traffic between the load balancer and the clients that initiate HTTPS sessions, and traffic between the load balancer and your targets.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DefaultActions": {
        "description": "The default actions that the listener takes when handling incoming requests.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "LoadBalancerArn": {
        "description": "The Amazon Resource Name (ARN) of the load balancer to associate with the listener.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Port": {
        "description": "The port on which the listener listens for requests.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "Protocol": {
        "description": "The protocol that clients must use to send requests to the listener.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SslPolicy": {
        "description": "The security policy that defines the ciphers and protocols that the load balancer supports.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-elasticloadbalancingv2-listener.html",
    "properties": [
      "Certificates",
      "DefaultActions",
      "LoadBalancerArn",
      "Port",
      "Protocol",
      "SslPolicy"
    ]
  },
  "AWS::ElasticLoadBalancingV2::ListenerCertificate": {
    "full_properties": {
      "Certificates": {
        "description": "Certificates specified for the listener. Duplicates not allowed.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "ListenerArn": {
        "description": "The Amazon Resource Name (ARN) of the listener.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-elasticloadbalancingv2-listenercertificate.html",
    "properties": [
      "Certificates",
      "ListenerArn"
    ]
  },
  "AWS::ElasticLoadBalancingV2::ListenerRule": {
    "full_properties": {
      "Actions": {
        "description": "The action that the listener takes when a request meets the specified condition.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Conditions": {
        "description": "The conditions under which a rule takes effect.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "ListenerArn": {
        "description": "The Amazon Resource Name (ARN) of the listener that the rule applies to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Priority": {
        "description": "The priority for the rule. Elastic Load Balancing evaluates rules in priority order, from the lowest value to the highest value. If a request satisfies a rule, Elastic Load Balancing ignores all subsequent rules.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-elasticloadbalancingv2-listenerrule.html",
    "properties": [
      "Actions",
      "Conditions",
      "ListenerArn",
      "Priority"
    ]
  },
  "AWS::ElasticLoadBalancingV2::LoadBalancer": {
    "full_properties": {
      "IpAddressType": {
        "description": "[Application Load Balancers] The type of IP addresses that are used by the load balancer's subnets, such as ipv4 (for IPv4 addresses) or dualstack (for IPv4 and IPv6 addresses). For valid values, see the IpAddressType parameter for the CreateLoadBalancer action in the Elastic Load Balancing API Reference version 2015-12-01. The default value is ipv4.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LoadBalancerAttributes": {
        "description": "Specifies the load balancer configuration.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "Specifies a name for the load balancer. This name must be unique within your AWS account and can have a maximum of 32 alphanumeric characters and hyphens. A name can't begin or end with a hyphen.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Scheme": {
        "description": "Specifies whether the load balancer is internal or Internet-facing. Valid values are internet-facing and internal. The default is internet-facing.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SecurityGroups": {
        "description": "[Application Load Balancers] Specifies a list of the IDs of the security groups to assign to the load balancer.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SubnetMappings": {
        "description": "The subnets to attach to the load balancer, specified as a list of SubnetMapping property types. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Subnets": {
        "description": "The subnets to attach to the load balancer, specified as a list of subnet IDs. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Specifies an arbitrary set of tags (key–value pairs) to associate with this load balancer. Use tags to manage your resources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Type": {
        "description": "Specifies the type of load balancer to create. Valid values are application and network.The default is application.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-elasticloadbalancingv2-loadbalancer.html",
    "properties": [
      "LoadBalancerAttributes",
      "Name",
      "Scheme",
      "SecurityGroups",
      "SubnetMappings",
      "Subnets",
      "Tags",
      "Type",
      "IpAddressType"
    ]
  },
  "AWS::ElasticLoadBalancingV2::TargetGroup": {
    "full_properties": {
      "HealthCheckIntervalSeconds": {
        "description": "The approximate number of seconds between health checks for an individual target.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "HealthCheckPath": {
        "description": "The ping path destination where Elastic Load Balancing sends health check requests.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HealthCheckPort": {
        "description": "The port that the load balancer uses when performing health checks on the targets.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HealthCheckProtocol": {
        "description": "The protocol that the load balancer uses when performing health checks on the targets, such as HTTP or HTTPS.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HealthCheckTimeoutSeconds": {
        "description": "The number of seconds to wait for a response before considering that a health check has failed.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "HealthyThresholdCount": {
        "description": "The number of consecutive successful health checks that are required before an unhealthy target is considered healthy.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Matcher": {
        "description": "The HTTP codes that a healthy target uses when responding to a health check.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the target group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Port": {
        "description": "The port on which the targets receive traffic.",
        "required": true,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Protocol": {
        "description": "The protocol to use for routing traffic to the targets.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for the target group. Use tags to help manage resources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TargetGroupAttributes": {
        "description": "Target group configurations.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TargetType": {
        "description": "The registration type of the targets in this target group. Valid values are instance and ip. The default is instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Targets": {
        "description": "The targets to add to this target group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UnhealthyThresholdCount": {
        "description": "The number of consecutive failed health checks that are required before a target is considered unhealthy.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The ID of the VPC in which your targets are located.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-elasticloadbalancingv2-targetgroup.html",
    "properties": [
      "HealthCheckIntervalSeconds",
      "HealthCheckPath",
      "HealthCheckPort",
      "HealthCheckProtocol",
      "HealthCheckTimeoutSeconds",
      "HealthyThresholdCount",
      "Matcher",
      "Name",
      "Port",
      "Protocol",
      "Tags",
      "TargetGroupAttributes",
      "Targets",
      "TargetType",
      "UnhealthyThresholdCount",
      "VpcId"
    ]
  },
  "AWS::Elasticsearch::Domain": {
    "full_properties": {
      "AccessPolicies": {
        "description": "An AWS Identity and Access Management (IAM) policy document that specifies who can access the Amazon ES domain and their permissions. For more information, see Configuring Access Policies in the Amazon Elasticsearch Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AdvancedOptions": {
        "description": "Additional options to specify for the Amazon ES domain. For more information, see Configuring Advanced Options in the Amazon Elasticsearch Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DomainName": {
        "description": "A name for the Amazon ES domain. For valid values, see the DomainName data type in the Amazon Elasticsearch Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "EBSOptions": {
        "description": "The configurations of Amazon Elastic Block Store (Amazon EBS) volumes that are attached to data nodes in the Amazon ES domain. For more information, see Configuring EBS-based Storage in the Amazon Elasticsearch Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ElasticsearchClusterConfig": {
        "description": "The cluster configuration for the  Amazon ES domain. You can specify options such as the instance type and the number of instances. For more information, see Configuring Amazon ES Domains in the Amazon Elasticsearch Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ElasticsearchVersion": {
        "description": "The version of Elasticsearch to use, such as 2.3. For information about the versions that Amazon ES supports, see the Elasticsearch-Version parameter for the CreateElasticsearchDomain action in the Amazon Elasticsearch Service Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EncryptionAtRestOptions": {
        "description": "Whether the domain should encrypt data at rest, and if so, the AWS Key Management Service (KMS) key to use. Can only be used to create a new domain, not update an existing one.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SnapshotOptions": {
        "description": "The automated snapshot configuration for the Amazon ES domain indices.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) to associate with the Amazon ES domain.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VPCOptions": {
        "description": "The virtual private cloud (VPC) configuration for the Amazon ES domain. For more information, see VPC Support for Amazon Elasticsearch Service Domains in the Amazon Elasticsearch Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-elasticsearch-domain.html",
    "properties": [
      "AccessPolicies",
      "AdvancedOptions",
      "DomainName",
      "EBSOptions",
      "ElasticsearchClusterConfig",
      "ElasticsearchVersion",
      "EncryptionAtRestOptions",
      "SnapshotOptions",
      "Tags",
      "VPCOptions"
    ]
  },
  "AWS::Events::Rule": {
    "full_properties": {
      "Description": {
        "description": "A description of the rule's purpose.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EventPattern": {
        "description": "Describes which events CloudWatch Events routes to the specified target. These routed events are matched events. For more information, see Events and Event Patterns in the Amazon CloudWatch User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the rule. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the rule name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ScheduleExpression": {
        "description": "The schedule or rate (frequency) that determines when CloudWatch Events runs the rule. For more information, see Schedule Expression Syntax for Rules in the Amazon CloudWatch User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "State": {
        "description": "Indicates whether the rule is enabled. For valid values, see the State parameter for the PutRule action in the Amazon CloudWatch Events API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Targets": {
        "description": "The resources, such as Lambda functions or Kinesis streams, that CloudWatch Events routes events to and invokes when the rule is triggered. For information about valid targets, see the PutTargets action in the Amazon CloudWatch Events API Reference.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-events-rule.html",
    "properties": [
      "Description",
      "EventPattern",
      "Name",
      "ScheduleExpression",
      "State",
      "Targets"
    ]
  },
  "AWS::GameLift::Alias": {
    "full_properties": {
      "Description": {
        "description": "Information that helps you identify the purpose of this alias.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "An identifier to associate with this alias. Alias names don't need to be unique.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoutingStrategy": {
        "description": "A routing configuration that specifies where traffic is directed for this alias, such as to a fleet or to a message.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-gamelift-alias.html",
    "properties": [
      "Description",
      "Name",
      "RoutingStrategy"
    ]
  },
  "AWS::GameLift::Build": {
    "full_properties": {
      "Name": {
        "description": "An identifier to associate with this build. Build names don't need to be unique.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "StorageLocation": {
        "description": "The Amazon Simple Storage Service (Amazon S3) location where your build package files are located.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Version": {
        "description": "A version to associate with this build. Version is useful if you want to track updates to your build package files. Versions don't need to be unique.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-gamelift-build.html",
    "properties": [
      "Name",
      "StorageLocation",
      "Version"
    ]
  },
  "AWS::GameLift::Fleet": {
    "full_properties": {
      "BuildId": {
        "description": "The unique identifier for the build that you want to use with this fleet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Description": {
        "description": "Information that helps you identify the purpose of this fleet.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DesiredEC2Instances": {
        "description": "The number of EC2 instances that you want in this fleet.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "EC2InboundPermissions": {
        "description": "The incoming traffic, expressed as IP ranges and port numbers, that is permitted to access the game server. If you don't specify values, no traffic is permitted to your game servers.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EC2InstanceType": {
        "description": "The type of EC2 instances that the fleet uses. EC2 instance types define the CPU, memory, storage, and networking capacity of the fleet's hosts. For more information about the instance types that are supported by GameLift, see the EC2InstanceType parameter in the Amazon GameLift API Reference.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "LogPaths": {
        "description": "The path to game-session log files that are generated by your game server, with the slashes (\\) escaped. After a game session has been terminated, GameLift captures and stores the logs in an S3 bucket.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "MaxSize": {
        "description": "The maximum number of EC2 instances that you want to allow in this fleet. By default, AWS CloudFormation, sets this property to 1.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MinSize": {
        "description": "The minimum number of EC2 instances that you want to allow in this fleet. By default, AWS CloudFormation, sets this property to 0.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Name": {
        "description": "An identifier to associate with this fleet. Fleet names don't need to be unique.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ServerLaunchParameters": {
        "description": "The parameters that are required to launch your game server. Specify these parameters as a string of command-line parameters, such as +sv_port 33435 +start_lobby.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServerLaunchPath": {
        "description": "The location of your game server that GameLift launches. You must escape the slashes (\\) and use the following pattern: C:\\\\game\\\\launchpath. For example, if your game server files are in the MyGame folder, the path should be C:\\\\game\\\\MyGame\\\\server.exe.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-gamelift-fleet.html",
    "properties": [
      "BuildId",
      "Description",
      "DesiredEC2Instances",
      "EC2InboundPermissions",
      "EC2InstanceType",
      "LogPaths",
      "MaxSize",
      "MinSize",
      "Name",
      "ServerLaunchParameters",
      "ServerLaunchPath"
    ]
  },
  "AWS::Glue::Classifier": {
    "full_properties": {
      "GrokClassifier": {
        "description": "A classifier that uses grok.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-classifier.html",
    "properties": [
      "GrokClassifier"
    ]
  },
  "AWS::Glue::Connection": {
    "full_properties": {
      "CatalogId": {
        "description": "The ID of the data catalog to create the catalog object in. Currently, this should be the AWS account ID.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ConnectionInput": {
        "description": "The connection that you want to create.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-connection.html",
    "properties": [
      "ConnectionInput",
      "CatalogId"
    ]
  },
  "AWS::Glue::Crawler": {
    "full_properties": {
      "Classifiers": {
        "description": "A list of UTF-8 strings that specify the custom classifiers that are associated with the crawler.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DatabaseName": {
        "description": "The name of the database where the crawler's output is stored.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the crawler and where it should be used. It must match the URI address multi-line string pattern: [\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the crawler. Must match the single-line string pattern: [\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Role": {
        "description": "The Amazon Resource Name (ARN) of an IAM role that's used to access customer resources, such as Amazon S3 data.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Schedule": {
        "description": "The schedule for the crawler.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "SchemaChangePolicy": {
        "description": "The policy that specifies update and delete behaviors for the crawler.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "TablePrefix": {
        "description": "The table prefix that's used for catalog tables that are created.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Targets": {
        "description": "The crawler targets.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-crawler.html",
    "properties": [
      "Role",
      "Classifiers",
      "Description",
      "SchemaChangePolicy",
      "Schedule",
      "DatabaseName",
      "Targets",
      "TablePrefix",
      "Name"
    ]
  },
  "AWS::Glue::Database": {
    "full_properties": {
      "CatalogId": {
        "description": "The ID of the data catalog to create the catalog object in. Currently, this should be the AWS account ID.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DatabaseInput": {
        "description": "The metadata of the database.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-database.html",
    "properties": [
      "DatabaseInput",
      "CatalogId"
    ]
  },
  "AWS::Glue::DevEndpoint": {
    "full_properties": {
      "EndpointName": {
        "description": "The name of the endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ExtraJarsS3Path": {
        "description": "The path to one or more Java Jars in an Amazon S3 bucket to load in your endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ExtraPythonLibsS3Path": {
        "description": "The path to one or more Python libraries in an Amazon S3 bucket to load in your endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NumberOfNodes": {
        "description": "The number of nodes that the endpoint uses.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "PublicKey": {
        "description": "The public key for the endpoint to use for authentication.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role for the endpoint. It must match the AWS ARN string pattern: arn:aws:iam::\\d{12}:role/.*",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SecurityGroupIds": {
        "description": "A list of UTF-8 strings that specify the security group IDs for the endpoint.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SubnetId": {
        "description": "The subnet ID for the endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-devendpoint.html",
    "properties": [
      "EndpointName",
      "ExtraJarsS3Path",
      "ExtraPythonLibsS3Path",
      "NumberOfNodes",
      "PublicKey",
      "RoleArn",
      "SecurityGroupIds",
      "SubnetId"
    ]
  },
  "AWS::Glue::Job": {
    "full_properties": {
      "AllocatedCapacity": {
        "description": "The number of capacity units that are allocated to this job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Command": {
        "description": "The code that executes a job.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Connections": {
        "description": "The connections that are used by the job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DefaultArguments": {
        "description": "UTF-8 string–to–UTF-8 string key-value pairs that specify the default parameters for the job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the job.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ExecutionProperty": {
        "description": "The execution property of the job, which specifies the maximum number of concurrent runs that are allowed for the job.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LogUri": {
        "description": "The location of the logs for the job.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MaxRetries": {
        "description": "The maximum number of times to retry this job if it fails.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the job. It must match the single-line string pattern: [\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Role": {
        "description": "The role that's associated with the job.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-job.html",
    "properties": [
      "Role",
      "DefaultArguments",
      "Connections",
      "MaxRetries",
      "Description",
      "LogUri",
      "Command",
      "AllocatedCapacity",
      "ExecutionProperty",
      "Name"
    ]
  },
  "AWS::Glue::Partition": {
    "full_properties": {
      "CatalogId": {
        "description": "The ID of the data catalog to create the catalog object in. Currently, this should be the AWS account ID.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DatabaseName": {
        "description": "The name of the catalog database to create the partition in. It must match the single-line string pattern: [\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PartitionInput": {
        "description": "The metadata of the partition.",
        "required": true,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "TableName": {
        "description": "The name of the metadata table to create the partition in.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-glue-partition.html",
    "properties": [
      "TableName",
      "DatabaseName",
      "CatalogId",
      "PartitionInput"
    ]
  },
  "AWS::Glue::Table": {
    "full_properties": {
      "CatalogId": {
        "description": "The ID of the data catalog to create the catalog object in. Currently, this should be the AWS account ID.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DatabaseName": {
        "description": "The name of the catalog database for the table. It must match the single-line string pattern: [\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TableInput": {
        "description": "The metadata of the table.",
        "required": true,
        "type": "Unknown",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-glue-table.html",
    "properties": [
      "TableInput",
      "DatabaseName",
      "CatalogId"
    ]
  },
  "AWS::Glue::Trigger": {
    "full_properties": {
      "Actions": {
        "description": "The actions that the job trigger initiates when it fires.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the job trigger.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the job trigger.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Predicate": {
        "description": "The predicate of the job trigger, which determines when the trigger fires.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Schedule": {
        "description": "The cron schedule expression for the job trigger.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of job trigger. Valid values are SCHEDULED, CONDITIONAL, or ON_DEMAND.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-glue-trigger.html",
    "properties": [
      "Type",
      "Description",
      "Actions",
      "Schedule",
      "Name",
      "Predicate"
    ]
  },
  "AWS::GuardDuty::Detector": {
    "full_properties": {
      "Enable": {
        "description": "A Boolean value that specifies whether the detector is to be enabled.",
        "required": true,
        "type": "Boolean",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-guardduty-detector.html",
    "properties": [
      "Enable"
    ]
  },
  "AWS::GuardDuty::Filter": {
    "full_properties": {
      "Action": {
        "description": "Specifies the action that is to be applied to the findings that match the filter. Valid values are: NOOP | ARCHIVE",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Description": {
        "description": "The description of the filter.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "DetectorId": {
        "description": "The ID of the detector that specifies the GuardDuty service whose findings you want to filter.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FindingCriteria": {
        "description": "Represents the criteria to be used in the filter for querying findings.",
        "required": true,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "Name": {
        "description": "The name of the filter.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Rank": {
        "description": "Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.",
        "required": true,
        "type": "Number",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-guardduty-filter.html",
    "properties": [
      "Action",
      "Description",
      "DetectorId",
      "FindingCriteria",
      "Rank",
      "Name"
    ]
  },
  "AWS::GuardDuty::IPSet": {
    "full_properties": {
      "Activate": {
        "description": "A Boolean value that indicates whether GuardDuty is to start using the uploaded IP set.",
        "required": true,
        "type": "Boolean",
        "update_causes": "interrupt"
      },
      "DetectorId": {
        "description": "The detector ID that specifies the GuardDuty service for which an IP set is to be created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Format": {
        "description": "The format of the file that contains the IP set. Valid values are TXT, STIX, and OTX_CSV.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Location": {
        "description": "The URI of the file that contains the IP set.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Name": {
        "description": "The friendly name to identify the IP set. This name is displayed in all findings that are triggered by activity that involves IP addresses included in this IP set.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-guardduty-ipset.html",
    "properties": [
      "Activate",
      "DetectorId",
      "Format",
      "Location",
      "Name"
    ]
  },
  "AWS::GuardDuty::Master": {
    "full_properties": {
      "DetectorId": {
        "description": "The detector ID of the AWS account that is accepting an invitation to become a GuardDuty member account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "InvitationId": {
        "description": "The ID of the invitation that is sent to the AWS account by the GuardDuty master account. There are several ways to retrieve the invitationId:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MasterId": {
        "description": "The account ID of the master GuardDuty account whose invitation you're accepting.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-guardduty-master.html",
    "properties": [
      "DetectorId",
      "MasterId",
      "InvitationId"
    ]
  },
  "AWS::GuardDuty::Member": {
    "full_properties": {
      "DetectorId": {
        "description": "The unique ID of the detector in a GuardDuty master account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DisableEmailNotification": {
        "description": "Specifies whether an email notification is sent to the accounts that you want to invite to GuardDuty as members. When set to 'True', email notification is not sent to the invitees.",
        "required": false,
        "type": "Boolean",
        "update_causes": "interrupt"
      },
      "Email": {
        "description": "The email address of the GuardDuty member account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MemberId": {
        "description": "The account ID of the member GuardDuty account.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Message": {
        "description": "The invitation message that you want to send to the account that you invite to GuardDuty as a member.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Status": {
        "description": "You can use this property to update the status of the relationship between the member account and its master account. Valid values are CREATED | INVITED | DISABLED | ENABLED | REMOVED | RESIGNED. If the value for this property is not provided or set to CREATED, a member account is only created. If the value of this property is set to INVITED, a member account is created and invited.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-guardduty-member.html",
    "properties": [
      "Status",
      "MemberId",
      "Email",
      "Message",
      "DetectorId",
      "DisableEmailNotification"
    ]
  },
  "AWS::GuardDuty::ThreatIntelSet": {
    "full_properties": {
      "Activate": {
        "description": "A Boolean value that indicates whether GuardDuty should start using the uploaded ThreatIntelSet.",
        "required": true,
        "type": "Boolean",
        "update_causes": "interrupt"
      },
      "DetectorId": {
        "description": "The detector ID that specifies the GuardDuty service for which an ThreatIntelSet is to be created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Format": {
        "description": "The format of the file that contains the ThreatIntelSet. Valid values are TXT, STIX, OTX_CSV, ALIEN_VAULT, PROOF_POINT, and FIRE_EYE.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Location": {
        "description": "The URI of the file that contains the ThreatIntelSet.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Name": {
        "description": "A friendly ThreatIntelSet name that is displayed in all findings generated by activity that involves IP addresses included in this ThreatIntelSet.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-guardduty-threatintelset.html",
    "properties": [
      "Activate",
      "DetectorId",
      "Format",
      "Location",
      "Name"
    ]
  },
  "AWS::IAM::AccessKey": {
    "full_properties": {
      "Serial": {
        "description": "This value is specific to AWS CloudFormation and can only be incremented. Incrementing this value notifies AWS CloudFormation that you want to rotate your access key. When you update your stack, AWS CloudFormation will replace the existing access key with a new key.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "Status": {
        "description": "The status of the access key. By default, AWS CloudFormation sets this property value to Active.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "UserName": {
        "description": "The name of the user that the new key will belong to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-properties-iam-accesskey.html",
    "properties": [
      "Serial",
      "Status",
      "UserName"
    ]
  },
  "AWS::IAM::Group": {
    "full_properties": {
      "GroupName": {
        "description": "A name for the IAM group. For valid values, see the GroupName parameter for the CreateGroup action in the IAM API Reference. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the group name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ManagedPolicyArns": {
        "description": "One or more managed policy ARNs to attach to this group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Path": {
        "description": "The path to the group. For more information about paths, see IAM Identifiers in the IAM User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Policies": {
        "description": "The policies to associate with this group. For information about policies, see Overview of IAM Policies in the IAM User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-iam-group.html",
    "properties": [
      "GroupName",
      "ManagedPolicyArns",
      "Path",
      "Policies"
    ]
  },
  "AWS::IAM::InstanceProfile": {
    "full_properties": {
      "InstanceProfileName": {
        "description": "The name of the instance profile that you want to create. This parameter allows (per its regex pattern) a string consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: = , . @ -.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Path": {
        "description": "The path associated with this IAM instance profile. For information about IAM paths, see Friendly Names and Paths in the AWS Identity and Access Management User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Roles": {
        "description": "The name of an existing IAM role to associate with this instance profile. Currently, you can assign a maximum of one role to an instance profile.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iam-instanceprofile.html",
    "properties": [
      "Path",
      "Roles",
      "InstanceProfileName"
    ]
  },
  "AWS::IAM::ManagedPolicy": {
    "full_properties": {
      "Description": {
        "description": "A description of the IAM policy. For example, describe the permissions that are defined in the policy.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Groups": {
        "description": "The names of IAM groups to attach to this policy.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ManagedPolicyName": {
        "description": "A custom, friendly name for your IAM managed policy. For valid values, see the PolicyName parameter of the CreatePolicy action in the IAM API Reference.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Path": {
        "description": "The path for the IAM policy. By default, the path is /. For more information, see IAM Identifiers in the IAM User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PolicyDocument": {
        "description": "Policies that define the permissions for this managed policy. For more information about policy syntax, see IAM Policy Elements Reference in IAM User Guide.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Roles": {
        "description": "The names of IAM roles to attach to this policy.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Users": {
        "description": "The names of users to attach to this policy.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iam-managedpolicy.html",
    "properties": [
      "Description",
      "Groups",
      "Path",
      "PolicyDocument",
      "Roles",
      "Users",
      "ManagedPolicyName"
    ]
  },
  "AWS::IAM::Policy": {
    "full_properties": {
      "Groups": {
        "description": "The names of groups to which you want to add the policy.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "PolicyDocument": {
        "description": "A policy document that contains permissions to add to the specified users or groups.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "PolicyName": {
        "description": "The name of the policy. If you specify multiple policies for an entity, specify unique names. For example, if you specify a list of policies for an IAM role, each policy must have a unique name.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Roles": {
        "description": "The names of AWS::IAM::Roles to which this policy will be attached.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Users": {
        "description": "The names of users for whom you want to add the policy.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iam-policy.html",
    "properties": [
      "Groups",
      "PolicyDocument",
      "PolicyName",
      "Roles",
      "Users"
    ]
  },
  "AWS::IAM::Role": {
    "full_properties": {
      "AssumeRolePolicyDocument": {
        "description": "The trust policy that is associated with this role. You can associate only one assume role policy with a role. For an example of an assume role policy, see Template Examples. For more information about the elements that you can use in an IAM policy, see IAM Policy Elements Reference in the IAM User Guide.",
        "required": true,
        "type": "JSON",
        "update_causes": "none"
      },
      "ManagedPolicyArns": {
        "description": "One or more managed policy ARNs to attach to this role.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "MaxSessionDuration": {
        "description": "The maximum session duration (in seconds) for the specified role. Anyone who uses the AWS CLI or API to assume the role can specify the duration using the optional DurationSeconds API parameter or duration-seconds CLI parameter. Minimum value of 3600. Maximum value of 43200.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Path": {
        "description": "The path associated with this role. For information about IAM paths, see Friendly Names and Paths in IAM User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Policies": {
        "description": "The policies to associate with this role. For sample templates, see Template Examples.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "RoleName": {
        "description": "A name for the IAM role. For valid values, see the RoleName parameter for the CreateRole action in the IAM API Reference. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the group name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iam-role.html",
    "properties": [
      "AssumeRolePolicyDocument",
      "ManagedPolicyArns",
      "MaxSessionDuration",
      "Path",
      "Policies",
      "RoleName"
    ]
  },
  "AWS::IAM::User": {
    "full_properties": {
      "Groups": {
        "description": "A name of a group to which you want to add the user.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "LoginProfile": {
        "description": "Creates a login profile so that the user can access the AWS Management Console.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ManagedPolicyArns": {
        "description": "One or more managed policy ARNs to attach to this user.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Path": {
        "description": "The path for the user name. For more information about paths, see IAM Identifiers in the IAM User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Policies": {
        "description": "The policies to associate with this user. For information about policies, see Overview of IAM Policies in the IAM User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "UserName": {
        "description": "A name for the IAM user. For valid values, see the UserName parameter for the CreateUser action in the IAM API Reference. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the user name.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-properties-iam-user.html",
    "properties": [
      "Groups",
      "LoginProfile",
      "ManagedPolicyArns",
      "Path",
      "Policies",
      "UserName"
    ]
  },
  "AWS::IAM::UserToGroupAddition": {
    "full_properties": {
      "GroupName": {
        "description": "The name of group to add users to.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Users": {
        "description": "Required: Yes",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-iam-addusertogroup.html",
    "properties": [
      "GroupName",
      "Users"
    ]
  },
  "AWS::Inspector::AssessmentTarget": {
    "full_properties": {
      "AssessmentTargetName": {
        "description": "The name of the Amazon Inspector assessment target.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ResourceGroupArn": {
        "description": "The ARN that specifies the resource group that is associated with the assessment target.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-inspector-assessmenttarget.html",
    "properties": [
      "AssessmentTargetName",
      "ResourceGroupArn"
    ]
  },
  "AWS::Inspector::AssessmentTemplate": {
    "full_properties": {
      "AssessmentTargetArn": {
        "description": "The ARN of the assessment target that corresponds to this assessment template.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "AssessmentTemplateName": {
        "description": "The name of the assessment template.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DurationInSeconds": {
        "description": "The duration in seconds specified for this assessment tempate. The default value is 3600 seconds (one hour). The maximum value is 86400 seconds (one day).",
        "required": true,
        "type": "Number",
        "update_causes": "replacement"
      },
      "RulesPackageArns": {
        "description": "The rules packages that are specified for this assessment template.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "UserAttributesForFindings": {
        "description": "The user-defined attributes that are assigned to every generated finding from the assessment run that uses this assessment template.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-inspector-assessmenttemplate.html",
    "properties": [
      "AssessmentTargetArn",
      "DurationInSeconds",
      "AssessmentTemplateName",
      "RulesPackageArns",
      "UserAttributesForFindings"
    ]
  },
  "AWS::Inspector::ResourceGroup": {
    "full_properties": {
      "ResourceGroupTags": {
        "description": "The tags (key and value pairs) of the resource group.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-inspector-resourcegroup.html",
    "properties": [
      "ResourceGroupTags"
    ]
  },
  "AWS::IoT::Certificate": {
    "full_properties": {
      "CertificateSigningRequest": {
        "description": "The certificate signing request (CSR).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Status": {
        "description": "The status of the certificate.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iot-certificate.html",
    "properties": [
      "CertificateSigningRequest",
      "Status"
    ]
  },
  "AWS::IoT::Policy": {
    "full_properties": {
      "PolicyDocument": {
        "description": "The JSON document that describes the policy.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "PolicyName": {
        "description": "The name (the physical ID) of the AWS IoT policy.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot-policy.html",
    "properties": [
      "PolicyDocument",
      "PolicyName"
    ]
  },
  "AWS::IoT::PolicyPrincipalAttachment": {
    "full_properties": {
      "PolicyName": {
        "description": "The name of the policy.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Principal": {
        "description": "The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot-policyprincipalattachment.html",
    "properties": [
      "PolicyName",
      "Principal"
    ]
  },
  "AWS::IoT::Thing": {
    "full_properties": {
      "AttributePayload": {
        "description": "The attribute payload.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ThingName": {
        "description": "The name (the physical ID) of the AWS IoT thing.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot-thing.html",
    "properties": [
      "AttributePayload",
      "ThingName"
    ]
  },
  "AWS::IoT::ThingPrincipalAttachment": {
    "full_properties": {
      "Principal": {
        "description": "The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ThingName": {
        "description": "The name of the AWS IoT thing.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-iot-thingprincipalattachment.html",
    "properties": [
      "Principal",
      "ThingName"
    ]
  },
  "AWS::IoT::TopicRule": {
    "full_properties": {
      "RuleName": {
        "description": "The name (the physical ID) of the AWS IoT rule.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "TopicRulePayload": {
        "description": "The actions associated with the AWS IoT rule.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-iot-topicrule.html",
    "properties": [
      "RuleName",
      "TopicRulePayload"
    ]
  },
  "AWS::KMS::Alias": {
    "full_properties": {
      "AliasName": {
        "description": "The name of the alias. The name must start with alias followed by a forward slash, such as alias/. You can't specify aliases that begin with alias/AWS. These aliases are reserved.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TargetKeyId": {
        "description": "The ID of the key for which you are creating the alias. Specify the key's globally unique identifier or Amazon Resource Name (ARN). You can't specify another alias.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kms-alias.html",
    "properties": [
      "AliasName",
      "TargetKeyId"
    ]
  },
  "AWS::KMS::Key": {
    "full_properties": {
      "Description": {
        "description": "A description of the key. Use a description that helps your users decide whether the key is appropriate for a particular task.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EnableKeyRotation": {
        "description": "Indicates whether AWS KMS rotates the key. AWS CloudFormation sets this value to false by default.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Enabled": {
        "description": "Indicates whether the key is available for use. AWS CloudFormation sets this value to true by default.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "KeyPolicy": {
        "description": "An AWS KMS key policy to attach to the key. Use a policy to specify who has permission to use the key and which actions they can perform. For more information, see Key Policies in the AWS Key Management Service Developer Guide.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Specifies an arbitrary set of tags (key–value pairs) to associate with this key. Use tags to manage your resources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kms-key.html",
    "properties": [
      "Description",
      "Enabled",
      "EnableKeyRotation",
      "KeyPolicy",
      "Tags"
    ]
  },
  "AWS::Kinesis::Stream": {
    "full_properties": {
      "Name": {
        "description": "The name of the Kinesis stream. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the stream name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RetentionPeriodHours": {
        "description": "The number of hours for the data records that are stored in shards to remain accessible. The default value is 24. For more information about the stream retention period, see Changing the Data Retention Period in the Amazon Kinesis Developer Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "ShardCount": {
        "description": "The number of shards that the stream uses. For greater provisioned throughput, increase the number of shards.",
        "required": true,
        "type": "Number",
        "update_causes": "none"
      },
      "StreamEncryption": {
        "description": "Enables or updates server-side encryption using an AWS KMS key for a specified stream.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) to associate with the Kinesis stream. For information about constraints for this property, see Tag Restrictions in the Amazon Kinesis Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kinesis-stream.html",
    "properties": [
      "Name",
      "RetentionPeriodHours",
      "ShardCount",
      "StreamEncryption",
      "Tags"
    ]
  },
  "AWS::KinesisAnalytics::Application": {
    "full_properties": {
      "ApplicationCode": {
        "description": "One or more SQL statements that read input data, transform it, and generate output.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "ApplicationDescription": {
        "description": "The summary description of the application.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "ApplicationName": {
        "description": "The name of your Amazon Kinesis Data Analytics application.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Inputs": {
        "description": "Use this parameter to configure the application input.",
        "required": true,
        "type": "Array",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-kinesisanalytics-application.html",
    "properties": [
      "ApplicationName",
      "ApplicationDescription",
      "ApplicationCode",
      "Inputs"
    ]
  },
  "AWS::KinesisAnalytics::ApplicationOutput": {
    "full_properties": {
      "ApplicationName": {
        "description": "The name of the application to which you want to add the output configuration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Output": {
        "description": "An array of objects, each describing one output configuration.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kinesisanalytics-applicationoutput.html",
    "properties": [
      "ApplicationName",
      "Output"
    ]
  },
  "AWS::KinesisAnalytics::ApplicationReferenceDataSource": {
    "full_properties": {
      "ApplicationName": {
        "description": "The name of an existing application.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ReferenceDataSource": {
        "description": "The reference data source, which is an object in your Amazon Simple Storage Service (Amazon S3) bucket.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kinesisanalytics-applicationreferencedatasource.html",
    "properties": [
      "ApplicationName",
      "ReferenceDataSource"
    ]
  },
  "AWS::KinesisFirehose::DeliveryStream": {
    "full_properties": {
      "DeliveryStreamName": {
        "description": "A name for the delivery stream.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DeliveryStreamType": {
        "description": "The delivery stream type. This property can be one of the following values:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ElasticsearchDestinationConfiguration": {
        "description": "An Amazon ES destination for the delivery stream.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "ExtendedS3DestinationConfiguration": {
        "description": "An Amazon S3 destination for the delivery stream.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "KinesisStreamSourceConfiguration": {
        "description": "When a Kinesis stream is used as the source for the delivery stream, a Kinesis Data Firehose DeliveryStream KinesisStreamSourceConfiguration containing the Kinesis stream ARN and the role ARN for the source stream.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RedshiftDestinationConfiguration": {
        "description": "An Amazon Redshift destination for the delivery stream.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "S3DestinationConfiguration": {
        "description": "An Amazon S3 destination for the delivery stream.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "SplunkDestinationConfiguration": {
        "description": "The configuration of a destination in Splunk for the delivery stream.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-kinesisfirehose-deliverystream.html",
    "properties": [
      "DeliveryStreamName",
      "DeliveryStreamType",
      "ElasticsearchDestinationConfiguration",
      "ExtendedS3DestinationConfiguration",
      "KinesisStreamSourceConfiguration",
      "RedshiftDestinationConfiguration",
      "S3DestinationConfiguration",
      "SplunkDestinationConfiguration"
    ]
  },
  "AWS::Lambda::Alias": {
    "full_properties": {
      "Description": {
        "description": "Information about the alias, such as its purpose or the Lambda function that is associated with it.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "FunctionName": {
        "description": "The Lambda function that you want to associate with this alias. You can specify the function's name or its Amazon Resource Name (ARN).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FunctionVersion": {
        "description": "The version of the Lambda function that you want to associate with this alias.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the alias.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoutingConfig": {
        "description": "Use this parameter to point your alias to two different function versions, allowing you to dictate what percentage of traffic will invoke each version. For more information, see Routing Traffic to Different Function Versions Using Aliases in the AWS Lambda Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lambda-alias.html",
    "properties": [
      "Description",
      "FunctionName",
      "FunctionVersion",
      "Name",
      "RoutingConfig"
    ]
  },
  "AWS::Lambda::EventSourceMapping": {
    "full_properties": {
      "BatchSize": {
        "description": "The largest number of records that Lambda retrieves from your event source when invoking your function. Your function receives an event with all the retrieved records. For the default and valid values, see CreateEventSourceMapping in the AWS Lambda Developer Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Enabled": {
        "description": "Indicates whether Lambda begins polling the event source.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EventSourceArn": {
        "description": "The Amazon Resource Name (ARN) of the Kinesis or DynamoDB stream that is the source of events. Any record added to this stream can invoke the Lambda function. For more information, see CreateEventSourceMapping in the AWS Lambda Developer Guide.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FunctionName": {
        "description": "The name or ARN of a Lambda function to invoke when Lambda detects an event on the stream.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "StartingPosition": {
        "description": "The position in the stream where Lambda starts reading. For valid values, see CreateEventSourceMapping in the AWS Lambda Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-lambda-eventsourcemapping.html",
    "properties": [
      "BatchSize",
      "Enabled",
      "EventSourceArn",
      "FunctionName",
      "StartingPosition"
    ]
  },
  "AWS::Lambda::Function": {
    "full_properties": {
      "Code": {
        "description": "The source code of your Lambda function. You can point to a file in an Amazon Simple Storage Service (Amazon S3) bucket or specify your source code as inline text.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DeadLetterConfig": {
        "description": "Configures how Lambda handles events that it can't process. If you don't specify a Dead Letter Queue (DLQ) configuration, Lambda discards events after the maximum number of retries. For more information, see Dead Letter Queues in the AWS Lambda Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the function.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Environment": {
        "description": "Key-value pairs that Lambda caches and makes available for your Lambda functions. Use environment variables to apply configuration changes, such as test and production environment configurations, without changing your Lambda function source code.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "FunctionName": {
        "description": "A name for the function. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the function's name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Handler": {
        "description": "The name of the function (within your source code) that Lambda calls to start running your code. For more information, see the Handler property in the AWS Lambda Developer Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "KmsKeyArn": {
        "description": "The Amazon Resource Name (ARN) of an AWS Key Management Service (AWS KMS) key that Lambda uses to encrypt and decrypt environment variable values.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MemorySize": {
        "description": "The amount of memory, in MB, that is allocated to your Lambda function. Lambda uses this value to proportionally allocate the amount of CPU power. For more information, see Resource Model in the AWS Lambda Developer Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "ReservedConcurrentExecutions": {
        "description": "The maximum of concurrent executions you want reserved for the function. For more information on reserved concurrency limits, see Managing Concurrency in the AWS Lambda Developer Guide.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "Role": {
        "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) execution role that Lambda assumes when it runs your code to access AWS services.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Runtime": {
        "description": "The runtime environment for the Lambda function that you are uploading. For valid values, see the Runtime property in the AWS Lambda Developer Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this Lambda function.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Timeout": {
        "description": "The function execution time (in seconds) after which Lambda terminates the function. Because the execution time affects cost, set this value based on the function's expected execution time. By default,  Timeout is set to 3 seconds. For more information, see the FAQs.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "TracingConfig": {
        "description": "The parent object that contains your Lambda function's tracing settings. By default, the Mode property is set to PassThrough. For valid values, see the TracingConfig data type in the AWS Lambda Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VpcConfig": {
        "description": "If the Lambda function requires access to resources in a VPC, specify a VPC configuration that Lambda uses to set up an elastic network interface (ENI). The ENI enables your function to connect to other resources in your VPC, but it doesn't provide public Internet access. If your function requires Internet access (for example, to access AWS services that don't have VPC endpoints), configure a Network Address Translation (NAT) instance inside your VPC or use an Amazon Virtual Private Cloud (Amazon VPC) NAT gateway. For more information, see NAT Gateways in the Amazon VPC User Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-lambda-function.html",
    "properties": [
      "Code",
      "DeadLetterConfig",
      "Description",
      "Environment",
      "FunctionName",
      "Handler",
      "KmsKeyArn",
      "MemorySize",
      "ReservedConcurrentExecutions",
      "Role",
      "Runtime",
      "Timeout",
      "TracingConfig",
      "VpcConfig",
      "Tags"
    ]
  },
  "AWS::Lambda::Permission": {
    "full_properties": {
      "Action": {
        "description": "The Lambda actions that you want to allow in this statement. For example, you can specify lambda:CreateFunction to specify a certain action, or use a wildcard (lambda:*) to grant permission to all Lambda actions. For a list of actions, see Actions and Condition Context Keys for AWS Lambda in the IAM User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EventSourceToken": {
        "description": "A unique token that must be supplied by the principal invoking the function.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "FunctionName": {
        "description": "The name (physical ID), Amazon Resource Name (ARN), or alias ARN of the Lambda function that you want to associate with this statement. Lambda adds this statement to the function's access policy.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Principal": {
        "description": "The entity for which you are granting permission to invoke the Lambda function. This entity can be any valid AWS service principal, such as s3.amazonaws.com or sns.amazonaws.com, or, if you are granting cross-account permission, an AWS account ID. For example, you might want to allow a custom application in another AWS account to push events to Lambda by invoking your function.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceAccount": {
        "description": "The AWS account ID (without hyphens) of the source owner. For example, if you specify an S3 bucket in the SourceArn property, this value is the bucket owner's account ID. You can use this property to ensure that all source principals are owned by a specific account.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceArn": {
        "description": "The ARN of a resource that is invoking your function. When granting Amazon Simple Storage Service (Amazon S3) permission to invoke your function, specify this property with the bucket ARN as its value. This ensures that events generated only from the specified bucket, not just any bucket from any AWS account that creates a mapping to your function, can invoke the function.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-lambda-permission.html",
    "properties": [
      "Action",
      "EventSourceToken",
      "FunctionName",
      "Principal",
      "SourceAccount",
      "SourceArn"
    ]
  },
  "AWS::Lambda::Version": {
    "full_properties": {
      "CodeSha256": {
        "description": "The SHA-256 hash of the deployment package that you want to publish. This value must match the SHA-256 hash of the $LATEST version of the function. Specify this property to validate that you are publishing the correct package.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Description": {
        "description": "A description of the version you are publishing. If you don't specify a value, Lambda copies the description from the $LATEST version of the function.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "FunctionName": {
        "description": "The Lambda function for which you want to publish a version. You can specify the function's name or its Amazon Resource Name (ARN).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-lambda-version.html",
    "properties": [
      "CodeSha256",
      "Description",
      "FunctionName"
    ]
  },
  "AWS::Logs::Destination": {
    "full_properties": {
      "DestinationName": {
        "description": "The name of the CloudWatch Logs destination.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "DestinationPolicy": {
        "description": "An AWS Identity and Access Management (IAM) policy that specifies who can write to your destination.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of an IAM role that permits CloudWatch Logs to send data to the specified AWS resource (TargetArn).",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "TargetArn": {
        "description": "The ARN of the AWS resource that receives log events. Currently, you can specify only an Kinesis stream.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-logs-destination.html",
    "properties": [
      "DestinationName",
      "DestinationPolicy",
      "RoleArn",
      "TargetArn"
    ]
  },
  "AWS::Logs::LogGroup": {
    "full_properties": {
      "LogGroupName": {
        "description": "A name for the log group. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the log group. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "RetentionInDays": {
        "description": "The number of days log events are kept in CloudWatch Logs. When a log event expires, CloudWatch Logs automatically deletes it. For valid values, see PutRetentionPolicy in the Amazon CloudWatch Logs API Reference.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-logs-loggroup.html",
    "properties": [
      "LogGroupName",
      "RetentionInDays"
    ]
  },
  "AWS::Logs::LogStream": {
    "full_properties": {
      "LogGroupName": {
        "description": "The name of the log group where the log stream is created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "LogStreamName": {
        "description": "The name of the log stream to create. The name must be unique within the log group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-logs-logstream.html",
    "properties": [
      "LogGroupName",
      "LogStreamName"
    ]
  },
  "AWS::Logs::MetricFilter": {
    "full_properties": {
      "FilterPattern": {
        "description": "Describes the pattern that CloudWatch Logs follows to interpret each entry in a log. A log entry might contain fields such as timestamps, IP addresses, error codes, bytes transferred, and so on. You use the pattern to specify those fields and to specify what to look for in the log file. For example, if you're interested in error codes that begin with 1234, your filter pattern might be [timestamps, ip_addresses, error_codes = 1234*, size, ...]. For more information, see Filter and Pattern Syntax in the Amazon CloudWatch User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "LogGroupName": {
        "description": "The name of an existing log group that you want to associate with this metric filter.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MetricTransformations": {
        "description": "Describes how to transform data from a log into a CloudWatch metric.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-logs-metricfilter.html",
    "properties": [
      "FilterPattern",
      "LogGroupName",
      "MetricTransformations"
    ]
  },
  "AWS::Logs::SubscriptionFilter": {
    "full_properties": {
      "DestinationArn": {
        "description": "The Amazon Resource Name (ARN) of the Kinesis stream, Kinesis Data Firehose delivery stream, or Lambda function that you want to use as the subscription feed destination.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "FilterPattern": {
        "description": "The filtering expressions that restrict what gets delivered to the destination AWS resource. For more information about the filter pattern syntax, see Filter and Pattern Syntax in the Amazon CloudWatch User Guide.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "LogGroupName": {
        "description": "The log group to associate with the subscription filter. All log events that are uploaded to this log group are filtered and delivered to the specified AWS resource if the filter pattern matches the log events.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "An IAM role that grants CloudWatch Logs permission to put data into the specified Kinesis stream. For Lambda and CloudWatch Logs destinations, don't specify this property because CloudWatch Logs gets the necessary permissions from the destination resource.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-logs-subscriptionfilter.html",
    "properties": [
      "DestinationArn",
      "FilterPattern",
      "LogGroupName",
      "RoleArn"
    ]
  },
  "AWS::Neptune::DBCluster": {
    "full_properties": {
      "AvailabilityZones": {
        "description": "A list of Availability Zones (AZs) in which DB instances in the cluster can be created.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "BackupRetentionPeriod": {
        "description": "The number of days for which automatic backups are retained. For more information, see CreateDBCluster.",
        "required": false,
        "type": "Number",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "DBClusterIdentifier": {
        "description": "The DB cluster identifier. This parameter is stored as a lowercase string.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBClusterParameterGroupName": {
        "description": "The name of the DB cluster parameter group to associate with this DB cluster.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "DBSubnetGroupName": {
        "description": "A DB subnet group that you want to associate with this DB cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "IamAuthEnabled": {
        "description": "Enable IAM authentication and authoriation on this cluster.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The Amazon Resource Name (ARN) of the AWS Key Management Service master key that is used to encrypt the database instances in the DB cluster, such as arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef. If you enable the StorageEncrypted property but don't specify this property, the default master key is used. If you specify this property, you must set the StorageEncrypted property to true.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Port": {
        "description": "The port number on which the DB instances in the cluster can accept connections.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "PreferredBackupWindow": {
        "description": "if automated backups are enabled (see the BackupRetentionPeriod property), the daily time range in UTC during which you want to create automated backups.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PreferredMaintenanceWindow": {
        "description": "The weekly time range (in UTC) during which system maintenance can occur.",
        "required": false,
        "type": "String",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "SnapshotIdentifier": {
        "description": "The identifier for the DB cluster snapshot from which you want to restore.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StorageEncrypted": {
        "description": "Indicates whether the DB instances in the cluster are encrypted.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags that you want to attach to this DB cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcSecurityGroupIds": {
        "description": "A list of VPC security groups to associate with this DB cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-neptune-dbcluster.html",
    "properties": [
      "AvailabilityZones",
      "BackupRetentionPeriod",
      "DBClusterIdentifier",
      "DBClusterParameterGroupName",
      "DBSubnetGroupName",
      "IamAuthEnabled",
      "KmsKeyId",
      "Port",
      "PreferredBackupWindow",
      "PreferredMaintenanceWindow",
      "SnapshotIdentifier",
      "StorageEncrypted",
      "Tags",
      "VpcSecurityGroupIds"
    ]
  },
  "AWS::Neptune::DBClusterParameterGroup": {
    "full_properties": {
      "Description": {
        "description": "A friendly description for this DB cluster parameter group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Family": {
        "description": "Must be neptune1.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A friendly name for the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Parameters": {
        "description": "The parameters to set for this DB cluster parameter group.",
        "required": true,
        "type": "Unknown",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "Tags": {
        "description": "The tags that you want to attach to this parameter group.",
        "required": false,
        "type": "Array",
        "update_causes": "unavailable"
      }
    },
    "path": "aws-resource-neptune-dbclusterparametergroup.html",
    "properties": [
      "Description",
      "Parameters",
      "Family",
      "Tags",
      "Name"
    ]
  },
  "AWS::Neptune::DBInstance": {
    "full_properties": {
      "AllowMajorVersionUpgrade": {
        "description": "Required: No",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AutoMinorVersionUpgrade": {
        "description": "Indicates that minor engine upgrades are applied automatically to the DB instance during the maintenance window. The default value is true.",
        "required": false,
        "type": "Boolean",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "AvailabilityZone": {
        "description": "The name of the Availability Zone where the DB instance is located. You can't set the AvailabilityZone parameter if the MultiAZ parameter is set to true.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBClusterIdentifier": {
        "description": "The name of an existing DB cluster that this instance is associated with.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBInstanceClass": {
        "description": "The name of the compute and memory capacity classes of the DB instance.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "DBInstanceIdentifier": {
        "description": "A name for the DB instance. If you specify a name, AWS CloudFormation converts it to lowercase. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the DB instance. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DBParameterGroupName": {
        "description": "The name of an existing DB parameter group or a reference to an AWS::Neptune::DBParameterGroup resource created in the template.",
        "required": false,
        "type": "String",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "DBSnapshotIdentifier": {
        "description": "The name or Amazon Resource Name (ARN) of the DB snapshot that's used to restore the DB instance. If you're restoring from a shared manual DB snapshot, you must specify the ARN of the snapshot.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBSubnetGroupName": {
        "description": "A DB subnet group to associate with the DB instance. If you update this value, the new subnet group must be a subnet group in a new VPC.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PreferredMaintenanceWindow": {
        "description": "The weekly time range (in UTC) during which system maintenance can occur. For valid values, see the PreferredMaintenanceWindow parameter for the CreateDBInstance action in the .",
        "required": false,
        "type": "String",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "StorageEncrypted": {
        "description": "Indicates whether the DB instance is encrypted.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this DB instance.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-neptune-dbinstance.html",
    "properties": [
      "AllowMajorVersionUpgrade",
      "AutoMinorVersionUpgrade",
      "AvailabilityZone",
      "DBClusterIdentifier",
      "DBInstanceClass",
      "DBInstanceIdentifier",
      "DBParameterGroupName",
      "DBSnapshotIdentifier",
      "DBSubnetGroupName",
      "PreferredMaintenanceWindow",
      "StorageEncrypted",
      "Tags"
    ]
  },
  "AWS::Neptune::DBParameterGroup": {
    "full_properties": {
      "Description": {
        "description": "A friendly description of the DB parameter group. For example, \"My Parameter Group\".",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Family": {
        "description": "Must be neptune1.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A friendly name for the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Parameters": {
        "description": "The parameters to set for this DB parameter group.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "Tags": {
        "description": "The tags that you want to attach to the DB parameter group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-neptune-dbparametergroup.html",
    "properties": [
      "Description",
      "Parameters",
      "Family",
      "Tags",
      "Name"
    ]
  },
  "AWS::Neptune::DBSubnetGroup": {
    "full_properties": {
      "DBSubnetGroupDescription": {
        "description": "The description for the DB Subnet Group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DBSubnetGroupName": {
        "description": "The name for the DB Subnet Group. This value is stored as a lowercase string.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "The EC2 Subnet IDs for the DB Subnet Group.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags that you want to attach to the RDS database subnet group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-neptune-dbsubnetgroup.html",
    "properties": [
      "DBSubnetGroupDescription",
      "DBSubnetGroupName",
      "SubnetIds",
      "Tags"
    ]
  },
  "AWS::OpsWorks::App": {
    "full_properties": {
      "AppSource": {
        "description": "The information required to retrieve an app from a repository.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Attributes": {
        "description": "One or more user-defined key-value pairs to be added to the app attributes bag.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "DataSources": {
        "description": "A list of databases to associate with the AWS OpsWorks app.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Description": {
        "description": "A description of the app.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Domains": {
        "description": "The app virtual host settings, with multiple domains separated by commas. For example, 'www.example.com, example.com'.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EnableSsl": {
        "description": "Whether to enable SSL for this app.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Environment": {
        "description": "The environment variables to associate with the AWS OpsWorks app.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the AWS OpsWorks app.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Shortname": {
        "description": "The app short name, which is used internally by AWS OpsWorks and by Chef recipes.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SslConfiguration": {
        "description": "The SSL configuration",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "StackId": {
        "description": "The ID of the AWS OpsWorks stack to associate this app with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Type": {
        "description": "The app type. Each supported type is associated with a particular layer. For more information, see CreateApp in the AWS OpsWorks Stacks API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-opsworks-app.html",
    "properties": [
      "AppSource",
      "Attributes",
      "Description",
      "DataSources",
      "Domains",
      "EnableSsl",
      "Environment",
      "Name",
      "Shortname",
      "SslConfiguration",
      "StackId",
      "Type"
    ]
  },
  "AWS::OpsWorks::ElasticLoadBalancerAttachment": {
    "full_properties": {
      "ElasticLoadBalancerName": {
        "description": "Elastic Load Balancing load balancer name.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "LayerId": {
        "description": "The AWS OpsWorks layer ID that the Elastic Load Balancing load balancer will be attached to.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-opsworks-elbattachment.html",
    "properties": [
      "ElasticLoadBalancerName",
      "LayerId"
    ]
  },
  "AWS::OpsWorks::Instance": {
    "full_properties": {
      "AgentVersion": {
        "description": "The version of the  AWS OpsWorks agent that AWS OpsWorks installs on each instance. AWS OpsWorks sends commands to the agent to performs tasks on your instances, such as starting Chef runs. For valid values, see the AgentVersion parameter for the CreateInstance action in the AWS OpsWorks Stacks API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AmiId": {
        "description": "The ID of the custom Amazon Machine Image (AMI) to be used to create the instance. For more information about custom AMIs, see Using Custom AMIs in the AWS OpsWorks User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Architecture": {
        "description": "The instance architecture.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "AutoScalingType": {
        "description": "For scaling instances, the type of scaling. If you specify load-based scaling, do not specify a time-based scaling configuration. For valid values, see CreateInstance in the AWS OpsWorks Stacks API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "AvailabilityZone": {
        "description": "The instance Availability Zone.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "BlockDeviceMappings": {
        "description": "A list of block devices that are mapped to the AWS OpsWorks instance. For more information, see the BlockDeviceMappings parameter for the CreateInstance action in the AWS OpsWorks Stacks API Reference.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "EbsOptimized": {
        "description": "Whether the instance is optimized for Amazon Elastic Block Store (Amazon EBS) I/O. If you specify an Amazon EBS-optimized instance type, AWS OpsWorks enables EBS optimization by default. For more information, see Amazon EBS–Optimized Instances in the Amazon EC2 User Guide for Linux Instances.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "ElasticIps": {
        "description": "A list of Elastic IP addresses to associate with the instance.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Hostname": {
        "description": "The name of the instance host.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstallUpdatesOnBoot": {
        "description": "Whether to install operating system and package updates when the instance boots.",
        "required": false,
        "type": "Boolean",
        "update_causes": "interrupt"
      },
      "InstanceType": {
        "description": "The instance type, which must be supported by AWS OpsWorks. For more information, see CreateInstance in the AWS OpsWorks Stacks API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "LayerIds": {
        "description": "The IDs of the AWS OpsWorks layers to associate with this instance.",
        "required": true,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "Os": {
        "description": "The instance operating system. For more information, see CreateInstance in the AWS OpsWorks Stacks API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RootDeviceType": {
        "description": "The root device type of the instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SshKeyName": {
        "description": "The SSH key name of the instance.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "StackId": {
        "description": "The ID of the AWS OpsWorks stack that this instance will be associated with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetId": {
        "description": "The ID of the instance's subnet. If the stack is running in a VPC, you can use this parameter to override the stack's default subnet ID value and direct AWS OpsWorks to launch the instance in a different subnet.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tenancy": {
        "description": "The tenancy of the instance. For more information, see the Tenancy parameter for the CreateInstance action in the AWS OpsWorks Stacks API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "TimeBasedAutoScaling": {
        "description": "The time-based scaling configuration for the instance.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "VirtualizationType": {
        "description": "The instance's virtualization type, paravirtual or hvm.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Volumes": {
        "description": "A list of AWS OpsWorks volume IDs to associate with the instance. For more information, see AWS::OpsWorks::Volume.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-opsworks-instance.html",
    "properties": [
      "AgentVersion",
      "AmiId",
      "Architecture",
      "AutoScalingType",
      "AvailabilityZone",
      "BlockDeviceMappings",
      "EbsOptimized",
      "ElasticIps",
      "Hostname",
      "InstallUpdatesOnBoot",
      "InstanceType",
      "LayerIds",
      "Os",
      "RootDeviceType",
      "SshKeyName",
      "StackId",
      "SubnetId",
      "Tenancy",
      "TimeBasedAutoScaling",
      "VirtualizationType",
      "Volumes"
    ]
  },
  "AWS::OpsWorks::Layer": {
    "full_properties": {
      "Attributes": {
        "description": "One or more user-defined key-value pairs to be added to the stack attributes bag.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "AutoAssignElasticIps": {
        "description": "Whether to automatically assign an Elastic IP address to Amazon EC2 instances in this layer.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AutoAssignPublicIps": {
        "description": "For AWS OpsWorks stacks that are running in a VPC, whether to automatically assign a public IP address to Amazon EC2 instances in this layer.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "CustomInstanceProfileArn": {
        "description": "The Amazon Resource Name (ARN) of an IAM instance profile that is to be used for the Amazon EC2 instances in this layer.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "CustomJson": {
        "description": "A custom stack configuration and deployment attributes that AWS OpsWorks installs on the layer's instances. For more information, see the CustomJson parameter for the CreateLayer action in the AWS OpsWorks Stacks API Reference.",
        "required": false,
        "type": "Unknown",
        "update_causes": "unknown"
      },
      "CustomRecipes": {
        "description": "Custom event recipes for this layer.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CustomSecurityGroupIds": {
        "description": "Custom security group IDs for this layer.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "EnableAutoHealing": {
        "description": "Whether to automatically heal Amazon EC2 instances that have become disconnected or timed out.",
        "required": true,
        "type": "Boolean",
        "update_causes": "none"
      },
      "InstallUpdatesOnBoot": {
        "description": "Whether to install operating system and package updates when the instance boots.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "LifecycleEventConfiguration": {
        "description": "The lifecycle events for the AWS OpsWorks layer.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LoadBasedAutoScaling": {
        "description": "The load-based scaling configuration for the AWS OpsWorks layer.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The AWS OpsWorks layer name.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Packages": {
        "description": "The packages for this layer.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Shortname": {
        "description": "The layer short name, which is used internally by AWS OpsWorks and by Chef recipes. The short name is also used as the name for the directory where your app files are installed.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "StackId": {
        "description": "The ID of the AWS OpsWorks stack that this layer will be associated with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Specifies an arbitrary set of tags (key–value pairs) to associate with this AWS OpsWorks layer. Use tags to manage your resources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Type": {
        "description": "The layer type. A stack cannot have more than one layer of the same type, except for the custom type. You can have any number of custom types. For more information, see CreateLayer in the AWS OpsWorks Stacks API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "VolumeConfigurations": {
        "description": "Describes the Amazon EBS volumes for this layer.",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-opsworks-layer.html",
    "properties": [
      "Attributes",
      "AutoAssignElasticIps",
      "AutoAssignPublicIps",
      "CustomInstanceProfileArn",
      "CustomJson",
      "CustomRecipes",
      "CustomSecurityGroupIds",
      "EnableAutoHealing",
      "InstallUpdatesOnBoot",
      "LifecycleEventConfiguration",
      "LoadBasedAutoScaling",
      "Name",
      "Packages",
      "Shortname",
      "StackId",
      "Tags",
      "Type",
      "VolumeConfigurations"
    ]
  },
  "AWS::OpsWorks::Stack": {
    "full_properties": {
      "AgentVersion": {
        "description": "The AWS OpsWorks agent version that you want to use. The agent communicates with the service and handles tasks such as initiating Chef runs in response to lifecycle events. For valid values, see the AgentVersion parameter for the CreateStack action in the AWS OpsWorks Stacks API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Attributes": {
        "description": "One or more user-defined key-value pairs to be added to the stack attributes bag.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ChefConfiguration": {
        "description": "Describes the Chef configuration. For more information, see the CreateStack ChefConfiguration parameter in the AWS OpsWorks Stacks API Reference.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CloneAppIds": {
        "description": "If you're cloning an AWS OpsWorks stack, a list of AWS OpsWorks application stack IDs from the source stack to include in the cloned stack.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "ClonePermissions": {
        "description": "If you're cloning an AWS OpsWorks stack, indicates whether to clone the source stack's permissions.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "ConfigurationManager": {
        "description": "Describes the configuration manager. When you create a stack, you use the configuration manager to specify the Chef version. For supported Chef versions, see the CreateStack ConfigurationManager parameter in the AWS OpsWorks Stacks API Reference.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CustomCookbooksSource": {
        "description": "Contains the information required to retrieve a cookbook from a repository.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "CustomJson": {
        "description": "A user-defined custom JSON object. The custom JSON is used to override the corresponding default stack configuration JSON values. For more information, see CreateStack in the AWS OpsWorks Stacks API Reference.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DefaultAvailabilityZone": {
        "description": "The stack's default Availability Zone, which must be in the specified region.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultInstanceProfileArn": {
        "description": "The Amazon Resource Name (ARN) of an IAM instance profile that is the default profile for all of the stack's Amazon EC2 instances.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultOs": {
        "description": "The stack's default operating system. For more information, see CreateStack in the AWS OpsWorks Stacks API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultRootDeviceType": {
        "description": "The default root device type. This value is used by default for all instances in the stack, but you can override it when you create an instance. For more information, see CreateStack in the AWS OpsWorks Stacks API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultSshKeyName": {
        "description": "A default SSH key for the stack instances. You can override this value when you create or update an instance.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DefaultSubnetId": {
        "description": "The stack's default subnet ID. All instances are launched into this subnet unless you specify another subnet ID when you create the instance.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EcsClusterArn": {
        "description": "The Amazon Resource Name (ARN) of the Amazon Elastic Container Service (Amazon ECS) cluster to register with the AWS OpsWorks stack.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ElasticIps": {
        "description": "A list of Elastic IP addresses to register with the AWS OpsWorks stack.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "HostnameTheme": {
        "description": "The stack's host name theme, with spaces replaced by underscores. The theme is used to generate host names for the stack's instances. For more information, see CreateStack in the AWS OpsWorks Stacks API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the AWS OpsWorks stack.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RdsDbInstances": {
        "description": "The Amazon Relational Database Service (Amazon RDS) DB instance to register with the AWS OpsWorks stack.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ServiceRoleArn": {
        "description": "The AWS Identity and Access Management (IAM) role that AWS OpsWorks uses to work with AWS resources on your behalf. You must specify an Amazon Resource Name (ARN) for an existing IAM role.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceStackId": {
        "description": "If you're cloning an AWS OpsWorks stack, the stack ID of the source AWS OpsWorks stack to clone.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Specifies an arbitrary set of tags (key–value pairs) to associate with this AWS OpsWorks stack. Use tags to manage your resources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "UseCustomCookbooks": {
        "description": "Whether the stack uses custom cookbooks.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "UseOpsworksSecurityGroups": {
        "description": "Whether to associate the AWS OpsWorks built-in security groups with the stack's layers.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "VpcId": {
        "description": "The ID of the VPC that the stack is to be launched into, which must be in the specified region. All instances are launched into this VPC. If you specify this property, you must specify the DefaultSubnetId property.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-opsworks-stack.html",
    "properties": [
      "AgentVersion",
      "Attributes",
      "ChefConfiguration",
      "CloneAppIds",
      "ClonePermissions",
      "ConfigurationManager",
      "CustomCookbooksSource",
      "CustomJson",
      "DefaultAvailabilityZone",
      "DefaultInstanceProfileArn",
      "DefaultOs",
      "DefaultRootDeviceType",
      "DefaultSshKeyName",
      "DefaultSubnetId",
      "EcsClusterArn",
      "ElasticIps",
      "HostnameTheme",
      "Name",
      "RdsDbInstances",
      "ServiceRoleArn",
      "SourceStackId",
      "Tags",
      "UseCustomCookbooks",
      "UseOpsworksSecurityGroups",
      "VpcId"
    ]
  },
  "AWS::OpsWorks::UserProfile": {
    "full_properties": {
      "AllowSelfManagement": {
        "description": "Indicates whether users can use the AWS OpsWorks My Settings page to specify their own SSH public key. For more information, see Setting an IAM User's Public SSH Key in the AWS OpsWorks User Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "IamUserArn": {
        "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) user to associate with this configuration.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SshPublicKey": {
        "description": "The public SSH key that is associated with the IAM user. To access instances, the IAM user must have or be given the corresponding private key.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SshUsername": {
        "description": "The user's SSH user name.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-opsworks-userprofile.html",
    "properties": [
      "AllowSelfManagement",
      "IamUserArn",
      "SshPublicKey",
      "SshUsername"
    ]
  },
  "AWS::OpsWorks::Volume": {
    "full_properties": {
      "Ec2VolumeId": {
        "description": "The ID of the Amazon EBS volume to register with the AWS OpsWorks stack.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MountPoint": {
        "description": "The mount point for the Amazon EBS volume, such as /mnt/disk1.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "A name for the Amazon EBS volume.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "StackId": {
        "description": "The ID of the AWS OpsWorks stack that AWS OpsWorks registers the volume to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-opsworks-volume.html",
    "properties": [
      "Ec2VolumeId",
      "MountPoint",
      "Name",
      "StackId"
    ]
  },
  "AWS::RDS::DBCluster": {
    "full_properties": {
      "AvailabilityZones": {
        "description": "A list of Availability Zones (AZs) in which DB instances in the cluster can be created.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "BackupRetentionPeriod": {
        "description": "The number of days for which automatic backups are retained. For more information, see CreateDBCluster in the Amazon Relational Database Service API Reference.",
        "required": false,
        "type": "Number",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "DBClusterIdentifier": {
        "description": "The DB cluster identifier. This parameter is stored as a lowercase string.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBClusterParameterGroupName": {
        "description": "The name of the DB cluster parameter group to associate with this DB cluster. For the default value, see the DBClusterParameterGroupName parameter of the CreateDBCluster action in the Amazon Relational Database Service API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "DBSubnetGroupName": {
        "description": "A DB subnet group that you want to associate with this DB cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DatabaseName": {
        "description": "The name of your database. If you don't provide a name, Amazon Relational Database Service (Amazon RDS) won't create a database in this DB cluster. For naming constraints, see Naming Constraints in Amazon RDS in the Amazon Relational Database Service User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Engine": {
        "description": "The name of the database engine that you want to use for this DB cluster.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineVersion": {
        "description": "The version number of the database engine that you want to use.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "KmsKeyId": {
        "description": "The Amazon Resource Name (ARN) of the AWS Key Management Service master key that is used to encrypt the database instances in the DB cluster, such as arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef. If you enable the StorageEncrypted property but don't specify this property, the default master key is used. If you specify this property, you must set the StorageEncrypted property to true.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MasterUserPassword": {
        "description": "The password for the master database user.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MasterUsername": {
        "description": "The master user name for the DB instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Port": {
        "description": "The port number on which the DB instances in the cluster can accept connections.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "PreferredBackupWindow": {
        "description": "if automated backups are enabled (see the BackupRetentionPeriod property), the daily time range in UTC during which you want to create automated backups.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PreferredMaintenanceWindow": {
        "description": "The weekly time range (in UTC) during which system maintenance can occur.",
        "required": false,
        "type": "String",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "ReplicationSourceIdentifier": {
        "description": "The Amazon Resource Name (ARN) of the source Amazon RDS MySQL DB instance or DB cluster,  if this DB cluster is created as a Read Replica.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SnapshotIdentifier": {
        "description": "The identifier for the DB cluster snapshot from which you want to restore.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StorageEncrypted": {
        "description": "Indicates whether the DB instances in the cluster are encrypted.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags that you want to attach to this DB cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "VpcSecurityGroupIds": {
        "description": "A list of VPC security groups to associate with this DB cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rds-dbcluster.html",
    "properties": [
      "AvailabilityZones",
      "BackupRetentionPeriod",
      "DatabaseName",
      "DBClusterIdentifier",
      "DBClusterParameterGroupName",
      "DBSubnetGroupName",
      "Engine",
      "EngineVersion",
      "KmsKeyId",
      "MasterUsername",
      "MasterUserPassword",
      "Port",
      "PreferredBackupWindow",
      "PreferredMaintenanceWindow",
      "ReplicationSourceIdentifier",
      "SnapshotIdentifier",
      "StorageEncrypted",
      "Tags",
      "VpcSecurityGroupIds"
    ]
  },
  "AWS::RDS::DBClusterParameterGroup": {
    "full_properties": {
      "Description": {
        "description": "A friendly description for this DB cluster parameter group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Family": {
        "description": "The database family of this DB cluster parameter group, such as aurora5.6.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Parameters": {
        "description": "The parameters to set for this DB cluster parameter group. For a list of parameter keys, see Appendix: DB Cluster and DB Instance Parameters in the Amazon Relational Database Service User Guide.",
        "required": true,
        "type": "Unknown",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "Tags": {
        "description": "The tags that you want to attach to this parameter group.",
        "required": false,
        "type": "Array",
        "update_causes": "unavailable"
      }
    },
    "path": "aws-resource-rds-dbclusterparametergroup.html",
    "properties": [
      "Description",
      "Family",
      "Parameters",
      "Tags"
    ]
  },
  "AWS::RDS::DBInstance": {
    "full_properties": {
      "AllocatedStorage": {
        "description": "The allocated storage size, specified in gigabytes (GB).",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AllowMajorVersionUpgrade": {
        "description": "If you update the EngineVersion property to a version that's different from the DB instance's current major version, set this property to true. For more information, see ModifyDBInstance in the Amazon Relational Database Service API Reference.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AutoMinorVersionUpgrade": {
        "description": "Indicates that minor engine upgrades are applied automatically to the DB instance during the maintenance window. The default value is true.",
        "required": false,
        "type": "Boolean",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "AvailabilityZone": {
        "description": "The name of the Availability Zone where the DB instance is located. You can't set the AvailabilityZone parameter if the MultiAZ parameter is set to true.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "BackupRetentionPeriod": {
        "description": "The number of days during which automatic DB snapshots are retained.",
        "required": false,
        "type": "String",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "CharacterSetName": {
        "description": "For supported engines, specifies the character set to associate with the DB instance. For more information, see Appendix: Oracle Character Sets Supported in Amazon RDS in the Amazon Relational Database Service User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "CopyTagsToSnapshot": {
        "description": "Indicates whether to copy all of the user-defined tags from the DB instance to snapshots of the DB instance. By default, Amazon RDS doesn't copy tags to snapshots. Amazon RDS doesn't copy tags with the aws:: prefix unless it's the DB instance's final snapshot (the snapshot when you delete the DB instance).",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "DBClusterIdentifier": {
        "description": "The name of an existing DB cluster that this instance is associated with. If you specify this property, specify aurora for the Engine property and don't specify any of the following properties: AllocatedStorage, BackupRetentionPeriod, CharacterSetName, DBName, DBSecurityGroups, MasterUsername, MasterUserPassword, OptionGroupName, PreferredBackupWindow, PreferredMaintenanceWindow, Port, SourceDBInstanceIdentifier, StorageType, or VPCSecurityGroups.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DBInstanceClass": {
        "description": "The name of the compute and memory capacity classes of the DB instance.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "DBInstanceIdentifier": {
        "description": "A name for the DB instance. If you specify a name, AWS CloudFormation converts it to lowercase. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the DB instance. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DBName": {
        "description": "The name of the DB instance that was provided at the time of creation, if one was specified. This same name is returned for the life of the DB instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBParameterGroupName": {
        "description": "The name of an existing DB parameter group or a reference to an AWS::RDS::DBParameterGroup resource created in the template.",
        "required": false,
        "type": "String",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "DBSecurityGroups": {
        "description": "A list of the DB security groups to assign to the DB instance. The list can include both the name of existing DB security groups or references to AWS::RDS::DBSecurityGroup resources created in the template.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "DBSnapshotIdentifier": {
        "description": "The name or Amazon Resource Name (ARN) of the DB snapshot that's used to restore the DB instance. If you're restoring from a shared manual DB snapshot, you must specify the ARN of the snapshot.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "DBSubnetGroupName": {
        "description": "A DB subnet group to associate with the DB instance. If you update this value, the new subnet group must be a subnet group in a new VPC.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Domain": {
        "description": "For an Amazon RDS DB instance that's running Microsoft SQL Server, the Active Directory directory ID to create the instance in. Amazon RDS uses Windows Authentication to authenticate users that connect to the DB instance. For more information, see Using Windows Authentication with an Amazon RDS DB Instance Running Microsoft SQL Server in the Amazon Relational Database Service User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DomainIAMRoleName": {
        "description": "The name of an IAM role that Amazon RDS uses when calling the AWS Directory Service APIs.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Engine": {
        "description": "The database engine that the DB instance uses. This property is optional when you specify the DBSnapshotIdentifier property to create DB instances.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EngineVersion": {
        "description": "The version number of the database engine that the DB instance uses.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Iops": {
        "description": "The number of I/O operations per second (IOPS) that the database provisions. The value must be equal to or greater than 1000.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The ARN of the AWS Key Management Service (AWS KMS) master key that's used to encrypt the DB instance, such as arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef. If you enable the StorageEncrypted property but don't specify this property, AWS CloudFormation uses the default master key. If you specify this property, you must set the StorageEncrypted property to true.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LicenseModel": {
        "description": "The license model of the DB instance.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MasterUserPassword": {
        "description": "The master password for the DB instance.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MasterUsername": {
        "description": "The master user name for the DB instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "MonitoringInterval": {
        "description": "The interval, in seconds, between points when Amazon RDS collects enhanced monitoring metrics for the DB instance. To disable metrics collection, specify 0.",
        "required": false,
        "type": "Number",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "MonitoringRoleArn": {
        "description": "The ARN of the AWS Identity and Access Management (IAM) role that permits Amazon RDS to send enhanced monitoring metrics to Amazon CloudWatch, for example, arn:aws:iam::123456789012:role/emaccess. For information on creating a monitoring role, see To create an IAM role for Amazon RDS Enhanced Monitoring in the Amazon Relational Database Service User Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MultiAZ": {
        "description": "Specifies if the database instance is a multiple Availability Zone deployment. You can't set the AvailabilityZone parameter if the MultiAZ parameter is set to true. Amazon Aurora storage is replicated across all the Availability Zones and doesn't require the MultiAZ option to be set.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "OptionGroupName": {
        "description": "The option group that this DB instance is associated with.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Port": {
        "description": "The port for the instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PreferredBackupWindow": {
        "description": "The daily time range during which automated backups are performed if automated backups are enabled, as determined by the BackupRetentionPeriod property. For valid values, see the PreferredBackupWindow parameter for the CreateDBInstance action in the Amazon Relational Database Service API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PreferredMaintenanceWindow": {
        "description": "The weekly time range (in UTC) during which system maintenance can occur. For valid values, see the PreferredMaintenanceWindow parameter for the CreateDBInstance action in the Amazon Relational Database Service API Reference.",
        "required": false,
        "type": "String",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "PubliclyAccessible": {
        "description": "Indicates whether the DB instance is an internet-facing instance. If you specify true, AWS CloudFormation creates an instance with a publicly resolvable DNS name, which resolves to a public IP address. If you specify false, AWS CloudFormation creates an internal instance with a DNS name that resolves to a private IP address.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "SourceDBInstanceIdentifier": {
        "description": "If you want to create a read replica DB instance, specify the ID of the source DB instance. Each DB instance can have a limited number of read replicas. For more information, see Working with Read Replicas in the Amazon Relational Database Service Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceRegion": {
        "description": "The ID of the region that contains the source DB instance for the read replica.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "StorageEncrypted": {
        "description": "Indicates whether the DB instance is encrypted.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "StorageType": {
        "description": "The storage type associated with this DB instance.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this DB instance.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Timezone": {
        "description": "The time zone of the DB instance, which you can specify to match the time zone of your applications. To see which engines support time zones, see the Timezone parameter for the CreateDBInstance action in the Amazon Relational Database Service API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "VPCSecurityGroups": {
        "description": "A list of the VPC security group IDs to assign to the DB instance. The list can include both the physical IDs of existing VPC security groups and references to AWS::EC2::SecurityGroup resources created in the template.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-rds-database-instance.html",
    "properties": [
      "AllocatedStorage",
      "AllowMajorVersionUpgrade",
      "AutoMinorVersionUpgrade",
      "AvailabilityZone",
      "BackupRetentionPeriod",
      "CharacterSetName",
      "CopyTagsToSnapshot",
      "DBClusterIdentifier",
      "DBInstanceClass",
      "DBInstanceIdentifier",
      "DBName",
      "DBParameterGroupName",
      "DBSecurityGroups",
      "DBSnapshotIdentifier",
      "DBSubnetGroupName",
      "Domain",
      "DomainIAMRoleName",
      "Engine",
      "EngineVersion",
      "Iops",
      "KmsKeyId",
      "LicenseModel",
      "MasterUsername",
      "MasterUserPassword",
      "MonitoringInterval",
      "MonitoringRoleArn",
      "MultiAZ",
      "OptionGroupName",
      "Port",
      "PreferredBackupWindow",
      "PreferredMaintenanceWindow",
      "PubliclyAccessible",
      "SourceDBInstanceIdentifier",
      "SourceRegion",
      "StorageEncrypted",
      "StorageType",
      "Tags",
      "Timezone",
      "VPCSecurityGroups"
    ]
  },
  "AWS::RDS::DBParameterGroup": {
    "full_properties": {
      "Description": {
        "description": "A friendly description of the RDS parameter group. For example, \"My Parameter Group\".",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Family": {
        "description": "The database family of this RDS parameter group. For example, \"MySQL5.1\".",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "Parameters": {
        "description": "The parameters to set for this RDS parameter group.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "none",
          "interrupt"
        ]
      },
      "Tags": {
        "description": "The tags that you want to attach to the RDS parameter group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-rds-dbparametergroup.html",
    "properties": [
      "Description",
      "Family",
      "Parameters",
      "Tags"
    ]
  },
  "AWS::RDS::DBSecurityGroup": {
    "full_properties": {
      "DBSecurityGroupIngress": {
        "description": "Network ingress authorization for an Amazon EC2 security group or an IP address range.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "EC2VpcId": {
        "description": "The Id of the VPC. Indicates which VPC this DB Security Group should belong to.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "GroupDescription": {
        "description": "Description of the security group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "The tags that you want to attach to the Amazon RDS DB security group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-rds-security-group.html",
    "properties": [
      "EC2VpcId",
      "DBSecurityGroupIngress",
      "GroupDescription",
      "Tags"
    ]
  },
  "AWS::RDS::DBSecurityGroupIngress": {
    "full_properties": {
      "CIDRIP": {
        "description": "The IP range to authorize.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DBSecurityGroupName": {
        "description": "The name (ARN) of the AWS::RDS::DBSecurityGroup to which this ingress will be added.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "EC2SecurityGroupId": {
        "description": "The ID of the VPC or EC2 security group to authorize.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EC2SecurityGroupName": {
        "description": "The name of the EC2 security group to authorize.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "EC2SecurityGroupOwnerId": {
        "description": "The AWS Account Number of the owner of the EC2 security group specified in the EC2SecurityGroupName parameter. The AWS Access Key ID is not an acceptable value.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rds-security-group-ingress.html",
    "properties": [
      "CIDRIP",
      "DBSecurityGroupName",
      "EC2SecurityGroupId",
      "EC2SecurityGroupName",
      "EC2SecurityGroupOwnerId"
    ]
  },
  "AWS::RDS::DBSubnetGroup": {
    "full_properties": {
      "DBSubnetGroupDescription": {
        "description": "The description for the DB Subnet Group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "DBSubnetGroupName": {
        "description": "The name for the DB Subnet Group. This value is stored as a lowercase string.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "SubnetIds": {
        "description": "The EC2 Subnet IDs for the DB Subnet Group.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "The tags that you want to attach to the RDS database subnet group.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rds-dbsubnet-group.html",
    "properties": [
      "DBSubnetGroupDescription",
      "DBSubnetGroupName",
      "SubnetIds",
      "Tags"
    ]
  },
  "AWS::RDS::EventSubscription": {
    "full_properties": {
      "Enabled": {
        "description": "Indicates whether to activate the subscription. If you don't specify this property, AWS CloudFormation activates the subscription.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "EventCategories": {
        "description": "A list of event categories that you want to subscribe to for a given source type. If you don't specify this property, you are notified about all event categories. For more information, see  Using Amazon RDS Event Notification in the Amazon Relational Database Service User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SnsTopicArn": {
        "description": "The Amazon Resource Name (ARN) of an Amazon SNS topic that you want to send event notifications to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourceIds": {
        "description": "A list of identifiers for which Amazon RDS provides notification events.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SourceType": {
        "description": "The type of source for which Amazon RDS provides notification events. For example, if you want to be notified of events generated by a database instance, set this parameter to db-instance. If you don't specify a value, notifications are provided for all source types. For valid values, see the SourceType parameter for the CreateEventSubscription action in the Amazon Relational Database Service API Reference.",
        "required": false,
        "type": "Unknown",
        "update_causes": [
          "replacement",
          "interrupt"
        ]
      }
    },
    "path": "aws-resource-rds-eventsubscription.html",
    "properties": [
      "Enabled",
      "EventCategories",
      "SnsTopicArn",
      "SourceIds",
      "SourceType"
    ]
  },
  "AWS::RDS::OptionGroup": {
    "full_properties": {
      "EngineName": {
        "description": "The name of the database engine that this option group is associated with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "MajorEngineVersion": {
        "description": "The major version number of the database engine that this option group is associated with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "OptionConfigurations": {
        "description": "The configurations for this option group.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "OptionGroupDescription": {
        "description": "A description of the option group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key–value pairs) for this option group.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-rds-optiongroup.html",
    "properties": [
      "EngineName",
      "MajorEngineVersion",
      "OptionGroupDescription",
      "OptionConfigurations",
      "Tags"
    ]
  },
  "AWS::Redshift::Cluster": {
    "full_properties": {
      "AllowVersionUpgrade": {
        "description": "When a new version of  Amazon Redshift is released, tells whether upgrades can be applied to the engine that is running on the cluster. The upgrades are applied during the maintenance window. The default value is true.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "AutomatedSnapshotRetentionPeriod": {
        "description": "The number of days that automated snapshots are retained. The default value is 1. To disable automated snapshots, set the value to 0.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "AvailabilityZone": {
        "description": "The Amazon Elastic Compute Cloud (Amazon EC2) Availability Zone in which you want to provision your Amazon Redshift cluster. For example, if you have several EC2 instances running in a specific Availability Zone, you might want the cluster to be provisioned in the same zone to decrease network latency.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClusterIdentifier": {
        "description": "The unique identifier of the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClusterParameterGroupName": {
        "description": "The name of the parameter group that you want to associate with this cluster.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "ClusterSecurityGroups": {
        "description": "A list of security groups that you want to associate with this cluster. Applies to EC2-Classic.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "ClusterSubnetGroupName": {
        "description": "The name of a cluster subnet group that you want to associate with this cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClusterType": {
        "description": "The type of cluster. Specify single-node or multi-node (default).",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "ClusterVersion": {
        "description": "The version of the Amazon Redshift engine that you want to deploy on the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DBName": {
        "description": "The name of the first database that will be created when the cluster is created.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ElasticIp": {
        "description": "The Elastic IP (EIP) address for the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Encrypted": {
        "description": "Indicates whether the data in the cluster is encrypted at rest. The default value is false.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "HsmClientCertificateIdentifier": {
        "description": "Specifies the name of the hardware security module (HSM) client certificate that the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HsmConfigurationIdentifier": {
        "description": "The name of the HSM configuration that contains the information that the Amazon Redshift cluster can use to retrieve and store keys in an HSM.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "IamRoles": {
        "description": "A list of AWS Identity and Access Management (IAM) roles that the cluster can use to access other AWS services. Supply the IAM roles by their Amazon Resource Name (ARN). You can provide a maximum of 10 IAM roles in a single request. A cluster can have a maximum of 10 IAM roles associated with it at a time.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "KmsKeyId": {
        "description": "The ID of the AWS Key Management Service (AWS KMS) key that you want to use to encrypt data in the cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LoggingProperties": {
        "description": "Configures Amazon Redshift to create audit log files, containing logging information such as queries and connection attempts, for this cluster.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MasterUserPassword": {
        "description": "The password associated with the master user account for this cluster.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "MasterUsername": {
        "description": "The user name that is associated with the master user account for this cluster.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "NodeType": {
        "description": "The node type that is provisioned for this cluster.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "NumberOfNodes": {
        "description": "The number of compute nodes in the cluster. If you specify multi-node for the ClusterType parameter, you must specify a number greater than 1.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "OwnerAccount": {
        "description": "When you restore from a snapshot from another AWS account, the 12-digit AWS account ID that contains that snapshot.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Port": {
        "description": "The port number on which the cluster accepts incoming connections. The default value is 5439.",
        "required": false,
        "type": "Number",
        "update_causes": "replacement"
      },
      "PreferredMaintenanceWindow": {
        "description": "The weekly time range (in UTC) during which automated cluster maintenance can occur. The format of the time range is ddd:hh24:mi-ddd:hh24:mi.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PubliclyAccessible": {
        "description": "Indicates whether the cluster can be accessed from a public network.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "SnapshotClusterIdentifier": {
        "description": "The name of the cluster that the source snapshot was created from. For more information about restoring from a snapshot, see the RestoreFromClusterSnapshot action in the Amazon Redshift API Reference.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "SnapshotIdentifier": {
        "description": "The name of the snapshot from which to create a new cluster.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Specifies an arbitrary set of tags (key–value pairs) to associate with this cluster. Use tags to manage your resources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VpcSecurityGroupIds": {
        "description": "A list of VPC security groups that are associated with this cluster.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-redshift-cluster.html",
    "properties": [
      "AllowVersionUpgrade",
      "AutomatedSnapshotRetentionPeriod",
      "AvailabilityZone",
      "ClusterIdentifier",
      "ClusterParameterGroupName",
      "ClusterSecurityGroups",
      "ClusterSubnetGroupName",
      "ClusterType",
      "ClusterVersion",
      "DBName",
      "ElasticIp",
      "Encrypted",
      "HsmClientCertificateIdentifier",
      "HsmConfigurationIdentifier",
      "IamRoles",
      "KmsKeyId",
      "LoggingProperties",
      "MasterUsername",
      "MasterUserPassword",
      "NodeType",
      "NumberOfNodes",
      "OwnerAccount",
      "Port",
      "PreferredMaintenanceWindow",
      "PubliclyAccessible",
      "SnapshotClusterIdentifier",
      "SnapshotIdentifier",
      "Tags",
      "VpcSecurityGroupIds"
    ]
  },
  "AWS::Redshift::ClusterParameterGroup": {
    "full_properties": {
      "Description": {
        "description": "A description of the parameter group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ParameterGroupFamily": {
        "description": "The Amazon Redshift engine version that applies to this cluster parameter group. The cluster engine version determines the set of parameters that you can specify in the Parameters property.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Parameters": {
        "description": "A list of parameter names and values that are allowed by the Amazon Redshift engine version that you specified in the ParameterGroupFamily property. For more information, see Amazon Redshift Parameter Groups in the Amazon Redshift Cluster Management Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Specifies an arbitrary set of tags (key–value pairs) to associate with this parameter group. Use tags to manage your resources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-redshift-clusterparametergroup.html",
    "properties": [
      "Description",
      "ParameterGroupFamily",
      "Parameters",
      "Tags"
    ]
  },
  "AWS::Redshift::ClusterSecurityGroup": {
    "full_properties": {
      "Description": {
        "description": "A description of the security group.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "Specifies an arbitrary set of tags (key–value pairs) to associate with this security group. Use tags to manage your resources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-redshift-clustersecuritygroup.html",
    "properties": [
      "Description",
      "Tags"
    ]
  },
  "AWS::Redshift::ClusterSecurityGroupIngress": {
    "full_properties": {
      "CIDRIP": {
        "description": "The IP address range that has inbound access to the Amazon Redshift security group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ClusterSecurityGroupName": {
        "description": "The name of the Amazon Redshift security group that will be associated with the ingress rule.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EC2SecurityGroupName": {
        "description": "The Amazon EC2 security group that will be added the Amazon Redshift security group.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "EC2SecurityGroupOwnerId": {
        "description": "The 12-digit AWS account number of the owner of the Amazon EC2 security group that is specified by the EC2SecurityGroupName parameter.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-redshift-clustersecuritygroupingress.html",
    "properties": [
      "ClusterSecurityGroupName",
      "CIDRIP",
      "EC2SecurityGroupName",
      "EC2SecurityGroupOwnerId"
    ]
  },
  "AWS::Redshift::ClusterSubnetGroup": {
    "full_properties": {
      "Description": {
        "description": "A description of the subnet group.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "SubnetIds": {
        "description": "A list of VPC subnet IDs. You can modify a maximum of 20 subnets.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "Specifies an arbitrary set of tags (key–value pairs) to associate with this subnet group. Use tags to manage your resources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-redshift-clustersubnetgroup.html",
    "properties": [
      "Description",
      "SubnetIds",
      "Tags"
    ]
  },
  "AWS::Route53::HealthCheck": {
    "full_properties": {
      "HealthCheckConfig": {
        "description": "An Amazon Route 53 health check.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "HealthCheckTags": {
        "description": "An arbitrary set of tags (key–value pairs) for this health check.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-route53-healthcheck.html",
    "properties": [
      "HealthCheckConfig",
      "HealthCheckTags"
    ]
  },
  "AWS::Route53::HostedZone": {
    "full_properties": {
      "HostedZoneConfig": {
        "description": "A complex type that contains an optional comment about your hosted zone.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "HostedZoneTags": {
        "description": "An arbitrary set of tags (key–value pairs) for this hosted zone.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the domain. For resource record types that include a domain name, specify a fully qualified domain name.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "QueryLoggingConfig": {
        "description": "The configuration for DNS query logging.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VPCs": {
        "description": "One or more VPCs that you want to associate with this hosted zone. When you specify this property, AWS CloudFormation creates a private hosted zone.",
        "required": false,
        "type": "Array",
        "update_causes": [
          "replacement",
          "none"
        ]
      }
    },
    "path": "aws-resource-route53-hostedzone.html",
    "properties": [
      "HostedZoneConfig",
      "HostedZoneTags",
      "Name",
      "QueryLoggingConfig",
      "VPCs"
    ]
  },
  "AWS::Route53::RecordSet": {
    "full_properties": {
      "AliasTarget": {
        "description": "Alias resource record sets only: Information about the domain to which you are redirecting traffic.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Comment": {
        "description": "Any comments that you want to include about the hosted zone.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Failover": {
        "description": "Designates the record set as a PRIMARY or SECONDARY failover record set. When you have more than one resource performing the same function, you can configure Route 53 to check the health of your resources and use only health resources to respond to DNS queries. You cannot create nonfailover resource record sets that have the same Name and Type property values as failover resource record sets. For more information, see the Failover content in the Amazon Route 53 API Reference.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "GeoLocation": {
        "description": "Describes how Route 53 responds to DNS queries based on the geographic origin of the query. This property is not compatible with the Region property.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "HealthCheckId": {
        "description": "The health check ID that you want to apply to this record set. Route 53 returns this resource record set in response to a DNS query only while record set is healthy.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HostedZoneId": {
        "description": "The ID of the hosted zone.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "HostedZoneName": {
        "description": "The name of the domain for the hosted zone where you want to add the record set.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the domain. You must specify a fully qualified domain name that ends with a period as the last label indication. If you omit the final period, Route 53 adds it.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Region": {
        "description": "Latency resource record sets only: The Amazon EC2 region where the resource that is specified in this resource record set resides. The resource typically is an AWS resource, for example, Amazon EC2 instance or an Elastic Load Balancing load balancer, and is referred to by an IP address or a DNS domain name, depending on the record type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "unknown"
      },
      "ResourceRecords": {
        "description": "List of resource records to add. Each record should be in the format appropriate for the record type specified by the Type property. For information about different record types and their record formats, see Values for Basic Resource Record Sets and Appendix: Domain Name Format in the Route 53 Developer Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "SetIdentifier": {
        "description": "A unique identifier that differentiates among multiple resource record sets that have the same combination of DNS name and type.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "TTL": {
        "description": "The resource record cache time to live (TTL), in seconds. If you specify this property, do not specify the AliasTarget property. For alias target records, the alias uses a TTL value from the target.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Type": {
        "description": "The type of records to add. For valid values, see the Type content in the Amazon Route 53 API Reference.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Weight": {
        "description": "Weighted resource record sets only: Among resource record sets that have the same combination of DNS name and type, a value that determines what portion of traffic for the current resource record set is routed to the associated location.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-route53-recordset.html",
    "properties": [
      "AliasTarget",
      "Comment",
      "Failover",
      "GeoLocation",
      "HealthCheckId",
      "HostedZoneId",
      "HostedZoneName",
      "Name",
      "Region",
      "ResourceRecords",
      "SetIdentifier",
      "TTL",
      "Type",
      "Weight"
    ]
  },
  "AWS::Route53::RecordSetGroup": {
    "full_properties": {
      "Comment": {
        "description": "Any comments you want to include about the hosted zone.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "HostedZoneId": {
        "description": "The ID of the hosted zone.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "HostedZoneName": {
        "description": "The name of the domain for the hosted zone where you want to add the record set.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RecordSets": {
        "description": "List of resource record sets to add. The maximum number of records is 1,000.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-route53-recordsetgroup.html",
    "properties": [
      "Comment",
      "HostedZoneId",
      "HostedZoneName",
      "RecordSets"
    ]
  },
  "AWS::S3::Bucket": {
    "full_properties": {
      "AccelerateConfiguration": {
        "description": "Configuration for the transfer acceleration state. For more information, see Amazon S3 Transfer Acceleration in the Amazon Simple Storage Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "AccessControl": {
        "description": "A canned access control list (ACL) that grants predefined permissions to the bucket. For more information about canned ACLs, see Canned ACLs in the Amazon S3 documentation  in the Amazon Simple Storage Service Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "AnalyticsConfigurations": {
        "description": "The configuration and any analyses for the analytics filter of an Amazon S3 bucket. Duplicates not allowed.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "BucketEncryption": {
        "description": "Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys SSE-S3 or AWS KMS-managed Keys (SSE-KMS) bucket..",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "BucketName": {
        "description": "A name for the bucket. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name. For more information, see Name Type. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-).",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "CorsConfiguration": {
        "description": "Rules that define cross-origin resource sharing of objects in this bucket. For more information, see Enabling Cross-Origin Resource Sharing in the Amazon Simple Storage Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "InventoryConfigurations": {
        "description": "The inventory configuration for an Amazon S3 bucket. Duplicates not allowed.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "LifecycleConfiguration": {
        "description": "Rules that define how Amazon S3 manages objects during their lifetime. For more information, see Object Lifecycle Management in the Amazon Simple Storage Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "LoggingConfiguration": {
        "description": "Settings that define where logs are stored.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MetricsConfigurations": {
        "description": "Settings that define a metrics configuration for the CloudWatch request metrics from the bucket.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "NotificationConfiguration": {
        "description": "Configuration that defines how Amazon S3 handles bucket notifications.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "ReplicationConfiguration": {
        "description": "Configuration for replicating objects in an S3 bucket. To enable replication, you must also enable versioning by using the VersioningConfiguration property.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Tags": {
        "description": "An arbitrary set of tags (key-value pairs) for this S3 bucket.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VersioningConfiguration": {
        "description": "Enables multiple variants of all objects in this bucket. You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "WebsiteConfiguration": {
        "description": "Information used to configure the bucket as a static website. For more information, see Hosting Websites on Amazon S3.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-s3-bucket.html",
    "properties": [
      "AccessControl",
      "AccelerateConfiguration",
      "AnalyticsConfigurations",
      "BucketEncryption",
      "BucketName",
      "CorsConfiguration",
      "InventoryConfigurations",
      "LifecycleConfiguration",
      "LoggingConfiguration",
      "MetricsConfigurations",
      "NotificationConfiguration",
      "ReplicationConfiguration",
      "Tags",
      "VersioningConfiguration",
      "WebsiteConfiguration"
    ]
  },
  "AWS::S3::BucketPolicy": {
    "full_properties": {
      "Bucket": {
        "description": "The Amazon S3 bucket that the policy applies to.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "PolicyDocument": {
        "description": "A policy document containing permissions to add to the specified bucket. For more information, see Access Policy Language Overview in the Amazon Simple Storage Service Developer Guide.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-s3-policy.html",
    "properties": [
      "Bucket",
      "PolicyDocument"
    ]
  },
  "AWS::SDB::Domain": {
    "full_properties": {
      "Description": {
        "description": "Information about the Amazon SimpleDB domain.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      }
    },
    "path": "aws-properties-simpledb.html",
    "properties": [
      "Description"
    ]
  },
  "AWS::SES::ConfigurationSet": {
    "full_properties": {
      "Name": {
        "description": "The name of the configuration set. The name must meet the following requirements:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ses-configurationset.html",
    "properties": [
      "Name"
    ]
  },
  "AWS::SES::ConfigurationSetEventDestination": {
    "full_properties": {
      "ConfigurationSetName": {
        "description": "The name of the configuration set that the event destination should be associated with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "EventDestination": {
        "description": "The AWS service that email sending event information will be published to.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ses-configurationseteventdestination.html",
    "properties": [
      "ConfigurationSetName",
      "EventDestination"
    ]
  },
  "AWS::SES::ReceiptFilter": {
    "full_properties": {
      "Filter": {
        "description": "The IP addresses to block or allow, and whether to block or allow incoming mail from them.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ses-receiptfilter.html",
    "properties": [
      "Filter"
    ]
  },
  "AWS::SES::ReceiptRule": {
    "full_properties": {
      "After": {
        "description": "The name of an existing rule after which the new rule will be placed. If this parameter is null, the new rule will be inserted at the beginning of the rule list.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Rule": {
        "description": "The specified rule's name, actions, recipients, domains, enabled status, scan status, and TLS policy.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "RuleSetName": {
        "description": "The name of the rule set that the receipt rule will be added to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ses-receiptrule.html",
    "properties": [
      "After",
      "Rule",
      "RuleSetName"
    ]
  },
  "AWS::SES::ReceiptRuleSet": {
    "full_properties": {
      "RuleSetName": {
        "description": "The name of the rule set to create. The name must:",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ses-receiptruleset.html",
    "properties": [
      "RuleSetName"
    ]
  },
  "AWS::SES::Template": {
    "full_properties": {
      "Template": {
        "description": "The content of the email, composed of a subject line, an HTML part, and a text-only part.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ses-template.html",
    "properties": [
      "Template"
    ]
  },
  "AWS::SNS::Subscription": {
    "full_properties": {
      "Endpoint": {
        "description": "The endpoint that receives notifications from the Amazon SNS topic. The endpoint value depends on the protocol that you specify. For more information, see the Subscribe Endpoint parameter in the Amazon Simple Notification Service API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Protocol": {
        "description": "The subscription's protocol. For more information, see the Subscribe Protocol parameter in the Amazon Simple Notification Service API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TopicArn": {
        "description": "The Amazon Resource Name (ARN) of the topic to subscribe to.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sns-subscription.html",
    "properties": [
      "Endpoint",
      "Protocol",
      "TopicArn"
    ]
  },
  "AWS::SNS::Topic": {
    "full_properties": {
      "DisplayName": {
        "description": "A developer-defined string that can be used to identify this SNS topic.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Subscription": {
        "description": "The SNS subscriptions (endpoints) for this topic.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "TopicName": {
        "description": "A name for the topic. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the topic name. For more information, see Name Type.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-properties-sns-topic.html",
    "properties": [
      "DisplayName",
      "Subscription",
      "TopicName"
    ]
  },
  "AWS::SNS::TopicPolicy": {
    "full_properties": {
      "PolicyDocument": {
        "description": "A policy document that contains permissions to add to the specified SNS topics.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Topics": {
        "description": "The Amazon Resource Names (ARN) of the topics to which you want to add the policy. You can use the Ref function to specify an AWS::SNS::Topic resource.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-sns-policy.html",
    "properties": [
      "PolicyDocument",
      "Topics"
    ]
  },
  "AWS::SQS::Queue": {
    "full_properties": {
      "ContentBasedDeduplication": {
        "description": "For first-in-first-out (FIFO) queues, specifies whether to enable content-based deduplication. During the deduplication interval, Amazon SQS treats messages that are sent with identical content as duplicates and delivers only one copy of the message. For more information, see the ContentBasedDeduplication attribute for the CreateQueue action in the Amazon Simple Queue Service API Reference.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "DelaySeconds": {
        "description": "The time in seconds that the delivery of all messages in the queue is delayed. You can specify an integer value of 0 to 900 (15 minutes). The default value is 0.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "FifoQueue": {
        "description": "Indicates whether this queue is a FIFO queue. For more information, see FIFO (First-In-First-Out) Queues in the Amazon Simple Queue Service Developer Guide.",
        "required": false,
        "type": "Boolean",
        "update_causes": "replacement"
      },
      "KmsDataKeyReusePeriodSeconds": {
        "description": "The length of time in seconds that Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. The value must be an integer between 60 (1 minute) and 86,400 (24 hours). The default is 300 (5 minutes).",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "KmsMasterKeyId": {
        "description": "The ID of an AWS managed customer master key (CMK) for Amazon SQS or a custom CMK. To use the AWS managed CMK for Amazon SQS, specify the alias alias/aws/sqs. For more information, see CreateQueue in the Amazon Simple Queue Service API Reference, Protecting Data Using Server-Side Encryption (SSE) and AWS KMS in the Amazon Simple Queue Service Developer Guide, or Customer Master Keys in the AWS Key Management Service Best Practices whitepaper.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "MaximumMessageSize": {
        "description": "The limit of how many bytes that a message can contain before Amazon SQS rejects it. You can specify an integer value from 1024 bytes (1 KiB) to 262144 bytes (256 KiB). The default value is 262144 (256 KiB).",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "MessageRetentionPeriod": {
        "description": "The number of seconds that Amazon SQS retains a message. You can specify an integer value from 60 seconds (1 minute) to 1209600 seconds (14 days). The default value is 345600 seconds (4 days).",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "QueueName": {
        "description": "A name for the queue. To create a FIFO queue, the name of your FIFO queue must end with the .fifo suffix. For more information, see FIFO (First-In-First-Out) Queues in the Amazon Simple Queue Service Developer Guide.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "ReceiveMessageWaitTimeSeconds": {
        "description": "Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message is in the queue in order to include it in the response, as opposed to returning an empty response if a message isn't yet available. You can specify an integer from 1 to 20. The short polling is used as the default or when you specify 0 for this property. For more information, see Amazon SQS Long Poll.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      },
      "RedrivePolicy": {
        "description": "Specifies an existing dead letter queue to receive messages after the source queue (this queue) fails to process a message a specified number of times.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "VisibilityTimeout": {
        "description": "The length of time during which a message will be unavailable after a message is delivered from the queue. This blocks other components from receiving the same message and gives the initial component time to process and delete the message from the queue.",
        "required": false,
        "type": "Number",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-sqs-queues.html",
    "properties": [
      "ContentBasedDeduplication",
      "DelaySeconds",
      "FifoQueue",
      "KmsMasterKeyId",
      "KmsDataKeyReusePeriodSeconds",
      "MaximumMessageSize",
      "MessageRetentionPeriod",
      "QueueName",
      "ReceiveMessageWaitTimeSeconds",
      "RedrivePolicy",
      "VisibilityTimeout"
    ]
  },
  "AWS::SQS::QueuePolicy": {
    "full_properties": {
      "PolicyDocument": {
        "description": "A policy document that contains the permissions for the specified Amazon SQS queues. For more information about Amazon SQS policies, see Creating Custom Policies Using the Access Policy Language in the Amazon Simple Queue Service Developer Guide.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Queues": {
        "description": "The URLs of the queues to which you want to add the policy. You can use the Ref function to specify an AWS::SQS::Queue resource.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-properties-sqs-policy.html",
    "properties": [
      "PolicyDocument",
      "Queues"
    ]
  },
  "AWS::SSM::Association": {
    "full_properties": {
      "AssociationName": {
        "description": "The name of the association.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DocumentVersion": {
        "description": "The version of the SSM document to associate with the target.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "InstanceId": {
        "description": "The ID of the instance that the SSM document is associated with.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name of the SSM document.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "OutputLocation": {
        "description": "An Amazon S3 bucket where you want to store the results of this request.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Parameters": {
        "description": "Parameter values that the SSM document uses at runtime.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ScheduleExpression": {
        "description": "A Cron expression that specifies when the association is applied to the target. For more on working with Cron expressions, see Working with Cron and Rate Expressions for Systems Manager.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Targets": {
        "description": "The targets that the SSM document sends commands to.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ssm-association.html",
    "properties": [
      "AssociationName",
      "DocumentVersion",
      "InstanceId",
      "Name",
      "OutputLocation",
      "Parameters",
      "ScheduleExpression",
      "Targets"
    ]
  },
  "AWS::SSM::Document": {
    "full_properties": {
      "Content": {
        "description": "A JSON object that describes an instance configuration. For more information, see Creating Systems Manager Documents in the AWS Systems Manager User Guide.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "DocumentType": {
        "description": "The type of document to create that relates to the purpose of your document, such as running commands, bootstrapping software, or automating tasks. For valid values, see the CreateDocument action in the AWS Systems Manager API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "AWS CloudFormation resource tags to apply to the document, which can help you identify and categorize these resources.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ssm-document.html",
    "properties": [
      "Content",
      "DocumentType",
      "Tags"
    ]
  },
  "AWS::SSM::MaintenanceWindow": {
    "full_properties": {
      "AllowUnassociatedTargets": {
        "description": "Enables a Maintenance Window task to execute on managed instances, even if you haven't registered those instances as targets. If this is enabled, then you must specify the unregistered instances (by instance ID) when you register a task with the Maintenance Window.",
        "required": true,
        "type": "Boolean",
        "update_causes": "interrupt"
      },
      "Cutoff": {
        "description": "The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.",
        "required": true,
        "type": "Number",
        "update_causes": "interrupt"
      },
      "Description": {
        "description": "A description of the Maintenance Window.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Duration": {
        "description": "The duration of the Maintenance Window in hours.",
        "required": true,
        "type": "Number",
        "update_causes": "interrupt"
      },
      "Name": {
        "description": "The name of the Maintenance Window.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Schedule": {
        "description": "The schedule of the Maintenance Window in the form of a cron or rate expression.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-ssm-maintenancewindow.html",
    "properties": [
      "Description",
      "AllowUnassociatedTargets",
      "Cutoff",
      "Schedule",
      "Duration",
      "Name"
    ]
  },
  "AWS::SSM::MaintenanceWindowTarget": {
    "full_properties": {
      "Description": {
        "description": "A description for the target.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Name": {
        "description": "An optional name for the target.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "OwnerInformation": {
        "description": "A user-provided value to include in any events in CloudWatch Events that are raised while running tasks for these targets in this Maintenance Window.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "ResourceType": {
        "description": "The type of target that's being registered with the Maintenance Window.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Targets": {
        "description": "The targets, either instances or tags.",
        "required": true,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "WindowId": {
        "description": "The ID of the Maintenance Window to register the target with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ssm-maintenancewindowtarget.html",
    "properties": [
      "OwnerInformation",
      "Description",
      "WindowId",
      "ResourceType",
      "Targets",
      "Name"
    ]
  },
  "AWS::SSM::MaintenanceWindowTask": {
    "full_properties": {
      "Description": {
        "description": "A description of the task.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "LoggingInfo": {
        "description": "Information about an Amazon S3 bucket to write task-level logs to.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "MaxConcurrency": {
        "description": "The maximum number of targets that you can run this task for, in parallel.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "MaxErrors": {
        "description": "The maximum number of errors allowed before this task stops being scheduled.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Name": {
        "description": "The task name.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Priority": {
        "description": "The priority of the task in the Maintenance Window. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.",
        "required": true,
        "type": "Number",
        "update_causes": "interrupt"
      },
      "ServiceRoleArn": {
        "description": "The role that's used when the task is executed.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Targets": {
        "description": "The targets, either instances or tags.",
        "required": true,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "TaskArn": {
        "description": "The resource that the task uses during execution.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "TaskInvocationParameters": {
        "description": "The parameters for task execution.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "TaskParameters": {
        "description": "The parameters to pass to the task when it's executed.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "TaskType": {
        "description": "The type of task. Valid values: RUN_COMMAND, AUTOMATION, LAMBDA, STEP_FUNCTION.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "WindowId": {
        "description": "The ID of the Maintenance Window where the task is registered.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-ssm-maintenancewindowtask.html",
    "properties": [
      "MaxErrors",
      "Description",
      "ServiceRoleArn",
      "Priority",
      "MaxConcurrency",
      "Targets",
      "Name",
      "TaskArn",
      "TaskInvocationParameters",
      "WindowId",
      "TaskParameters",
      "TaskType",
      "LoggingInfo"
    ]
  },
  "AWS::SSM::Parameter": {
    "full_properties": {
      "AllowedPattern": {
        "description": "A regular expression used to validate the parameter value. For example, for String types with values restricted to numbers, you can specify the following: AllowedPattern=^\\d+$",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "Information about the parameter that you want to add to the system.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the parameter. Names must not be prefixed with aws or ssm.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Type": {
        "description": "The type of parameter. Valid values include the following: String or StringList.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Value": {
        "description": "The parameter value. Value must not nest another parameter. Do not use {{}} in the value.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-ssm-parameter.html",
    "properties": [
      "Name",
      "Description",
      "Type",
      "Value",
      "AllowedPattern"
    ]
  },
  "AWS::SSM::PatchBaseline": {
    "full_properties": {
      "ApprovalRules": {
        "description": "A set of rules that are used to include patches in the baseline.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "ApprovedPatches": {
        "description": "A list of explicitly approved patches for the baseline.",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "ApprovedPatchesComplianceLevel": {
        "description": "The compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. Valid compliance severity levels include the following: CRITICAL, HIGH, MEDIUM, LOW, INFORMATIONAL, and UNSPECIFIED. The default value is UNSPECIFIED.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "Description": {
        "description": "A description of the patch baseline.",
        "required": false,
        "type": "String",
        "update_causes": "interrupt"
      },
      "GlobalFilters": {
        "description": "A set of global filters that are used to exclude patches from the baseline.",
        "required": false,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "Name": {
        "description": "The name of the patch baseline.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "OperatingSystem": {
        "description": "Defines the operating system that the patch baseline applies to. Supported operating systems include WINDOWS, AMAZON_LINUX, UBUNTU, REDHAT_ENTERPRISE_LINUX, SUSE, and CENTOS. The default value is WINDOWS.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PatchGroups": {
        "description": "The names of the patch groups to register with the patch baseline.",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "RejectedPatches": {
        "description": "A list of explicitly rejected patches for the baseline.",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-ssm-patchbaseline.html",
    "properties": [
      "OperatingSystem",
      "ApprovedPatches",
      "PatchGroups",
      "Description",
      "ApprovedPatchesComplianceLevel",
      "ApprovalRules",
      "GlobalFilters",
      "Name",
      "RejectedPatches"
    ]
  },
  "AWS::SageMaker::Endpoint": {
    "full_properties": {
      "EndpointConfigName": {
        "description": "The name of the AWS::SageMaker::EndpointConfig resource that specifies the configuration for the endpoint.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "EndpointName": {
        "description": "The name of the endpoint.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs. For more information, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide.",
        "required": true,
        "type": "Array",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-sagemaker-endpoint.html",
    "properties": [
      "EndpointName",
      "EndpointConfigName",
      "Tags"
    ]
  },
  "AWS::SageMaker::EndpointConfig": {
    "full_properties": {
      "EndpointConfigName": {
        "description": "The name of the endpoint configuration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "KmsKeyId": {
        "description": "If you provide a AWS KMS key ID, Amazon SageMaker uses it to encrypt data at rest on the ML storage volume that is attached to your notebook instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProductionVariants": {
        "description": "A list of the production variants that specify the models you want to host at this endpoint.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs. For more information, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-sagemaker-endpointconfig.html",
    "properties": [
      "ProductionVariants",
      "EndpointConfigName",
      "KmsKeyId",
      "Tags"
    ]
  },
  "AWS::SageMaker::Model": {
    "full_properties": {
      "ExecutionRoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute instances. Deploying on ML compute instances is part of model hosting. For more information, see Amazon SageMaker Roles.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ModelName": {
        "description": "The name of the model.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PrimaryContainer": {
        "description": "The location of the primary docker image containing inference code, associated artifacts, and custom environment map that the inference code uses when the model is deployed into production.",
        "required": true,
        "type": "Unknown",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "An array of key-value pairs. For more information, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide.",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      },
      "VpcConfig": {
        "description": "A VpcConfig object that specifies the VPC that you want your model to connect to. Control access to and from your model container by configuring the VPC. For more information, see Protect Models by Using an Amazon Virtual Private Cloud.",
        "required": false,
        "type": "Unknown",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-sagemaker-model.html",
    "properties": [
      "ExecutionRoleArn",
      "PrimaryContainer",
      "ModelName",
      "VpcConfig",
      "Tags"
    ]
  },
  "AWS::SageMaker::NotebookInstance": {
    "full_properties": {
      "DirectInternetAccess": {
        "description": "Sets whether Amazon SageMaker provides internet access to the notebook instance. If you set this to Disabled this notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC. For more information, see Notebook Instances Are Enabled with Internet Access by Default. You can set the value of this parameter to Disabled only if you set a value for the SubnetId parameter.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "InstanceType": {
        "description": "The type of ML compute instance to launch for the notebook instance.",
        "required": true,
        "type": "String",
        "update_causes": "interrupt"
      },
      "KmsKeyId": {
        "description": "If you provide a AWS KMS key ID, Amazon SageMaker uses it to encrypt data at rest on the ML storage volume that is attached to your notebook instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "LifecycleConfigName": {
        "description": "The name of a lifecycle configuration to associate with the notebook instance. For information about lifestyle configurations, see Customize a Notebook Instance in the Amazon SageMaker Developer Guide.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "NotebookInstanceName": {
        "description": "The name of the notebook instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "When you send any requests to AWS resources from the notebook instance, Amazon SageMaker assumes this role to perform tasks on your behalf. You must grant this role necessary permissions so Amazon SageMaker can perform these tasks. The policy must allow the Amazon SageMaker service principal (sagemaker.amazonaws.com) permissions to assume this role. For more information, see Amazon SageMaker Roles.",
        "required": true,
        "type": "Unknown",
        "update_causes": "interrupt"
      },
      "SecurityGroupIds": {
        "description": "The VPC security group IDs, in the form sg-xxxxxxxx. The security groups must be for the same VPC as specified in the subnet.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "SubnetId": {
        "description": "The ID of the subnet in a VPC to which you would like to have a connectivity from your ML compute instance.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Tags": {
        "description": "A list of tags to associate with the notebook instance.",
        "required": false,
        "type": "Array",
        "update_causes": "interrupt"
      }
    },
    "path": "aws-resource-sagemaker-notebookinstance.html",
    "properties": [
      "KmsKeyId",
      "DirectInternetAccess",
      "SubnetId",
      "NotebookInstanceName",
      "InstanceType",
      "LifecycleConfigName",
      "SecurityGroupIds",
      "RoleArn",
      "Tags"
    ]
  },
  "AWS::SageMaker::NotebookInstanceLifecycleConfig": {
    "full_properties": {
      "NotebookInstanceLifecycleConfigName": {
        "description": "The name of the lifecycle configuration.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "OnCreate": {
        "description": "A shell script that runs only once, when you create a notebook instance.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "OnStart": {
        "description": "A shell script that runs once when you create a notebook instance, and then each time you start the notebook instance.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-sagemaker-notebookinstancelifecycleconfig.html",
    "properties": [
      "OnStart",
      "NotebookInstanceLifecycleConfigName",
      "OnCreate"
    ]
  },
  "AWS::ServiceCatalog::AcceptedPortfolioShare": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PortfolioId": {
        "description": "The portfolio identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-acceptedportfolioshare.html",
    "properties": [
      "AcceptLanguage",
      "PortfolioId"
    ]
  },
  "AWS::ServiceCatalog::CloudFormationProduct": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the product.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Distributor": {
        "description": "The distributor of the product.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name of the product.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Owner": {
        "description": "The owner of the product.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ProvisioningArtifactParameters": {
        "description": "The configuration of the provisioning artifact (also known as a version) for a product.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      },
      "SupportDescription": {
        "description": "The support information about the product.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SupportEmail": {
        "description": "The contact email for product support.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "SupportUrl": {
        "description": "The contact URL for product support.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "One or more tags.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-servicecatalog-cloudformationproduct.html",
    "properties": [
      "AcceptLanguage",
      "Description",
      "Distributor",
      "Name",
      "Owner",
      "ProvisioningArtifactParameters",
      "SupportDescription",
      "SupportEmail",
      "SupportUrl",
      "Tags"
    ]
  },
  "AWS::ServiceCatalog::CloudFormationProvisionedProduct": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NotificationArns": {
        "description": "The SNS topic ARNs for stack-related events.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      },
      "PathId": {
        "description": "The path identifier of the product.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ProductId": {
        "description": "The product identifier. You must specify either the ID or the name of the product, but not both.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProductName": {
        "description": "The product name. This name must be unique for the user. You must specify either the name or the ID of the product, but not both.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProvisionedProductName": {
        "description": "A user-friendly name for the provisioned product. This name must be unique for the AWS account and cannot be updated after the product is provisioned.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProvisioningArtifactId": {
        "description": "The identifier of the provisioning artifact. You must specify either the ID or the name of the provisioning artifact, but not both.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ProvisioningArtifactName": {
        "description": "The name of the provisioning artifact. This name must be unique for the product. You must specify either the name or the ID of the provisioning artifact, but not both.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "ProvisioningParameters": {
        "description": "Parameters specified by the administrator that are required for provisioning the product.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Tags": {
        "description": "One or more tags.",
        "required": false,
        "type": "Array",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-cloudformationprovisionedproduct.html",
    "properties": [
      "AcceptLanguage",
      "NotificationArns",
      "PathId",
      "ProductId",
      "ProductName",
      "ProvisionedProductName",
      "ProvisioningArtifactId",
      "ProvisioningArtifactName",
      "ProvisioningParameters",
      "Tags"
    ]
  },
  "AWS::ServiceCatalog::LaunchNotificationConstraint": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the constraint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "NotificationArns": {
        "description": "The notification ARNs.",
        "required": true,
        "type": "Array",
        "update_causes": "replacement"
      },
      "PortfolioId": {
        "description": "The portfolio identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProductId": {
        "description": "The product identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-launchnotificationconstraint.html",
    "properties": [
      "AcceptLanguage",
      "Description",
      "NotificationArns",
      "PortfolioId",
      "ProductId"
    ]
  },
  "AWS::ServiceCatalog::LaunchRoleConstraint": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the constraint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PortfolioId": {
        "description": "The portfolio identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProductId": {
        "description": "The product identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RoleArn": {
        "description": "The ARN of the launch role.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-launchroleconstraint.html",
    "properties": [
      "AcceptLanguage",
      "Description",
      "PortfolioId",
      "ProductId",
      "RoleArn"
    ]
  },
  "AWS::ServiceCatalog::LaunchTemplateConstraint": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the constraint.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "PortfolioId": {
        "description": "The portfolio identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProductId": {
        "description": "The product identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Rules": {
        "description": "The constraint rules.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-launchtemplateconstraint.html",
    "properties": [
      "AcceptLanguage",
      "Description",
      "PortfolioId",
      "ProductId",
      "Rules"
    ]
  },
  "AWS::ServiceCatalog::Portfolio": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "Description": {
        "description": "The description of the portfolio.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DisplayName": {
        "description": "The name to use for display purposes.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "ProviderName": {
        "description": "The name of the portfolio provider.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "Tags": {
        "description": "One or more tags.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-servicecatalog-portfolio.html",
    "properties": [
      "AcceptLanguage",
      "Description",
      "DisplayName",
      "ProviderName",
      "Tags"
    ]
  },
  "AWS::ServiceCatalog::PortfolioPrincipalAssociation": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PortfolioId": {
        "description": "The portfolio identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PrincipalARN": {
        "description": "The ARN of the principal (IAM user, role, or group).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PrincipalType": {
        "description": "The principal type (IAM).",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-portfolioprincipalassociation.html",
    "properties": [
      "AcceptLanguage",
      "PortfolioId",
      "PrincipalARN",
      "PrincipalType"
    ]
  },
  "AWS::ServiceCatalog::PortfolioProductAssociation": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The language code.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "PortfolioId": {
        "description": "The portfolio identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ProductId": {
        "description": "The product identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SourcePortfolioId": {
        "description": "The identifier of the source portfolio.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-portfolioproductassociation.html",
    "properties": [
      "AcceptLanguage",
      "PortfolioId",
      "ProductId",
      "SourcePortfolioId"
    ]
  },
  "AWS::ServiceCatalog::PortfolioShare": {
    "full_properties": {
      "AcceptLanguage": {
        "description": "The AWS account ID.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "AccountId": {
        "description": "The language code.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "PortfolioId": {
        "description": "The portfolio identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-portfolioshare.html",
    "properties": [
      "AccountId",
      "AcceptLanguage",
      "PortfolioId"
    ]
  },
  "AWS::ServiceCatalog::TagOption": {
    "full_properties": {
      "Active": {
        "description": "Indicates whether the TagOption is active.",
        "required": false,
        "type": "Boolean",
        "update_causes": "none"
      },
      "Key": {
        "description": "The TagOption key.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Value": {
        "description": "The TagOption value.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-tagoption.html",
    "properties": [
      "Active",
      "Key",
      "Value"
    ]
  },
  "AWS::ServiceCatalog::TagOptionAssociation": {
    "full_properties": {
      "ResourceId": {
        "description": "The resource identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "TagOptionId": {
        "description": "The TagOption identifier.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicecatalog-tagoptionassociation.html",
    "properties": [
      "ResourceId",
      "TagOptionId"
    ]
  },
  "AWS::ServiceDiscovery::Instance": {
    "full_properties": {
      "InstanceAttributes": {
        "description": "A string map that contains attribute keys and values. Supported attribute keys include the following:",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "InstanceId": {
        "description": "An identifier that you want to associate with the instance. Note the following:",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "ServiceId": {
        "description": "The ID of the service that you want to use for settings for the resource record sets and health check that Route 53 will create.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicediscovery-instance.html",
    "properties": [
      "InstanceAttributes",
      "InstanceId",
      "ServiceId"
    ]
  },
  "AWS::ServiceDiscovery::PrivateDnsNamespace": {
    "full_properties": {
      "Description": {
        "description": "A description for the namespace.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name that you want to assign to this namespace. When you create a namespace, Route 53 automatically creates a hosted zone that has the same name as the namespace.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Vpc": {
        "description": "The ID of the Amazon VPC that you want to associate the namespace with.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicediscovery-privatednsnamespace.html",
    "properties": [
      "Description",
      "Vpc",
      "Name"
    ]
  },
  "AWS::ServiceDiscovery::PublicDnsNamespace": {
    "full_properties": {
      "Description": {
        "description": "A description for the namespace.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "The name that you want to assign to this namespace. When you create a namespace, Route 53 automatically creates a hosted zone that has the same name as the namespace.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicediscovery-publicdnsnamespace.html",
    "properties": [
      "Description",
      "Name"
    ]
  },
  "AWS::ServiceDiscovery::Service": {
    "full_properties": {
      "Description": {
        "description": "A description for the service.",
        "required": false,
        "type": "String",
        "update_causes": "none"
      },
      "DnsConfig": {
        "description": "A complex type that contains information about the resource record sets that you want Route 53 to create when you register an instance.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "HealthCheckConfig": {
        "description": "A complex type that contains settings for an optional health check. If you specify settings for a health check, Route 53 associates the health check with all the resource record sets that you specify in DnsConfig.",
        "required": false,
        "type": "Unknown",
        "update_causes": "none"
      },
      "Name": {
        "description": "The name that you want to assign to the service.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-servicediscovery-service.html",
    "properties": [
      "Description",
      "DnsConfig",
      "HealthCheckConfig",
      "Name"
    ]
  },
  "AWS::StepFunctions::Activity": {
    "full_properties": {
      "Name": {
        "description": "The name of the activity to create. This name must be unique for your AWS account and region.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-stepfunctions-activity.html",
    "properties": [
      "Name"
    ]
  },
  "AWS::StepFunctions::StateMachine": {
    "full_properties": {
      "DefinitionString": {
        "description": "The Amazon States Language definition of the state machine. For more information, see Amazon States Language in the AWS Step Functions Developer Guide.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "RoleArn": {
        "description": "The Amazon Resource Name (ARN) of the IAM role to use for this state machine.",
        "required": true,
        "type": "String",
        "update_causes": "none"
      },
      "StateMachineName": {
        "description": "The name of the state machine. If you do not specify a name one will be generated that is similar to MyStateMachine-1234abcdefgh. For more information on creating a valid name see Request Parameters in the AWS Step Functions API Reference.",
        "required": false,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-stepfunctions-statemachine.html",
    "properties": [
      "StateMachineName",
      "DefinitionString",
      "RoleArn"
    ]
  },
  "AWS::WAF::ByteMatchSet": {
    "full_properties": {
      "ByteMatchTuples": {
        "description": "Settings for the ByteMatchSet, such as the bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to search for in web requests.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "A friendly name or description of the ByteMatchSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-waf-bytematchset.html",
    "properties": [
      "ByteMatchTuples",
      "Name"
    ]
  },
  "AWS::WAF::IPSet": {
    "full_properties": {
      "IPSetDescriptors": {
        "description": "The IP address type and IP address range (in CIDR notation) from which web requests originate. If you associate the IPSet with a web ACL that is associated with a Amazon CloudFront (CloudFront) distribution, this descriptor is the value of one of the following fields in the CloudFront access logs:",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "A friendly name or description of the IPSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-waf-ipset.html",
    "properties": [
      "IPSetDescriptors",
      "Name"
    ]
  },
  "AWS::WAF::Rule": {
    "full_properties": {
      "MetricName": {
        "description": "A friendly name or description for the metrics of the rule. For valid values, see the MetricName parameter for the CreateRule action in the AWS WAF API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A friendly name or description of the rule.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Predicates": {
        "description": "The ByteMatchSet, IPSet, SizeConstraintSet, SqlInjectionMatchSet, or XssMatchSet objects to include in a rule. If you add more than one predicate to a rule, a request must match all conditions in order to be allowed or blocked.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-waf-rule.html",
    "properties": [
      "MetricName",
      "Name",
      "Predicates"
    ]
  },
  "AWS::WAF::SizeConstraintSet": {
    "full_properties": {
      "Name": {
        "description": "A friendly name or description for the SizeConstraintSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SizeConstraints": {
        "description": "The size constraint and the part of the web request to check.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-waf-sizeconstraintset.html",
    "properties": [
      "Name",
      "SizeConstraints"
    ]
  },
  "AWS::WAF::SqlInjectionMatchSet": {
    "full_properties": {
      "Name": {
        "description": "A friendly name or description of the SqlInjectionMatchSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SqlInjectionMatchTuples": {
        "description": "The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-waf-sqlinjectionmatchset.html",
    "properties": [
      "Name",
      "SqlInjectionMatchTuples"
    ]
  },
  "AWS::WAF::WebACL": {
    "full_properties": {
      "DefaultAction": {
        "description": "The action that you want AWS WAF to take when a request doesn't match the criteria in any of the rules that are associated with the web ACL.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MetricName": {
        "description": "A friendly name or description for the Amazon CloudWatch metric of this web ACL. For valid values, see the MetricName parameter of the CreateWebACL action in the AWS WAF API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A friendly name or description of the web ACL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Rules": {
        "description": "The rules to associate with the web ACL and the settings for each rule.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-waf-webacl.html",
    "properties": [
      "DefaultAction",
      "MetricName",
      "Name",
      "Rules"
    ]
  },
  "AWS::WAF::XssMatchSet": {
    "full_properties": {
      "Name": {
        "description": "A friendly name or description for the XssMatchSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "XssMatchTuples": {
        "description": "The parts of web requests that you want to inspect for cross-site scripting attacks.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-waf-xssmatchset.html",
    "properties": [
      "Name",
      "XssMatchTuples"
    ]
  },
  "AWS::WAFRegional::ByteMatchSet": {
    "full_properties": {
      "ByteMatchTuples": {
        "description": "Settings for the ByteMatchSet, such as the bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to search for in web requests.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "A friendly name or description of the ByteMatchSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-wafregional-bytematchset.html",
    "properties": [
      "ByteMatchTuples",
      "Name"
    ]
  },
  "AWS::WAFRegional::IPSet": {
    "full_properties": {
      "IPSetDescriptors": {
        "description": "The IP address type and IP address range (in CIDR notation) from which web requests originate. If you associate the IPSet with a web ACL that is associated with a Amazon CloudFront (CloudFront) distribution, this descriptor is the value of one of the following fields in the CloudFront access logs:",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      },
      "Name": {
        "description": "A friendly name or description of the IPSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-wafregional-ipset.html",
    "properties": [
      "IPSetDescriptors",
      "Name"
    ]
  },
  "AWS::WAFRegional::Rule": {
    "full_properties": {
      "MetricName": {
        "description": "A friendly name or description for the metrics of the rule. For valid values, see the MetricName parameter for the CreateRule action in the AWS WAF Regional API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A friendly name or description of the rule.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Predicates": {
        "description": "The ByteMatchSet, IPSet, SizeConstraintSet, SqlInjectionMatchSet, or XssMatchSet objects to include in a rule. If you add more than one predicate to a rule, a request must match all conditions in order to be allowed or blocked.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-wafregional-rule.html",
    "properties": [
      "MetricName",
      "Name",
      "Predicates"
    ]
  },
  "AWS::WAFRegional::SizeConstraintSet": {
    "full_properties": {
      "Name": {
        "description": "A friendly name or description for the SizeConstraintSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SizeConstraints": {
        "description": "The size constraint and the part of the web request to check.",
        "required": true,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-wafregional-sizeconstraintset.html",
    "properties": [
      "Name",
      "SizeConstraints"
    ]
  },
  "AWS::WAFRegional::SqlInjectionMatchSet": {
    "full_properties": {
      "Name": {
        "description": "A friendly name or description of the SqlInjectionMatchSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "SqlInjectionMatchTuples": {
        "description": "The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-wafregional-sqlinjectionmatchset.html",
    "properties": [
      "Name",
      "SqlInjectionMatchTuples"
    ]
  },
  "AWS::WAFRegional::WebACL": {
    "full_properties": {
      "DefaultAction": {
        "description": "The action that you want AWS WAF to take when a request doesn't match the criteria in any of the rules that are associated with the web ACL.",
        "required": true,
        "type": "Unknown",
        "update_causes": "none"
      },
      "MetricName": {
        "description": "A friendly name or description for the Amazon CloudWatch metric of this web ACL. For valid values, see the MetricName parameter of the CreateWebACL action in the AWS WAF Regional API Reference.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Name": {
        "description": "A friendly name or description of the web ACL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "Rules": {
        "description": "The rules to associate with the web ACL and the settings for each rule.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-wafregional-webacl.html",
    "properties": [
      "DefaultAction",
      "MetricName",
      "Name",
      "Rules"
    ]
  },
  "AWS::WAFRegional::WebACLAssociation": {
    "full_properties": {
      "ResourceArn": {
        "description": "The Amazon Resource Name (ARN) of the resource to protect with the web ACL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "WebACLId": {
        "description": "A unique identifier (ID) for the web ACL.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      }
    },
    "path": "aws-resource-wafregional-webaclassociation.html",
    "properties": [
      "ResourceArn",
      "WebACLId"
    ]
  },
  "AWS::WAFRegional::XssMatchSet": {
    "full_properties": {
      "Name": {
        "description": "A friendly name or description for the XssMatchSet.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "XssMatchTuples": {
        "description": "The parts of web requests that you want to inspect for cross-site scripting attacks.",
        "required": false,
        "type": "Array",
        "update_causes": "none"
      }
    },
    "path": "aws-resource-wafregional-xssmatchset.html",
    "properties": [
      "Name",
      "XssMatchTuples"
    ]
  },
  "AWS::WorkSpaces::Workspace": {
    "full_properties": {
      "BundleId": {
        "description": "The identifier of the bundle from which you want to create the workspace. A bundle specifies the details of the workspace, such as the installed applications and the size of CPU, memory, and storage. Use the DescribeWorkspaceBundles action to list the bundles that AWS offers.",
        "required": true,
        "type": "String",
        "update_causes": "unavailable"
      },
      "DirectoryId": {
        "description": "The identifier of the AWS Directory Service directory in which you want to create the workspace. The directory must already be registered with Amazon WorkSpaces. Use the DescribeWorkspaceDirectories action to list the directories that are available.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "RootVolumeEncryptionEnabled": {
        "description": "Indicates whether Amazon WorkSpaces encrypts data stored on the root volume (C: drive).",
        "required": false,
        "type": "Boolean",
        "update_causes": "unavailable"
      },
      "UserName": {
        "description": "The name of the user to which the workspace is assigned. This user name must exist in the specified AWS Directory Service directory.",
        "required": true,
        "type": "String",
        "update_causes": "replacement"
      },
      "UserVolumeEncryptionEnabled": {
        "description": "Indicates whether Amazon WorkSpaces encrypts data stored on the user volume (D: drive).",
        "required": false,
        "type": "Boolean",
        "update_causes": "unavailable"
      },
      "VolumeEncryptionKey": {
        "description": "The AWS Key Management Service (AWS KMS) key ID that Amazon WorkSpaces uses to encrypt data stored on your workspace.",
        "required": false,
        "type": "String",
        "update_causes": "unavailable"
      }
    },
    "path": "aws-resource-workspaces-workspace.html",
    "properties": [
      "BundleId",
      "DirectoryId",
      "UserName",
      "RootVolumeEncryptionEnabled",
      "UserVolumeEncryptionEnabled",
      "VolumeEncryptionKey"
    ]
  }
}
