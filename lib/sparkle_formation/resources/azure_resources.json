{
  "Microsoft.AAD/domainServices": {
    "api_version": "2020-01-01",
    "full_properties": {
      "domainName": {
        "description": "The name of the Azure domain that the user would like to deploy Domain Services to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainSecuritySettings": {
        "description": "Domain Security Settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filteredSync": {
        "description": "Enabled or Disabled flag to turn on Group-based filtered sync.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ldapsSettings": {
        "description": "Secure LDAP Settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notificationSettings": {
        "description": "Settings for notification",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "replicaSets": {
        "description": "List of ReplicaSets",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetId": {
        "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "domainName",
      "domainSecuritySettings",
      "filteredSync",
      "ldapsSettings",
      "notificationSettings",
      "subnetId",
      "replicaSets"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AlertsManagement/actionRules": {
    "api_version": "2019-05-05-preview",
    "full_properties": {
      "conditions": {
        "description": "Conditions in alert instance to be matched for a given action rule. Default value is all. Multiple values could be provided with comma separation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of action rule",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scope": {
        "description": "Target scope for a given action rule. By default scope will be the subscription. User can also provide list of resource groups or list of resources from the scope subscription as well.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Indicates if the given action rule is enabled or disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "conditions",
      "description",
      "scope",
      "status"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AnalysisServices/servers": {
    "api_version": "2017-08-01",
    "full_properties": {
      "asAdministrators": {
        "description": "An array of administrator user identities.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backupBlobContainerUri": {
        "description": "The SAS container URI to the backup container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "gatewayDetails": {
        "description": "The gateway details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipV4FirewallSettings": {
        "description": "An array of firewall rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "querypoolConnectionMode": {
        "description": "How the read-write server's participation in the query pool is controlled.<br/>It can have the following values: <ul><li>readOnly - indicates that the read-write server is intended not to participate in query operations</li><li>all - indicates that the read-write server can participate in query operations</li></ul>Specifying readOnly when capacity is 1 results in error.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "asAdministrators",
      "backupBlobContainerUri",
      "gatewayDetails",
      "ipV4FirewallSettings",
      "querypoolConnectionMode"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service": {
    "api_version": "2019-12-01",
    "full_properties": {
      "additionalLocations": {
        "description": "Additional datacenter locations of the API Management service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addresserEmail": {
        "description": "Addresser email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "apiVersionConstraint": {
        "description": "Control Plane Apis version constraint for the API Management service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificates": {
        "description": "List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customProperties": {
        "description": "Custom properties of the API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to disable just TLS 1.1 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to disable TLS 1.0 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on PATCH operation will reset omitted properties' values to their defaults. For all the settings except Http2 the default value is `True` if the service was created on or before April 1st 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable any of next ciphers by using settings `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA. For example, `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`. The default value is `true` for them.  Note: next ciphers can't be disabled since they are required by Azure CloudService internal components: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableGateway": {
        "description": "Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in master region.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableClientCertificate": {
        "description": "Property only meant to be used for Consumption SKU Service. This enforces a client certificate to be presented on each request to the gateway. This also enables the ability to authenticate the certificate in the policy on the gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostnameConfigurations": {
        "description": "Custom hostname configuration of the API Management service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notificationSenderEmail": {
        "description": "Email address from which the notification will be sent.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publisherEmail": {
        "description": "Publisher email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publisherName": {
        "description": "Publisher name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkConfiguration": {
        "description": "Configuration of a virtual network to which API Management service is deployed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkType": {
        "description": "The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnType": {
        "description": "The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnconfiguration": {
        "description": "Configuration of a virtual network to which API Management service is deployed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalLocations",
      "addresserEmail",
      "customProperties",
      "hostnameConfigurations",
      "publisherEmail",
      "publisherName",
      "vpnconfiguration",
      "vpnType",
      "certificates",
      "notificationSenderEmail",
      "virtualNetworkConfiguration",
      "virtualNetworkType",
      "enableClientCertificate",
      "apiVersionConstraint",
      "disableGateway"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/api-version-sets": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "description": {
        "description": "Description of API Version Set.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Name of API Version Set",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "versionHeaderName": {
        "description": "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "versionQueryName": {
        "description": "Name of query parameter that indicates the API Version if versioningScheme is set to `query`.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "versioningScheme": {
        "description": "An value that determines where the API Version identifer will be located in a HTTP request.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "displayName",
      "versionHeaderName",
      "versioningScheme",
      "versionQueryName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apiVersionSets": {
    "api_version": "2019-12-01",
    "full_properties": {
      "description": {
        "description": "Description of API Version Set.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Name of API Version Set",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "versionHeaderName": {
        "description": "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "versionQueryName": {
        "description": "Name of query parameter that indicates the API Version if versioningScheme is set to `query`.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "versioningScheme": {
        "description": "An value that determines where the API Version identifer will be located in a HTTP request.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "displayName",
      "versionHeaderName",
      "versioningScheme",
      "versionQueryName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis": {
    "api_version": "2019-12-01",
    "full_properties": {
      "apiRevision": {
        "description": "Describes the Revision of the Api. If no value is provided, default revision 1 is created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "apiRevisionDescription": {
        "description": "Description of the Api Revision.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "apiType": {
        "description": "Type of Api to create. \n * `http` creates a SOAP to REST API \n * `soap` creates a SOAP pass-through API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiVersion": {
        "description": "Indicates the Version identifier of the API if the API is versioned",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "apiVersionDescription": {
        "description": "Description of the Api Version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "apiVersionSet": {
        "description": "An API Version Set contains the common configuration for a set of API Versions relating ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiVersionSetId": {
        "description": "A resource identifier for the related ApiVersionSet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authenticationSettings": {
        "description": "API Authentication Settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contentFormat": {
        "description": "Format of the Content in which the API is getting imported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contentValue": {
        "description": "Content value when Importing an API.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the API. May include HTML formatting tags.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "API name. Must be 1 to 300 characters long.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "format": {
        "description": "Format of the Content in which the API is getting imported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isCurrent": {
        "description": "Indicates if API revision is current api revision.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "path": {
        "description": "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protocols": {
        "description": "Describes on which protocols the operations in this API can be invoked.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceUrl": {
        "description": "Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceApiId": {
        "description": "API identifier of the source API.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subscriptionKeyParameterNames": {
        "description": "Subscription key parameter names details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subscriptionRequired": {
        "description": "Specifies whether an API or Product subscription is required for accessing the API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "Type of API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "Content value when Importing an API.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "wsdlSelector": {
        "description": "Criteria to limit import of WSDL to a subset of the document.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "apiRevision",
      "apiVersion",
      "apiVersionSet",
      "apiVersionSetId",
      "authenticationSettings",
      "contentFormat",
      "contentValue",
      "description",
      "displayName",
      "path",
      "protocols",
      "serviceUrl",
      "subscriptionKeyParameterNames",
      "type",
      "wsdlSelector",
      "apiRevisionDescription",
      "apiType",
      "apiVersionDescription",
      "subscriptionRequired",
      "format",
      "isCurrent",
      "sourceApiId",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/diagnostics": {
    "api_version": "2019-12-01",
    "full_properties": {
      "alwaysLog": {
        "description": "Specifies for what type of messages sampling settings should not apply.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backend": {
        "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableHttpCorrelationHeaders": {
        "description": "Whether to process Correlation Headers coming to Api Management Service. Only applicable to Application Insights diagnostics. Default is true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "Indicates whether a diagnostic should receive data or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontend": {
        "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpCorrelationProtocol": {
        "description": "Sets correlation protocol to use for Application Insights diagnostics.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logClientIp": {
        "description": "Log the ClientIP. Default is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loggerId": {
        "description": "Resource Id of a target logger.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampling": {
        "description": "Sampling settings for Diagnostic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "verbosity": {
        "description": "The verbosity level applied to traces emitted by trace policies.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabled",
      "alwaysLog",
      "backend",
      "enableHttpCorrelationHeaders",
      "frontend",
      "loggerId",
      "sampling",
      "httpCorrelationProtocol",
      "verbosity",
      "logClientIp"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/diagnostics/loggers": {
    "api_version": "2018-01-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/issues": {
    "api_version": "2019-12-01",
    "full_properties": {
      "apiId": {
        "description": "A resource identifier for the API the issue was created for.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdDate": {
        "description": "Date and time when the issue was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Text describing the issue.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Status of the issue.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "title": {
        "description": "The issue title.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userId": {
        "description": "A resource identifier for the user created the issue.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "apiId",
      "createdDate",
      "description",
      "state",
      "title",
      "userId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/issues/attachments": {
    "api_version": "2019-12-01",
    "full_properties": {
      "content": {
        "description": "An HTTP link or Base64-encoded binary data.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "contentFormat": {
        "description": "Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "title": {
        "description": "Filename by which the binary data will be saved.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "content",
      "contentFormat",
      "title"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/issues/comments": {
    "api_version": "2019-12-01",
    "full_properties": {
      "createdDate": {
        "description": "Date and time when the comment was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "text": {
        "description": "Comment text.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userId": {
        "description": "A resource identifier for the user who left the comment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "createdDate",
      "text",
      "userId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/operations": {
    "api_version": "2019-12-01",
    "full_properties": {
      "description": {
        "description": "Description of the operation. May include HTML formatting tags.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Operation Name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "method": {
        "description": "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policies": {
        "description": "Operation Policies",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "request": {
        "description": "Operation request details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "responses": {
        "description": "Array of Operation responses.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "templateParameters": {
        "description": "Collection of URL template parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "urlTemplate": {
        "description": "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "displayName",
      "method",
      "policies",
      "request",
      "responses",
      "templateParameters",
      "urlTemplate"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/operations/policies": {
    "api_version": "2019-12-01",
    "full_properties": {
      "contentFormat": {
        "description": "Format of the policyContent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "format": {
        "description": "Format of the policyContent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyContent": {
        "description": "Json escaped Xml Encoded contents of the Policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "Contents of the Policy as defined by the format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policyContent",
      "contentFormat",
      "format",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/operations/policy": {
    "api_version": "2016-10-10",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/operations/tags": {
    "api_version": "2019-12-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/policies": {
    "api_version": "2019-12-01",
    "full_properties": {
      "contentFormat": {
        "description": "Format of the policyContent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "format": {
        "description": "Format of the policyContent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyContent": {
        "description": "Json escaped Xml Encoded contents of the Policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "Contents of the Policy as defined by the format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policyContent",
      "contentFormat",
      "format",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/policy": {
    "api_version": "2016-10-10",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/releases": {
    "api_version": "2019-12-01",
    "full_properties": {
      "apiId": {
        "description": "Identifier of the API the release belongs to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "notes": {
        "description": "Release Notes",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "apiId",
      "notes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/schemas": {
    "api_version": "2019-12-01",
    "full_properties": {
      "contentType": {
        "description": "Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "document": {
        "description": "Schema Document Properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contentType",
      "document"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/tagDescriptions": {
    "api_version": "2019-12-01",
    "full_properties": {
      "description": {
        "description": "Description of the Tag.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalDocsDescription": {
        "description": "Description of the external resources describing the tag.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalDocsUrl": {
        "description": "Absolute URL of external resources describing the tag.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "externalDocsDescription",
      "externalDocsUrl"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/apis/tags": {
    "api_version": "2019-12-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/authorizationServers": {
    "api_version": "2019-12-01",
    "full_properties": {
      "authorizationEndpoint": {
        "description": "OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizationMethods": {
        "description": "HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "bearerTokenSendingMethods": {
        "description": "Specifies the mechanism by which access token is passed to the API. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientAuthenticationMethod": {
        "description": "Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientId": {
        "description": "Client or app id registered with this authorization server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientRegistrationEndpoint": {
        "description": "Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientSecret": {
        "description": "Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultScope": {
        "description": "Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the authorization server. Can contain HTML formatting tags.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "User-friendly authorization server name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "grantTypes": {
        "description": "Form of an authorization grant, which the client uses to request the access token.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceOwnerPassword": {
        "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceOwnerUsername": {
        "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "supportState": {
        "description": "If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tokenBodyParameters": {
        "description": "Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {\"name\" : \"name value\", \"value\": \"a value\"}.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tokenEndpoint": {
        "description": "OAuth token endpoint. Contains absolute URI to entity being referenced.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authorizationEndpoint",
      "authorizationMethods",
      "bearerTokenSendingMethods",
      "clientAuthenticationMethod",
      "clientId",
      "clientRegistrationEndpoint",
      "clientSecret",
      "defaultScope",
      "description",
      "displayName",
      "grantTypes",
      "resourceOwnerPassword",
      "resourceOwnerUsername",
      "supportState",
      "tokenBodyParameters",
      "tokenEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/backends": {
    "api_version": "2019-12-01",
    "full_properties": {
      "credentials": {
        "description": "Details of the Credentials used to connect to Backend.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Backend Description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "properties": {
        "description": "Properties specific to the Backend Type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protocol": {
        "description": "Backend communication protocol.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "proxy": {
        "description": "Details of the Backend WebProxy Server to use in the Request to Backend.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or Api Apps.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "title": {
        "description": "Backend Title.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tls": {
        "description": "Properties controlling TLS Certificate Validation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "url": {
        "description": "Runtime Url of the Backend.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "credentials",
      "description",
      "properties",
      "protocol",
      "proxy",
      "resourceId",
      "title",
      "tls",
      "url"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/caches": {
    "api_version": "2019-12-01",
    "full_properties": {
      "connectionString": {
        "description": "Runtime connection string to cache",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Cache description",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "Original uri of entity in external system cache points to",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "connectionString",
      "description",
      "resourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/certificates": {
    "api_version": "2019-12-01",
    "full_properties": {
      "base64Value": {
        "description": "Gets or sets the base64 encoded value of the certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "data": {
        "description": "The maximum size is 10KB.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Gets or sets the description of the certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "format": {
        "description": "The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isExportable": {
        "description": "Gets or sets the is exportable flag of the certificate.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "password": {
        "description": "This must not be specified if the certificate format is Cer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "This must match the thumbprint from the name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprintAlgorithm": {
        "description": "This must match the first portion of the certificate name. Currently required to be 'SHA1'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "base64Value",
      "description",
      "isExportable",
      "thumbprint",
      "data",
      "password",
      "format",
      "thumbprintAlgorithm"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/diagnostics": {
    "api_version": "2019-12-01",
    "full_properties": {
      "alwaysLog": {
        "description": "Specifies for what type of messages sampling settings should not apply.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backend": {
        "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableHttpCorrelationHeaders": {
        "description": "Whether to process Correlation Headers coming to Api Management Service. Only applicable to Application Insights diagnostics. Default is true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "Indicates whether a diagnostic should receive data or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontend": {
        "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpCorrelationProtocol": {
        "description": "Sets correlation protocol to use for Application Insights diagnostics.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logClientIp": {
        "description": "Log the ClientIP. Default is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loggerId": {
        "description": "Resource Id of a target logger.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampling": {
        "description": "Sampling settings for Diagnostic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "verbosity": {
        "description": "The verbosity level applied to traces emitted by trace policies.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabled",
      "alwaysLog",
      "backend",
      "enableHttpCorrelationHeaders",
      "frontend",
      "loggerId",
      "sampling",
      "httpCorrelationProtocol",
      "verbosity",
      "logClientIp"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/diagnostics/loggers": {
    "api_version": "2018-01-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/gateways": {
    "api_version": "2019-12-01",
    "full_properties": {
      "description": {
        "description": "Gateway description",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "locationData": {
        "description": "Resource location data properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "locationData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/gateways/apis": {
    "api_version": "2019-12-01",
    "full_properties": {
      "provisioningState": {
        "description": "Provisioning state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/gateways/hostnameConfigurations": {
    "api_version": "2019-12-01",
    "full_properties": {
      "certificateId": {
        "description": "Identifier of Certificate entity that will be used for TLS connection establishment",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostname": {
        "description": "Hostname value. Supports valid domain name, partial or full wildcard",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "negotiateClientCertificate": {
        "description": "Determines whether gateway requests client certificate",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "certificateId",
      "hostname",
      "negotiateClientCertificate"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/groups": {
    "api_version": "2019-12-01",
    "full_properties": {
      "description": {
        "description": "Group description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Group name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalId": {
        "description": "Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "Group type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "displayName",
      "externalId",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/groups/users": {
    "api_version": "2019-12-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/identityProviders": {
    "api_version": "2019-12-01",
    "full_properties": {
      "allowedTenants": {
        "description": "List of Allowed Tenants when configuring Azure Active Directory login.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authority": {
        "description": "OpenID Connect discovery endpoint hostname for AAD or AAD B2C.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientId": {
        "description": "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientSecret": {
        "description": "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "passwordResetPolicyName": {
        "description": "Password Reset Policy Name. Only applies to AAD B2C Identity Provider.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "profileEditingPolicyName": {
        "description": "Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "signinPolicyName": {
        "description": "Signin Policy Name. Only applies to AAD B2C Identity Provider.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "signinTenant": {
        "description": "The TenantId to use instead of Common when logging into Active Directory",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "signupPolicyName": {
        "description": "Signup Policy Name. Only applies to AAD B2C Identity Provider.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "Identity Provider Type identifier.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allowedTenants",
      "authority",
      "clientId",
      "clientSecret",
      "passwordResetPolicyName",
      "profileEditingPolicyName",
      "signinPolicyName",
      "signinTenant",
      "signupPolicyName",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/loggers": {
    "api_version": "2019-12-01",
    "full_properties": {
      "credentials": {
        "description": "The name and SendRule connection string of the event hub for azureEventHub logger.\nInstrumentation key for applicationInsights logger.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Logger description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isBuffered": {
        "description": "Whether records are buffered in the logger before publishing. Default is assumed to be true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loggerType": {
        "description": "Logger type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampling": {
        "description": "Sampling settings contract.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "credentials",
      "description",
      "isBuffered",
      "loggerType",
      "sampling",
      "resourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/namedValues": {
    "api_version": "2019-12-01",
    "full_properties": {
      "displayName": {
        "description": "Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secret": {
        "description": "Determines whether the value is a secret and should be encrypted or not. Default value is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Optional tags that when provided can be used to filter the NamedValue list.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "secret",
      "tags",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/notifications": {
    "api_version": "2019-12-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/notifications/recipientEmails": {
    "api_version": "2019-12-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/notifications/recipientUsers": {
    "api_version": "2019-12-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/openidConnectProviders": {
    "api_version": "2019-12-01",
    "full_properties": {
      "clientId": {
        "description": "Client ID of developer console which is the client application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientSecret": {
        "description": "Client Secret of developer console which is the client application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "User-friendly description of OpenID Connect Provider.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "User-friendly OpenID Connect Provider name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadataEndpoint": {
        "description": "Metadata endpoint URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clientId",
      "clientSecret",
      "description",
      "displayName",
      "metadataEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/policies": {
    "api_version": "2019-12-01",
    "full_properties": {
      "contentFormat": {
        "description": "Format of the policyContent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "format": {
        "description": "Format of the policyContent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyContent": {
        "description": "Json escaped Xml Encoded contents of the Policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "Contents of the Policy as defined by the format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policyContent",
      "contentFormat",
      "format",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/portalsettings": {
    "api_version": "2019-12-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/products": {
    "api_version": "2019-12-01",
    "full_properties": {
      "approvalRequired": {
        "description": "whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Product description. May include HTML formatting tags.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Product name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subscriptionRequired": {
        "description": "Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as \"protected\" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as \"open\" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subscriptionsLimit": {
        "description": "Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "terms": {
        "description": "Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "approvalRequired",
      "description",
      "displayName",
      "state",
      "subscriptionRequired",
      "subscriptionsLimit",
      "terms"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/products/apis": {
    "api_version": "2019-12-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/products/groups": {
    "api_version": "2019-12-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/products/policies": {
    "api_version": "2019-12-01",
    "full_properties": {
      "contentFormat": {
        "description": "Format of the policyContent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "format": {
        "description": "Format of the policyContent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyContent": {
        "description": "Json escaped Xml Encoded contents of the Policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "Contents of the Policy as defined by the format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policyContent",
      "contentFormat",
      "format",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/products/policy": {
    "api_version": "2016-10-10",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/products/tags": {
    "api_version": "2019-12-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/properties": {
    "api_version": "2019-01-01",
    "full_properties": {
      "displayName": {
        "description": "Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secret": {
        "description": "Determines whether the value is a secret and should be encrypted or not. Default value is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Optional tags that when provided can be used to filter the property list.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "secret",
      "tags",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/subscriptions": {
    "api_version": "2019-12-01",
    "full_properties": {
      "allowTracing": {
        "description": "Determines whether tracing can be enabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Subscription name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ownerId": {
        "description": "User (user id path) for whom subscription is being created in form /users/{userId}",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "primaryKey": {
        "description": "Primary subscription key. If not specified during request key will be generated automatically.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "productId": {
        "description": "Product (product id path) for which subscription is being created in form /products/{productId}",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scope": {
        "description": "Scope like /products/{productId} or /apis or /apis/{apiId}.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secondaryKey": {
        "description": "Secondary subscription key. If not specified during request key will be generated automatically.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userId": {
        "description": "User (user id path) for whom subscription is being created in form /users/{uid}",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "primaryKey",
      "productId",
      "secondaryKey",
      "state",
      "userId",
      "allowTracing",
      "ownerId",
      "scope"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/tags": {
    "api_version": "2019-12-01",
    "full_properties": {
      "displayName": {
        "description": "Tag name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/templates": {
    "api_version": "2019-12-01",
    "full_properties": {
      "body": {
        "description": "Email Template Body. This should be a valid XDocument",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the Email Template.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Email Template Parameter values.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subject": {
        "description": "Subject of the Template.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "title": {
        "description": "Title of the Template.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "body",
      "description",
      "parameters",
      "subject",
      "title"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/tenant": {
    "api_version": "2016-10-10",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.ApiManagement/service/users": {
    "api_version": "2019-12-01",
    "full_properties": {
      "appType": {
        "description": "Determines the type of application which send the create user request. Default is old publisher portal.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "confirmation": {
        "description": "Determines the type of confirmation e-mail that will be sent to the newly created user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "email": {
        "description": "Email address. Must not be empty and must be unique within the service instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "firstName": {
        "description": "First name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "identities": {
        "description": "Collection of user identities.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastName": {
        "description": "Last name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "note": {
        "description": "Optional note about a user set by the administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "User Password. If no value is provided, a default password is generated.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "confirmation",
      "email",
      "firstName",
      "lastName",
      "note",
      "password",
      "state",
      "identities",
      "appType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppConfiguration/configurationStores": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "encryption": {
        "description": "The encryption settings for a configuration store.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "encryption",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.AppConfiguration/configurationStores/privateEndpointConnections": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "groupIds": {
        "description": "GroupIds from the private link service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring": {
    "api_version": "2019-05-01-preview",
    "full_properties": {
      "configServerProperties": {
        "description": "Config server git properties payload",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trace": {
        "description": "Trace properties payload",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "configServerProperties",
      "trace"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/apps": {
    "api_version": "2019-05-01-preview",
    "full_properties": {
      "activeDeploymentName": {
        "description": "Name of the active deployment of the App",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "fqdn": {
        "description": "Fully qualified dns Name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "httpsOnly": {
        "description": "Indicate if only https is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "persistentDisk": {
        "description": "Persistent disk payload",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "public": {
        "description": "Indicates whether the App exposes public endpoint",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "temporaryDisk": {
        "description": "Temporary disk payload",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "activeDeploymentName",
      "fqdn",
      "httpsOnly",
      "persistentDisk",
      "public",
      "temporaryDisk"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/apps/bindings": {
    "api_version": "2019-05-01-preview",
    "full_properties": {
      "bindingParameters": {
        "description": "Binding parameters of the Binding resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "key": {
        "description": "The key of the bound resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "The Azure resource id of the bound resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceName": {
        "description": "The name of the bound resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceType": {
        "description": "The standard Azure resource type of the bound resource",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "bindingParameters",
      "key",
      "resourceId",
      "resourceName",
      "resourceType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/apps/deployments": {
    "api_version": "2019-05-01-preview",
    "full_properties": {
      "deploymentSettings": {
        "description": "Deployment settings payload",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Source information for a deployment",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "deploymentSettings",
      "source"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/apps/domains": {
    "api_version": "2019-05-01-preview",
    "full_properties": {
      "appName": {
        "description": "The app name of domain.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "certName": {
        "description": "The bound certificate name of domain.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "The thumbprint of bound certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appName",
      "certName",
      "thumbprint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AppPlatform/Spring/certificates": {
    "api_version": "2019-05-01-preview",
    "full_properties": {
      "certVersion": {
        "description": "The certificate version of key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostNames": {
        "description": "Host names the certificate applies to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultCertName": {
        "description": "The certificate name of key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "Key Vault Csm resource Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultSecretName": {
        "description": "Key Vault secret name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "Certificate password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "pfxBlob": {
        "description": "Pfx blob.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serverFarmId": {
        "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vaultUri": {
        "description": "The vault uri of user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hostNames",
      "keyVaultId",
      "keyVaultSecretName",
      "password",
      "pfxBlob",
      "serverFarmId",
      "certVersion",
      "keyVaultCertName",
      "vaultUri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Attestation/attestationProviders": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "attestationPolicy": {
        "description": "Name of attestation policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policySigningCertificates": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "attestationPolicy",
      "policySigningCertificates"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Authorization/locks": {
    "api_version": "2016-09-01",
    "full_properties": {
      "level": {
        "description": "Microsoft.Authorization/locks: level - specifies the type of lock to apply to the scope.  CanNotDelete allows modification but prevents deletion, ReadOnly prevents modification or deletion.",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "notes": {
        "description": "Microsoft.Authorization/locks: notes - user defined notes for the lock",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "level",
      "notes"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Authorization/policyAssignments": {
    "api_version": "2019-09-01",
    "full_properties": {
      "description": {
        "description": "This message will be part of response in case of policy violation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name of the policy assignment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enforcementMode": {
        "description": "The policy assignment enforcement mode. Possible values are Default and DoNotEnforce. DoNotEnforce indicates that the policy should evaluate but not take action (i.e. not deny or append).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The policy assignment metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notScopes": {
        "description": "The policy's excluded scopes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Required if a parameter is used in policy rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyDefinitionId": {
        "description": "The ID of the policy definition or policy set definition being assigned.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scope": {
        "description": "The scope for the policy assignment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "policyDefinitionId",
      "scope",
      "notScopes",
      "parameters",
      "description",
      "metadata",
      "enforcementMode"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Authorization/policyDefinitions": {
    "api_version": "2019-09-01",
    "full_properties": {
      "description": {
        "description": "The policy definition description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name of the policy definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The policy definition metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mode": {
        "description": "The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Required if a parameter is used in policy rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyRule": {
        "description": "The policy rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyType": {
        "description": "The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policyType",
      "mode",
      "displayName",
      "description",
      "policyRule",
      "metadata",
      "parameters"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Authorization/policySetDefinitions": {
    "api_version": "2019-09-01",
    "full_properties": {
      "description": {
        "description": "The policy set definition description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name of the policy set definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The policy set definition metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "The policy set definition parameters that can be used in policy definition references.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyDefinitionGroups": {
        "description": "An array of groups that policy definitions within this policy set definition can reside in. These groups can be used when aggregating compliance results for this policy set definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyDefinitions": {
        "description": "An array of policy definition references.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyType": {
        "description": "The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policyType",
      "displayName",
      "description",
      "metadata",
      "parameters",
      "policyDefinitions",
      "policyDefinitionGroups"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Authorization/roleAssignments": {
    "api_version": "2017-09-01",
    "full_properties": {
      "principalId": {
        "description": "Microsoft.Authorization/roleAssignments: principalId - specifies the principal Id.  This maps to the id inside the directory and can point to a user, service principal, or security group",
        "required": true,
        "type": "string",
        "update_causes": "unknown"
      },
      "roleDefinitionId": {
        "description": "Microsoft.Authorization/roleAssignments: roleDefinitionId - id of the role to be used in the role assignment",
        "required": true,
        "type": "string",
        "update_causes": "unknown"
      },
      "scope": {
        "description": "Microsoft.Authorization/roleAssignments: scope - specifies the scope at which this role assignment applies to",
        "required": true,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "roleDefinitionId",
      "principalId",
      "scope"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Authorization/roleDefinitions": {
    "api_version": "2017-09-01",
    "full_properties": {
      "assignableScopes": {
        "description": "Role definition assignable scopes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The role definition description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "permissions": {
        "description": "Role definition permissions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "roleName": {
        "description": "The role name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "The role type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "roleName",
      "description",
      "type",
      "permissions",
      "assignableScopes"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Automation/automationAccounts": {
    "api_version": "2015-10-31",
    "full_properties": {
      "sku": {
        "description": "The account SKU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "sku"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/certificates": {
    "api_version": "2015-10-31",
    "full_properties": {
      "base64Value": {
        "description": "Gets or sets the base64 encoded value of the certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "data": {
        "description": "The maximum size is 10KB.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Gets or sets the description of the certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "format": {
        "description": "The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isExportable": {
        "description": "Gets or sets the is exportable flag of the certificate.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "password": {
        "description": "This must not be specified if the certificate format is Cer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "This must match the thumbprint from the name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprintAlgorithm": {
        "description": "This must match the first portion of the certificate name. Currently required to be 'SHA1'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "base64Value",
      "description",
      "isExportable",
      "thumbprint",
      "data",
      "password",
      "format",
      "thumbprintAlgorithm"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/compilationjobs": {
    "api_version": "2018-01-15",
    "full_properties": {
      "configuration": {
        "description": "The Dsc configuration property associated with the entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "incrementNodeConfigurationBuild": {
        "description": "If a new build version of NodeConfiguration is required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Gets or sets the parameters of the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "configuration",
      "incrementNodeConfigurationBuild",
      "parameters"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/configurations": {
    "api_version": "2015-10-31",
    "full_properties": {
      "description": {
        "description": "Gets or sets the description of the configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logProgress": {
        "description": "Gets or sets progress log option.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logVerbose": {
        "description": "Gets or sets verbose log option.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Gets or sets the configuration parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Definition of the content source.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "logProgress",
      "logVerbose",
      "parameters",
      "source"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/connectionTypes": {
    "api_version": "2015-10-31",
    "full_properties": {
      "fieldDefinitions": {
        "description": "Gets or sets the field definitions of the connection type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isGlobal": {
        "description": "Gets or sets a Boolean value to indicate if the connection type is global.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "fieldDefinitions",
      "isGlobal"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/connections": {
    "api_version": "2015-10-31",
    "full_properties": {
      "connectionType": {
        "description": "The connection type property associated with the entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Gets or sets the description of the connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "fieldDefinitionValues": {
        "description": "Gets or sets the field definition properties of the connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "connectionType",
      "description",
      "fieldDefinitionValues"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/credentials": {
    "api_version": "2015-10-31",
    "full_properties": {
      "description": {
        "description": "Gets or sets the description of the credential.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "Gets or sets the password of the credential.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userName": {
        "description": "Gets or sets the user name of the credential.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "password",
      "userName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/jobSchedules": {
    "api_version": "2015-10-31",
    "full_properties": {
      "parameters": {
        "description": "Gets or sets a list of job properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "runOn": {
        "description": "Gets or sets the hybrid worker group that the scheduled job should run on.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runbook": {
        "description": "The runbook property associated with the entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedule": {
        "description": "The schedule property associated with the entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "parameters",
      "runbook",
      "runOn",
      "schedule"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/jobs": {
    "api_version": "2017-05-15-preview",
    "full_properties": {
      "parameters": {
        "description": "Gets or sets the parameters of the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "runOn": {
        "description": "Gets or sets the runOn which specifies the group name where the job is to be executed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runbook": {
        "description": "The runbook property associated with the entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "parameters",
      "runbook",
      "runOn"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/modules": {
    "api_version": "2015-10-31",
    "full_properties": {
      "contentLink": {
        "description": "Definition of the content link.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contentLink"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/nodeConfigurations": {
    "api_version": "2018-01-15",
    "full_properties": {
      "configuration": {
        "description": "The Dsc configuration property associated with the entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "incrementNodeConfigurationBuild": {
        "description": "If a new build version of NodeConfiguration is required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Definition of the content source.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "configuration",
      "incrementNodeConfigurationBuild",
      "source"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/privateEndpointConnections": {
    "api_version": "2020-01-13-preview",
    "full_properties": {
      "groupIds": {
        "description": "GroupIds from the private link service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/python2Packages": {
    "api_version": "2018-06-30",
    "full_properties": {
      "contentLink": {
        "description": "Definition of the content link.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contentLink"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/runbooks": {
    "api_version": "2018-06-30",
    "full_properties": {
      "description": {
        "description": "Gets or sets the description of the runbook.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "draft": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logActivityTrace": {
        "description": "Gets or sets the activity-level tracing options of the runbook.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logProgress": {
        "description": "Gets or sets progress log option.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logVerbose": {
        "description": "Gets or sets verbose log option.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publishContentLink": {
        "description": "Definition of the content link.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "runbookType": {
        "description": "Gets or sets the type of the runbook.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "draft",
      "logActivityTrace",
      "logProgress",
      "logVerbose",
      "publishContentLink",
      "runbookType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/runbooks/draft": {
    "api_version": "2018-06-30",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/schedules": {
    "api_version": "2015-10-31",
    "full_properties": {
      "advancedSchedule": {
        "description": "The properties of the create Advanced Schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Gets or sets the description of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expiryTime": {
        "description": "Gets or sets the end time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "frequency": {
        "description": "Gets or sets the frequency of the schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "interval": {
        "description": "Gets or sets the interval of the schedule.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Gets or sets the start time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZone": {
        "description": "Gets or sets the time zone of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "advancedSchedule",
      "description",
      "expiryTime",
      "frequency",
      "interval",
      "startTime",
      "timeZone"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/softwareUpdateConfigurations": {
    "api_version": "2017-05-15-preview",
    "full_properties": {
      "error": {
        "description": "Error response of an operation failure",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scheduleInfo": {
        "description": "Definition of schedule parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tasks": {
        "description": "Task properties of the software update configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "updateConfiguration": {
        "description": "Update specific properties of the software update configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "error",
      "scheduleInfo",
      "tasks",
      "updateConfiguration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/sourceControls": {
    "api_version": "2017-05-15-preview",
    "full_properties": {
      "autoSync": {
        "description": "The auto async of the source control. Default is false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "branch": {
        "description": "The repo branch of the source control. Include branch as empty string for VsoTfvc.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The user description of the source control.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "folderPath": {
        "description": "The folder path of the source control. Path must be relative.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishRunbook": {
        "description": "The auto publish of the source control. Default is true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "repoUrl": {
        "description": "The repo url of the source control.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "securityToken": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceType": {
        "description": "The source type. Must be one of VsoGit, VsoTfvc, GitHub, case sensitive.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoSync",
      "branch",
      "description",
      "folderPath",
      "publishRunbook",
      "repoUrl",
      "securityToken",
      "sourceType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/sourceControls/sourceControlSyncJobs": {
    "api_version": "2017-05-15-preview",
    "full_properties": {
      "commitId": {
        "description": "The commit id of the source control sync job. If not syncing to a commitId, enter an empty string.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "commitId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/variables": {
    "api_version": "2015-10-31",
    "full_properties": {
      "description": {
        "description": "Gets or sets the description of the variable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isEncrypted": {
        "description": "Gets or sets the encrypted flag of the variable.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "value": {
        "description": "Gets or sets the value of the variable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "isEncrypted",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/watchers": {
    "api_version": "2015-10-31",
    "full_properties": {
      "description": {
        "description": "Gets or sets the description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "executionFrequencyInSeconds": {
        "description": "Gets or sets the frequency at which the watcher is invoked.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scriptName": {
        "description": "Gets or sets the name of the script the watcher is attached to, i.e. the name of an existing runbook.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scriptParameters": {
        "description": "Gets or sets the parameters of the script.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scriptRunOn": {
        "description": "Gets or sets the name of the hybrid worker group the watcher will run on.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "executionFrequencyInSeconds",
      "scriptName",
      "scriptParameters",
      "scriptRunOn"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Automation/automationAccounts/webhooks": {
    "api_version": "2015-10-31",
    "full_properties": {
      "expiryTime": {
        "description": "Gets or sets the expiry time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Gets or sets the value of the enabled flag of webhook.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Gets or sets the parameters of the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "runOn": {
        "description": "Gets or sets the name of the hybrid worker group the webhook job will run on.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runbook": {
        "description": "The runbook property associated with the entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uri": {
        "description": "Gets or sets the uri.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "expiryTime",
      "isEnabled",
      "parameters",
      "runbook",
      "runOn",
      "uri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureData/hybridDataManagers": {
    "api_version": "2019-07-24-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.AzureData/postgresInstances": {
    "api_version": "2019-07-24-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.AzureData/sqlInstances": {
    "api_version": "2019-07-24-preview",
    "full_properties": {
      "hybridDataManagerId": {
        "description": "null",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hybridDataManagerId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureData/sqlServerRegistrations": {
    "api_version": "2019-07-24-preview",
    "full_properties": {
      "propertyBag": {
        "description": "Optional Properties as JSON string",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceGroup": {
        "description": "Resource Group Name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subscriptionId": {
        "description": "Subscription Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "propertyBag",
      "resourceGroup",
      "subscriptionId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureData/sqlServerRegistrations/sqlServers": {
    "api_version": "2019-07-24-preview",
    "full_properties": {
      "cores": {
        "description": "Cores of the Sql Server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "edition": {
        "description": "Sql Server Edition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "propertyBag": {
        "description": "Sql Server Json Property Bag.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "registrationID": {
        "description": "ID for Parent Sql Server Registration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "version": {
        "description": "Version of the Sql Server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cores",
      "edition",
      "propertyBag",
      "registrationID",
      "version"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureStack/registrations": {
    "api_version": "2017-06-01",
    "full_properties": {
      "registrationToken": {
        "description": "The token identifying registered Azure Stack",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "registrationToken"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.AzureStack/registrations/customerSubscriptions": {
    "api_version": "2017-06-01",
    "full_properties": {
      "tenantId": {
        "description": "Tenant Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BareMetal/crayServers": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "ipAddress": {
        "description": "Ip Address.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subnetResourceId": {
        "description": "Subnet resource ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ipAddress",
      "subnetResourceId"
    ],
    "required": [
      "name",
      "type",
      "location",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Batch/batchAccounts": {
    "api_version": "2020-03-01",
    "full_properties": {
      "autoStorage": {
        "description": "The properties related to the auto-storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultReference": {
        "description": "Identifies the Azure key vault associated with a Batch account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "poolAllocationMode": {
        "description": "The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "If not specified, the default value is 'enabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoStorage",
      "keyVaultReference",
      "poolAllocationMode",
      "encryption",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Batch/batchAccounts/applications": {
    "api_version": "2020-03-01",
    "full_properties": {
      "allowUpdates": {
        "description": "A value indicating whether packages within the application may be overwritten using the same version string.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationType": {
        "description": "The application type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "computeProfile": {
        "description": "Describes the compute profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultVersion": {
        "description": "The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name for the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "errors": {
        "description": "The list of errors.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpsEndpoints": {
        "description": "The list of application HTTPS endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "installScriptActions": {
        "description": "The list of install script actions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sshEndpoints": {
        "description": "The list of application SSH endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uninstallScriptActions": {
        "description": "The list of uninstall script actions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationType",
      "computeProfile",
      "errors",
      "httpsEndpoints",
      "installScriptActions",
      "sshEndpoints",
      "uninstallScriptActions",
      "allowUpdates",
      "defaultVersion",
      "displayName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Batch/batchAccounts/applications/versions": {
    "api_version": "2020-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Batch/batchAccounts/certificates": {
    "api_version": "2020-03-01",
    "full_properties": {
      "base64Value": {
        "description": "Gets or sets the base64 encoded value of the certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "data": {
        "description": "The maximum size is 10KB.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "Gets or sets the description of the certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "format": {
        "description": "The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isExportable": {
        "description": "Gets or sets the is exportable flag of the certificate.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "password": {
        "description": "This must not be specified if the certificate format is Cer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "This must match the thumbprint from the name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "thumbprintAlgorithm": {
        "description": "This must match the first portion of the certificate name. Currently required to be 'SHA1'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "base64Value",
      "description",
      "isExportable",
      "thumbprint",
      "data",
      "password",
      "format",
      "thumbprintAlgorithm"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Batch/batchAccounts/pools": {
    "api_version": "2020-03-01",
    "full_properties": {
      "applicationLicenses": {
        "description": "The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationPackages": {
        "description": "Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificates": {
        "description": "For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deploymentConfiguration": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "interNodeCommunication": {
        "description": "This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxTasksPerNode": {
        "description": "The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The Batch service does not assign any meaning to metadata; it is solely for the use of user code.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mountConfiguration": {
        "description": "This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkConfiguration": {
        "description": "The network configuration for a pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleSettings": {
        "description": "Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceLevel": {
        "description": "The service level of the file system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "size": {
        "description": "Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTask": {
        "description": "In some cases the start task may be re-run even though the node was not rebooted. Due to this, start tasks should be idempotent and exit gracefully if the setup they're performing has already been done. Special care should be taken to avoid start tasks which create breakaway process or install/launch services from the start task working directory, as this will block Batch from being able to re-run the start task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "taskSchedulingPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userAccounts": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "serviceLevel",
      "size",
      "applicationLicenses",
      "applicationPackages",
      "certificates",
      "deploymentConfiguration",
      "displayName",
      "interNodeCommunication",
      "maxTasksPerNode",
      "metadata",
      "networkConfiguration",
      "scaleSettings",
      "startTask",
      "taskSchedulingPolicy",
      "userAccounts",
      "vmSize",
      "mountConfiguration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BatchAI/clusters": {
    "api_version": "2018-03-01",
    "full_properties": {
      "nodeSetup": {
        "description": "Node setup settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleSettings": {
        "description": "At least one of manual or autoScale settings must be specified. Only one of manual or autoScale settings can be specified. If autoScale settings are specified, the system automatically scales the cluster up and down (within the supplied limits) based on the pending jobs on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userAccountSettings": {
        "description": "Settings for user account that gets created on each on the nodes of a cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachineConfiguration": {
        "description": "VM configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmPriority": {
        "description": "VM priority. Allowed values are: dedicated (default) and lowpriority.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "The size of the virtual machines in the cluster. All nodes in a cluster have the same VM size. For information about available VM sizes for clusters using images from the Virtual Machines Marketplace see Sizes for Virtual Machines (Linux). Batch AI service supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "nodeSetup",
      "scaleSettings",
      "subnet",
      "userAccountSettings",
      "virtualMachineConfiguration",
      "vmPriority",
      "vmSize"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BatchAI/fileServers": {
    "api_version": "2018-03-01",
    "full_properties": {
      "dataDisks": {
        "description": "Data disks settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sshConfiguration": {
        "description": "SSH configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "The size of the virtual machine for the File Server. For information about available VM sizes from the Virtual Machines Marketplace, see Sizes for Virtual Machines (Linux).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataDisks",
      "sshConfiguration",
      "subnet",
      "vmSize"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BatchAI/jobs": {
    "api_version": "2018-03-01",
    "full_properties": {
      "caffe2Settings": {
        "description": "Caffe2 job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caffeSettings": {
        "description": "Caffe job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "chainerSettings": {
        "description": "Chainer job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cluster": {
        "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cntkSettings": {
        "description": "CNTK (aka Microsoft Cognitive Toolkit) job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "constraints": {
        "description": "Constraints associated with the Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerSettings": {
        "description": "Docker container settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customMpiSettings": {
        "description": "Custom MPI job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customToolkitSettings": {
        "description": "Custom tool kit job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentVariables": {
        "description": "A list of user defined environment variables which will be setup for the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "experimentName": {
        "description": "Describe the experiment information of the job",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "horovodSettings": {
        "description": "Specifies the settings for Horovod job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputDirectories": {
        "description": "A list of input directories for the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "jobPreparation": {
        "description": "Job preparation settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mountVolumes": {
        "description": "Details of volumes to mount on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeCount": {
        "description": "Number of compute nodes to run the job on. The job will be gang scheduled on that many compute nodes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputDirectories": {
        "description": "A list of output directories for the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority associated with the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "pyTorchSettings": {
        "description": "pyTorch job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedulingPriority": {
        "description": "Scheduling priority associated with the job. Possible values: low, normal, high.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secrets": {
        "description": "A list of user defined environment variables with secret values which will be setup for the job. Server will never report values of these variables back.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stdOutErrPathPrefix": {
        "description": "The path where the Batch AI service will store stdout, stderror and execution log of the job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tensorFlowSettings": {
        "description": "TensorFlow job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "caffe2Settings",
      "caffeSettings",
      "chainerSettings",
      "cluster",
      "cntkSettings",
      "constraints",
      "containerSettings",
      "customToolkitSettings",
      "environmentVariables",
      "experimentName",
      "inputDirectories",
      "jobPreparation",
      "nodeCount",
      "outputDirectories",
      "priority",
      "stdOutErrPathPrefix",
      "tensorFlowSettings",
      "mountVolumes",
      "pyTorchSettings",
      "secrets",
      "customMpiSettings",
      "horovodSettings",
      "schedulingPriority"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BatchAI/workspaces": {
    "api_version": "2018-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "type"
    ]
  },
  "Microsoft.BatchAI/workspaces/clusters": {
    "api_version": "2018-05-01",
    "full_properties": {
      "nodeSetup": {
        "description": "Node setup settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleSettings": {
        "description": "At least one of manual or autoScale settings must be specified. Only one of manual or autoScale settings can be specified. If autoScale settings are specified, the system automatically scales the cluster up and down (within the supplied limits) based on the pending jobs on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userAccountSettings": {
        "description": "Settings for user account that gets created on each on the nodes of a cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachineConfiguration": {
        "description": "VM configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmPriority": {
        "description": "VM priority. Allowed values are: dedicated (default) and lowpriority.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "The size of the virtual machines in the cluster. All nodes in a cluster have the same VM size. For information about available VM sizes for clusters using images from the Virtual Machines Marketplace see Sizes for Virtual Machines (Linux). Batch AI service supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "nodeSetup",
      "scaleSettings",
      "subnet",
      "userAccountSettings",
      "virtualMachineConfiguration",
      "vmPriority",
      "vmSize"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BatchAI/workspaces/experiments": {
    "api_version": "2018-05-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.BatchAI/workspaces/experiments/jobs": {
    "api_version": "2018-05-01",
    "full_properties": {
      "caffe2Settings": {
        "description": "Caffe2 job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caffeSettings": {
        "description": "Caffe job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "chainerSettings": {
        "description": "Chainer job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cluster": {
        "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cntkSettings": {
        "description": "CNTK (aka Microsoft Cognitive Toolkit) job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "constraints": {
        "description": "Constraints associated with the Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerSettings": {
        "description": "Docker container settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customMpiSettings": {
        "description": "Custom MPI job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customToolkitSettings": {
        "description": "Custom tool kit job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentVariables": {
        "description": "A list of user defined environment variables which will be setup for the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "experimentName": {
        "description": "Describe the experiment information of the job",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "horovodSettings": {
        "description": "Specifies the settings for Horovod job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputDirectories": {
        "description": "A list of input directories for the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "jobPreparation": {
        "description": "Job preparation settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mountVolumes": {
        "description": "Details of volumes to mount on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeCount": {
        "description": "Number of compute nodes to run the job on. The job will be gang scheduled on that many compute nodes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputDirectories": {
        "description": "A list of output directories for the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority associated with the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "pyTorchSettings": {
        "description": "pyTorch job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedulingPriority": {
        "description": "Scheduling priority associated with the job. Possible values: low, normal, high.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secrets": {
        "description": "A list of user defined environment variables with secret values which will be setup for the job. Server will never report values of these variables back.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stdOutErrPathPrefix": {
        "description": "The path where the Batch AI service will store stdout, stderror and execution log of the job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tensorFlowSettings": {
        "description": "TensorFlow job settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "caffe2Settings",
      "caffeSettings",
      "chainerSettings",
      "cluster",
      "cntkSettings",
      "constraints",
      "containerSettings",
      "customToolkitSettings",
      "environmentVariables",
      "experimentName",
      "inputDirectories",
      "jobPreparation",
      "nodeCount",
      "outputDirectories",
      "priority",
      "stdOutErrPathPrefix",
      "tensorFlowSettings",
      "mountVolumes",
      "pyTorchSettings",
      "secrets",
      "customMpiSettings",
      "horovodSettings",
      "schedulingPriority"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BatchAI/workspaces/fileServers": {
    "api_version": "2018-05-01",
    "full_properties": {
      "dataDisks": {
        "description": "Data disks settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sshConfiguration": {
        "description": "SSH configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "The size of the virtual machine for the File Server. For information about available VM sizes from the Virtual Machines Marketplace, see Sizes for Virtual Machines (Linux).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataDisks",
      "sshConfiguration",
      "subnet",
      "vmSize"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Blockchain/blockchainMembers": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "consortium": {
        "description": "Gets or sets the consortium for the blockchain member.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "consortiumManagementAccountPassword": {
        "description": "Sets the managed consortium management account password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "consortiumMemberDisplayName": {
        "description": "Gets the display name of the member in the consortium.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "consortiumRole": {
        "description": "Gets the role of the member in the consortium.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "firewallRules": {
        "description": "Gets or sets firewall rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "password": {
        "description": "Sets the basic auth password of the blockchain member.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protocol": {
        "description": "Gets or sets the blockchain protocol.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "validatorNodesSku": {
        "description": "Payload of the blockchain member nodes Sku for a blockchain member.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "consortium",
      "consortiumManagementAccountPassword",
      "consortiumMemberDisplayName",
      "consortiumRole",
      "firewallRules",
      "password",
      "protocol",
      "validatorNodesSku"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Blockchain/blockchainMembers/transactionNodes": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "firewallRules": {
        "description": "Gets or sets the firewall rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "password": {
        "description": "Sets the transaction node dns endpoint basic auth password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "firewallRules",
      "password"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BotService/botServices": {
    "api_version": "2018-07-12",
    "full_properties": {
      "description": {
        "description": "The description of the bot",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "developerAppInsightKey": {
        "description": "The Application Insights key",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "developerAppInsightsApiKey": {
        "description": "The Application Insights Api Key",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "developerAppInsightsApplicationId": {
        "description": "The Application Insights App Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The Name of the bot",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endpoint": {
        "description": "The bot's endpoint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "iconUrl": {
        "description": "The Icon Url of the bot",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "luisAppIds": {
        "description": "Collection of LUIS App Ids",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "luisKey": {
        "description": "The LUIS Key",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "msaAppId": {
        "description": "Microsoft App Id for the bot",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "developerAppInsightKey",
      "developerAppInsightsApiKey",
      "developerAppInsightsApplicationId",
      "displayName",
      "endpoint",
      "iconUrl",
      "luisAppIds",
      "luisKey",
      "msaAppId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BotService/botServices/Connections": {
    "api_version": "2018-07-12",
    "full_properties": {
      "clientId": {
        "description": "Client Id associated with the Connection Setting.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clientSecret": {
        "description": "Client Secret associated with the Connection Setting",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Service Provider Parameters associated with the Connection Setting",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scopes": {
        "description": "Scopes associated with the Connection Setting",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceProviderDisplayName": {
        "description": "Service Provider Display Name associated with the Connection Setting",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceProviderId": {
        "description": "Service Provider Id associated with the Connection Setting",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clientId",
      "clientSecret",
      "parameters",
      "scopes",
      "serviceProviderDisplayName",
      "serviceProviderId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BotService/botServices/channels": {
    "api_version": "2018-07-12",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.BotService/enterpriseChannels": {
    "api_version": "2018-07-12",
    "full_properties": {
      "nodes": {
        "description": "The nodes associated with the Enterprise Channel.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "The current state of the Enterprise Channel.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "nodes",
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cache/Redis": {
    "api_version": "2019-07-01",
    "full_properties": {
      "enableNonSslPort": {
        "description": "Microsoft.Cache/Redis enableNonSslPort. Enables less secure direct access to redis on port 6379 WITHOUT SSL tunneling.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxMemoryPolicy": {
        "description": "Microsoft.Cache/Redis: maxMemoryPolicy. How Redis will select what to remove when maxmemory is reached. Default: VolatileLRU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "redisVersion": {
        "description": "Microsoft.Cache/Redis: version of Redis",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Microsoft.Cache/Redis: sku",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "sku",
      "redisVersion",
      "maxMemoryPolicy",
      "enableNonSslPort"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cache/Redis/firewallRules": {
    "api_version": "2019-07-01",
    "full_properties": {
      "endIP": {
        "description": "highest IP address included in the range",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIP": {
        "description": "lowest IP address included in the range",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIP",
      "startIP"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cache/Redis/linkedServers": {
    "api_version": "2019-07-01",
    "full_properties": {
      "linkedRedisCacheId": {
        "description": "Fully qualified resourceId of the linked redis cache.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "linkedRedisCacheLocation": {
        "description": "Location of the linked redis cache.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverRole": {
        "description": "Role of the linked server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "linkedRedisCacheId",
      "linkedRedisCacheLocation",
      "serverRole"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cache/Redis/patchSchedules": {
    "api_version": "2019-07-01",
    "full_properties": {
      "scheduleEntries": {
        "description": "List of patch schedules for a Redis cache.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "scheduleEntries"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cdn/CdnWebApplicationFirewallPolicies": {
    "api_version": "2019-06-15",
    "full_properties": {
      "customRules": {
        "description": "Defines contents of custom rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedRules": {
        "description": "Defines the list of managed rule sets for the policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policySettings": {
        "description": "Defines contents of a web application firewall global configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rateLimitRules": {
        "description": "Defines contents of rate limit rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customRules",
      "managedRules",
      "policySettings",
      "rateLimitRules"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles": {
    "api_version": "2019-12-31",
    "full_properties": {
      "dnsConfig": {
        "description": "The DNS settings of the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledState": {
        "description": "The state of the Experiment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpoints": {
        "description": "The list of endpoints in the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxReturn": {
        "description": "Maximum number of endpoints to be returned for MultiValue routing type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitorConfig": {
        "description": "The endpoint monitoring settings of the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "profileStatus": {
        "description": "The status of the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trafficRoutingMethod": {
        "description": "The traffic routing method of the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trafficViewEnrollmentStatus": {
        "description": "Indicates whether Traffic View is 'Enabled' or 'Disabled' for the Traffic Manager profile. Null, indicates 'Disabled'. Enabling this feature will increase the cost of the Traffic Manage profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "profileStatus",
      "trafficRoutingMethod",
      "dnsConfig",
      "monitorConfig",
      "endpoints",
      "trafficViewEnrollmentStatus",
      "maxReturn",
      "enabledState",
      "resourceState"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/endpoints": {
    "api_version": "2019-12-31",
    "full_properties": {
      "contentTypesToCompress": {
        "description": "List of content types on which compression applies. The value should be a valid MIME type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customHeaders": {
        "description": "List of custom headers.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultOriginGroup": {
        "description": "Reference to another resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryPolicy": {
        "description": "A policy that specifies the delivery rules to be used for an endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpointLocation": {
        "description": "Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endpointMonitorStatus": {
        "description": "The monitoring status of the endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpointStatus": {
        "description": "The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "geoFilters": {
        "description": "List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "geoMapping": {
        "description": "The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isCompressionEnabled": {
        "description": "Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isHttpAllowed": {
        "description": "Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isHttpsAllowed": {
        "description": "Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minChildEndpoints": {
        "description": "The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "The name of the endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "optimizationType": {
        "description": "Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "originGroups": {
        "description": "The origin groups comprising of origins that are used for load balancing the traffic based on availability.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "originHostHeader": {
        "description": "The host header value sent to the origin with each request. This property at Endpoint can only be set allowed when endpoint uses single origin. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "originPath": {
        "description": "A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "origins": {
        "description": "The source of the content being delivered via CDN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "port": {
        "description": "Port used by the container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "probePath": {
        "description": "Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "queryStringCachingBehavior": {
        "description": "Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnets": {
        "description": "The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "target": {
        "description": "The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetResourceId": {
        "description": "The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "webApplicationFirewallPolicyLink": {
        "description": "Defines the Web Application Firewall policy for the endpoint (if applicable)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weight": {
        "description": "The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contentTypesToCompress",
      "geoFilters",
      "isCompressionEnabled",
      "isHttpAllowed",
      "isHttpsAllowed",
      "optimizationType",
      "originHostHeader",
      "originPath",
      "origins",
      "queryStringCachingBehavior",
      "probePath",
      "deliveryPolicy",
      "targetResourceId",
      "target",
      "endpointStatus",
      "weight",
      "priority",
      "endpointLocation",
      "endpointMonitorStatus",
      "minChildEndpoints",
      "geoMapping",
      "subnets",
      "customHeaders",
      "name",
      "port",
      "webApplicationFirewallPolicyLink",
      "defaultOriginGroup",
      "originGroups"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/endpoints/customDomains": {
    "api_version": "2019-12-31",
    "full_properties": {
      "hostName": {
        "description": "The host name of the custom domain. Must be a domain name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hostName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/endpoints/originGroups": {
    "api_version": "2019-12-31",
    "full_properties": {
      "healthProbeSettings": {
        "description": "The JSON object that contains the properties to send health probes to origin.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "origins": {
        "description": "The source of the content being delivered via CDN within given origin group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "responseBasedOriginErrorDetectionSettings": {
        "description": "The JSON object that contains the properties to determine origin health using real requests/responses.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trafficRestorationTimeToHealedOrNewEndpointsInMinutes": {
        "description": "Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "healthProbeSettings",
      "origins",
      "responseBasedOriginErrorDetectionSettings",
      "trafficRestorationTimeToHealedOrNewEndpointsInMinutes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Cdn/profiles/endpoints/origins": {
    "api_version": "2019-12-31",
    "full_properties": {
      "enabled": {
        "description": "Origin is enabled for load balancing or not",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostName": {
        "description": "The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "httpPort": {
        "description": "The value of the HTTP port. Must be between 1 and 65535.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpsPort": {
        "description": "The value of the HTTPS port. Must be between 1 and 65535.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "originHostHeader": {
        "description": "The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. If endpoint uses multiple origins for load balancing, then the host header at endpoint is ignored and this one is considered.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weight": {
        "description": "Weight of the origin in given origin group for load balancing. Must be between 1 and 1000",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabled",
      "hostName",
      "httpPort",
      "httpsPort",
      "originHostHeader",
      "priority",
      "weight"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.CertificateRegistration/certificateOrders": {
    "api_version": "2015-08-01",
    "full_properties": {
      "autoRenew": {
        "description": "Auto renew",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificates": {
        "description": "State of the Key Vault secret",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "csr": {
        "description": "Last CSR that was created for this order",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "distinguishedName": {
        "description": "Certificate distinguished name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainVerificationToken": {
        "description": "Domain Verification Token",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expirationTime": {
        "description": "Certificate expiration time",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "intermediate": {
        "description": "Intermediate certificate",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keySize": {
        "description": "Certificate Key Size",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastCertificateIssuanceTime": {
        "description": "Certificate last issuance time",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "productType": {
        "description": "Certificate product type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Status of certificate order.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "root": {
        "description": "Root certificate",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serialNumber": {
        "description": "Current serial number of the certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "signedCertificate": {
        "description": "Signed certificate",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Current order status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "validityInYears": {
        "description": "Duration in years (must be between 1 and 3)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "certificates",
      "distinguishedName",
      "domainVerificationToken",
      "validityInYears",
      "keySize",
      "productType",
      "autoRenew",
      "provisioningState",
      "status",
      "signedCertificate",
      "csr",
      "intermediate",
      "root",
      "serialNumber",
      "lastCertificateIssuanceTime",
      "expirationTime"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.CertificateRegistration/certificateOrders/certificates": {
    "api_version": "2015-08-01",
    "full_properties": {
      "keyVaultId": {
        "description": "Key Vault Csm resource Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultSecretName": {
        "description": "Key Vault secret name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Status of the Key Vault secret.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "keyVaultId",
      "keyVaultSecretName",
      "provisioningState"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.CognitiveServices/accounts": {
    "api_version": "2017-04-18",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.CognitiveServices/accounts/privateEndpointConnections": {
    "api_version": "2017-04-18",
    "full_properties": {
      "groupIds": {
        "description": "GroupIds from the private link service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Compute/availabilitySets": {
    "api_version": "2019-07-01",
    "full_properties": {
      "platformFaultDomainCount": {
        "description": "Microsoft.Compute/availabilitySets - Platform fault domain count",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "platformUpdateDomainCount": {
        "description": "Microsoft.Compute/availabilitySets - Platform update domain count",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "platformUpdateDomainCount",
      "platformFaultDomainCount"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Compute/diskEncryptionSets": {
    "api_version": "2019-07-01",
    "full_properties": {
      "activeKey": {
        "description": "The key vault key which is currently used by this disk encryption set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "activeKey"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Compute/disks": {
    "api_version": "2019-07-01",
    "full_properties": {
      "accountType": {
        "description": "the storage account type of the disk.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationData": {
        "description": "Disk source information. CreationData information cannot be changed after the disk has been created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskBlobName": {
        "description": "When backed by a blob, the name of the VHD blob without extension.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskIOPSReadWrite": {
        "description": "The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskMBpsReadWrite": {
        "description": "The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskSizeGB": {
        "description": "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskSizeGiB": {
        "description": "The size of the disk in GibiBytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskType": {
        "description": "The storage type for the disk (i.e. Standard, Premium).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskUri": {
        "description": "When backed by a blob, the URI of underlying blob.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettings": {
        "description": "Encryption settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettingsCollection": {
        "description": "Encryption settings collection used for Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostCaching": {
        "description": "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hyperVGeneration": {
        "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "leasedByLabVmId": {
        "description": "The resource ID of the VM to which this disk is leased.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedDiskId": {
        "description": "When backed by managed disk, this is the ID of the compute disk resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The Operating System type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accountType",
      "osType",
      "creationData",
      "diskSizeGB",
      "encryptionSettings",
      "diskBlobName",
      "diskSizeGiB",
      "diskType",
      "diskUri",
      "hostCaching",
      "leasedByLabVmId",
      "managedDiskId",
      "provisioningState",
      "uniqueIdentifier",
      "diskIOPSReadWrite",
      "diskMBpsReadWrite",
      "hyperVGeneration",
      "encryptionSettingsCollection",
      "encryption"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Compute/galleries": {
    "api_version": "2019-07-01",
    "full_properties": {
      "description": {
        "description": "The description of this Shared Image Gallery resource. This property is updatable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "identifier": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "identifier"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Compute/galleries/applications": {
    "api_version": "2019-07-01",
    "full_properties": {
      "description": {
        "description": "The description of this gallery Application Definition resource. This property is updatable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endOfLifeDate": {
        "description": "The end of life date of the gallery Application Definition. This property can be used for decommissioning purposes. This property is updatable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "eula": {
        "description": "The Eula agreement for the gallery Application Definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privacyStatementUri": {
        "description": "The privacy statement uri.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "releaseNoteUri": {
        "description": "The release note uri.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "supportedOSType": {
        "description": "This property allows you to specify the supported type of the OS that application is built for. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "eula",
      "privacyStatementUri",
      "releaseNoteUri",
      "endOfLifeDate",
      "supportedOSType"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Compute/galleries/applications/versions": {
    "api_version": "2019-07-01",
    "full_properties": {
      "publishingProfile": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publishingProfile"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Compute/galleries/images": {
    "api_version": "2019-07-01",
    "full_properties": {
      "description": {
        "description": "The description of this gallery Image Definition resource. This property is updatable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "disallowed": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endOfLifeDate": {
        "description": "The end of life date of the gallery Image Definition. This property can be used for decommissioning purposes. This property is updatable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "eula": {
        "description": "The Eula agreement for the gallery Image Definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hyperVGeneration": {
        "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identifier": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Indicates whether this gallery image is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isOverride": {
        "description": "Indicates whether this gallery has been overridden for this lab account",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isPlanAuthorized": {
        "description": "Indicates if the plan has been authorized for programmatic deployment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osState": {
        "description": "This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privacyStatementUri": {
        "description": "The privacy statement uri.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "purchasePlan": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recommended": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "releaseNoteUri": {
        "description": "The release note uri.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "eula",
      "privacyStatementUri",
      "releaseNoteUri",
      "osType",
      "osState",
      "endOfLifeDate",
      "identifier",
      "recommended",
      "disallowed",
      "purchasePlan",
      "isEnabled",
      "isOverride",
      "isPlanAuthorized",
      "provisioningState",
      "uniqueIdentifier",
      "hyperVGeneration"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Compute/galleries/images/versions": {
    "api_version": "2019-07-01",
    "full_properties": {
      "publishingProfile": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publishingProfile",
      "storageProfile"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Compute/hostGroups": {
    "api_version": "2019-07-01",
    "full_properties": {
      "platformFaultDomainCount": {
        "description": "Number of fault domains that the host group can span.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "platformFaultDomainCount"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Compute/hostGroups/hosts": {
    "api_version": "2019-07-01",
    "full_properties": {
      "autoReplaceOnFailure": {
        "description": "Specifies whether the dedicated host should be replaced automatically in case of a failure. The value is defaulted to 'true' when not provided.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "Specifies the software license type that will be applied to the VMs deployed on the dedicated host. <br><br> Possible values are: <br><br> **None** <br><br> **Windows_Server_Hybrid** <br><br> **Windows_Server_Perpetual** <br><br> Default: **None**.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "platformFaultDomain": {
        "description": "Fault domain of the dedicated host within a dedicated host group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "platformFaultDomain",
      "autoReplaceOnFailure",
      "licenseType"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties",
      "sku"
    ]
  },
  "Microsoft.Compute/images": {
    "api_version": "2019-07-01",
    "full_properties": {
      "hyperVGeneration": {
        "description": "Gets the HyperVGenerationType of the VirtualMachine created from the image.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceVirtualMachine": {
        "description": "The source virtual machine from which Image is created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Specifies the storage settings for the virtual machine disks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "sourceVirtualMachine",
      "storageProfile",
      "hyperVGeneration"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Compute/proximityPlacementGroups": {
    "api_version": "2019-07-01",
    "full_properties": {
      "proximityPlacementGroupType": {
        "description": "Specifies the type of the proximity placement group. <br><br> Possible values are: <br><br> **Standard** : Co-locate resources within an Azure region or Availability Zone. <br><br> **Ultra** : For future use.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "proximityPlacementGroupType"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Compute/snapshots": {
    "api_version": "2019-07-01",
    "full_properties": {
      "creationData": {
        "description": "Disk source information. CreationData information cannot be changed after the disk has been created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskSizeGB": {
        "description": "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettings": {
        "description": "Encryption settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettingsCollection": {
        "description": "Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fileSystemId": {
        "description": "UUID v4 used to identify the FileSystem",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hyperVGeneration": {
        "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "incremental": {
        "description": "Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The Operating System type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "fileSystemId",
      "osType",
      "creationData",
      "diskSizeGB",
      "encryptionSettings",
      "hyperVGeneration",
      "encryptionSettingsCollection",
      "incremental",
      "encryption"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Compute/virtualMachineScaleSets": {
    "api_version": "2019-07-01",
    "full_properties": {
      "upgradePolicy": {
        "description": "Microsoft.Compute/virtualMachineScaleSets - Upgrade policy",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachineProfile": {
        "description": "Microsoft.Compute/virtualMachineScaleSets - Virtual machine policy",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "upgradePolicy",
      "virtualMachineProfile"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Compute/virtualMachineScaleSets/extensions": {
    "api_version": "2019-07-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Compute/virtualMachineScaleSets/virtualMachines/extensions": {
    "api_version": "2019-07-01",
    "full_properties": {
      "autoUpgradeMinorVersion": {
        "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forceUpdateTag": {
        "description": "How the extension handler should be forced to update even if the extension configuration has not changed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "instanceView": {
        "description": "The virtual machine extension instance view.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protectedSettings": {
        "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publisher": {
        "description": "The name of the extension handler publisher.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "settings": {
        "description": "Json formatted public settings for the extension.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "typeHandlerVersion": {
        "description": "Specifies the version of the script handler.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "forceUpdateTag",
      "publisher",
      "type",
      "typeHandlerVersion",
      "autoUpgradeMinorVersion",
      "settings",
      "protectedSettings",
      "instanceView"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Compute/virtualMachineScaleSets/virtualmachines": {
    "api_version": "2019-07-01",
    "full_properties": {
      "additionalCapabilities": {
        "description": "Specifies additional capabilities enabled or disabled on the virtual machine in the scale set. For instance: whether the virtual machine has the capability to support attaching managed data disks with UltraSSD_LRS storage account type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilitySet": {
        "description": "Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more information on Azure planned maintenance, see [Planned maintenance for virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to availability set at creation time. An existing VM cannot be added to an availability set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsProfile": {
        "description": "Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hardwareProfile": {
        "description": "Specifies the hardware settings for the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain the Windows Server operating system. <br><br> Possible values are: <br><br> Windows_Client <br><br> Windows_Server <br><br> If this element is included in a request for an update, the value must match the initial value. This value cannot be updated. <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Minimum api-version: 2015-06-15",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Specifies the network interfaces of the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfileConfiguration": {
        "description": "Specifies the network profile configuration of the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osProfile": {
        "description": "Specifies the operating system settings for the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protectionPolicy": {
        "description": "Specifies the protection policy of the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Specifies the storage settings for the virtual machine disks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hardwareProfile",
      "storageProfile",
      "osProfile",
      "networkProfile",
      "diagnosticsProfile",
      "availabilitySet",
      "licenseType",
      "additionalCapabilities",
      "networkProfileConfiguration",
      "protectionPolicy"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Compute/virtualMachines": {
    "api_version": "2019-07-01",
    "full_properties": {
      "availabilitySet": {
        "description": "Microsoft.Compute/virtualMachines - Availability set",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hardwareProfile": {
        "description": "Microsoft.Compute/virtualMachines - Hardware profile",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Microsoft.Compute/virtualMachines - Network profile",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "osProfile": {
        "description": "Mirosoft.Compute/virtualMachines - Operating system profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Microsoft.Compute/virtualMachines - Storage profile",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "availabilitySet",
      "hardwareProfile",
      "storageProfile",
      "osProfile",
      "networkProfile"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Compute/virtualMachines/extensions": {
    "api_version": "2019-07-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Consumption/budgets": {
    "api_version": "2018-10-01",
    "full_properties": {
      "amount": {
        "description": "The total amount of cost to track with the budget",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "category": {
        "description": "The category of the budget, whether the budget tracks cost or usage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filters": {
        "description": "May be used to filter budgets by resource group, resource, or meter.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notifications": {
        "description": "Dictionary of notifications associated with the budget. Budget can have up to five notifications.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeGrain": {
        "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timePeriod": {
        "description": "The start and end date for a budget.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "amount",
      "category",
      "notifications",
      "timeGrain",
      "timePeriod",
      "filters"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerInstance/containerGroups": {
    "api_version": "2018-10-01",
    "full_properties": {
      "containers": {
        "description": "The containers within the container group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnostics": {
        "description": "Container group diagnostic information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dnsConfig": {
        "description": "DNS configuration for the container group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "imageRegistryCredentials": {
        "description": "The image registry credentials by which the container group is created from.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipAddress": {
        "description": "IP address for the container group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Container group network profile information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The operating system type required by the containers in the container group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restartPolicy": {
        "description": "Restart policy for all containers within the container group. \n- `Always` Always restart\n- `OnFailure` Restart on failure\n- `Never` Never restart\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumes": {
        "description": "The list of volumes that can be mounted by containers in this container group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "containers",
      "imageRegistryCredentials",
      "ipAddress",
      "osType",
      "restartPolicy",
      "volumes",
      "diagnostics",
      "networkProfile",
      "dnsConfig"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries": {
    "api_version": "2019-12-01-preview",
    "full_properties": {
      "adminUserEnabled": {
        "description": "The value that indicates whether the admin user is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataEndpointEnabled": {
        "description": "Enable a single data endpoint per region for serving data.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkRuleSet": {
        "description": "The network rule set for a container registry.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policies": {
        "description": "The policies for a container registry.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for the container registry.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "The properties of a storage account for a container registry. Only applicable to Classic SKU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "adminUserEnabled",
      "storageAccount",
      "networkRuleSet",
      "policies",
      "dataEndpointEnabled",
      "encryption",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/agentPools": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "count": {
        "description": "The count of agent machine",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "os": {
        "description": "The OS of agent machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tier": {
        "description": "The Tier of agent machine",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetResourceId": {
        "description": "The Virtual Network Subnet Resource Id of the agent machine",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "count",
      "os",
      "tier",
      "virtualNetworkSubnetResourceId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/buildTasks": {
    "api_version": "2018-02-01-preview",
    "full_properties": {
      "alias": {
        "description": "The alternative updatable name for a build task.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "platform": {
        "description": "The platform properties against which the build has to happen.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceRepository": {
        "description": "The properties of the source code repository.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "The current status of build task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeout": {
        "description": "Build timeout in seconds.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "alias",
      "platform",
      "sourceRepository",
      "status",
      "timeout"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/buildTasks/steps": {
    "api_version": "2018-02-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/exportPipelines": {
    "api_version": "2019-12-01-preview",
    "full_properties": {
      "options": {
        "description": "The list of all options configured for the pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "target": {
        "description": "The properties of the export pipeline target.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "target"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/importPipelines": {
    "api_version": "2019-12-01-preview",
    "full_properties": {
      "options": {
        "description": "The list of all options configured for the pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "The properties of the import pipeline source.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trigger": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "source",
      "trigger"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/pipelineRuns": {
    "api_version": "2019-12-01-preview",
    "full_properties": {
      "forceUpdateTag": {
        "description": "How the pipeline run should be forced to recreate even if the pipeline run configuration has not changed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "request": {
        "description": "The request properties provided for a pipeline run.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "forceUpdateTag",
      "request"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/privateEndpointConnections": {
    "api_version": "2019-12-01-preview",
    "full_properties": {
      "groupIds": {
        "description": "GroupIds from the private link service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/replications": {
    "api_version": "2019-12-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/scopeMaps": {
    "api_version": "2019-05-01-preview",
    "full_properties": {
      "actions": {
        "description": "The list of scoped permissions for registry artifacts.\r\nE.g. repositories/repository-name/content/read,\r\nrepositories/repository-name/metadata/write",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The user friendly description of the scope map.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actions",
      "description"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/taskRuns": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "forceUpdateTag": {
        "description": "How the run should be forced to rerun even if the run request configuration has not changed",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runRequest": {
        "description": "The request parameters for scheduling a run.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "forceUpdateTag",
      "runRequest"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/tasks": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "agentConfiguration": {
        "description": "The properties that determine the run agent configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "agentPoolName": {
        "description": "The dedicated agent pool for the task.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "credentials": {
        "description": "The parameters that describes a set of credentials that will be used when a run is invoked.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Gets or sets the parameters of the task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "platform": {
        "description": "The platform properties against which the run has to happen.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Gets or sets the name of the runbook.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "The current status of task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "step": {
        "description": "Base properties for any task step.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeout": {
        "description": "Run timeout in seconds.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trigger": {
        "description": "The properties of a trigger.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "parameters",
      "source",
      "agentConfiguration",
      "credentials",
      "platform",
      "status",
      "step",
      "timeout",
      "trigger",
      "agentPoolName"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/tokens": {
    "api_version": "2019-05-01-preview",
    "full_properties": {
      "credentials": {
        "description": "The properties of the credentials that can be used for authenticating the token.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scopeMapId": {
        "description": "The resource ID of the scope map to which the token will be associated with.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the token example enabled or disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "credentials",
      "scopeMapId",
      "status"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerRegistry/registries/webhooks": {
    "api_version": "2019-12-01-preview",
    "full_properties": {
      "actions": {
        "description": "The list of actions that trigger the webhook to post notifications.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customHeaders": {
        "description": "Custom headers that will be added to the webhook notifications.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scope": {
        "description": "The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceUri": {
        "description": "The service URI for the webhook to post notifications.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the webhook at the time the operation was called.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actions",
      "customHeaders",
      "scope",
      "serviceUri",
      "status"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerService/containerServices": {
    "api_version": "2017-07-01",
    "full_properties": {
      "agentPoolProfiles": {
        "description": "Properties of the agent pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customProfile": {
        "description": "Properties to configure a custom container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsProfile": {
        "description": "Profile for diagnostics on the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "linuxProfile": {
        "description": "Profile for Linux VMs in the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "masterProfile": {
        "description": "Profile for the container service master.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "orchestratorProfile": {
        "description": "Profile for the container service orchestrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "servicePrincipalProfile": {
        "description": "Information about a service principal identity for the cluster to use for manipulating Azure APIs. Either secret or keyVaultSecretRef must be specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "windowsProfile": {
        "description": "Profile for Windows VMs in the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agentPoolProfiles",
      "diagnosticsProfile",
      "linuxProfile",
      "masterProfile",
      "orchestratorProfile",
      "windowsProfile",
      "customProfile",
      "servicePrincipalProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerService/managedClusters": {
    "api_version": "2020-03-01",
    "full_properties": {
      "aadProfile": {
        "description": "AADProfile specifies attributes for Azure Active Directory integration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "addonProfiles": {
        "description": "Profile of managed cluster add-on.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "agentPoolProfiles": {
        "description": "Properties of the agent pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiServerAccessProfile": {
        "description": "Access profile for managed cluster API server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiServerAuthorizedIPRanges": {
        "description": "(PREVIEW) Authorized IP Ranges to kubernetes API server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoScalerProfile": {
        "description": "Parameters to be applied to the cluster-autoscaler when enabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskEncryptionSetID": {
        "description": "ResourceId of the disk encryption set to use for enabling encryption at rest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dnsPrefix": {
        "description": "DNS prefix specified when creating the managed cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enablePodSecurityPolicy": {
        "description": "(PREVIEW) Whether to enable Kubernetes Pod security policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableRBAC": {
        "description": "Whether to enable Kubernetes Role-Based Access Control.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identityProfile": {
        "description": "Identities associated with the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "kubernetesVersion": {
        "description": "Version of Kubernetes specified when creating the managed cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "linuxProfile": {
        "description": "Profile for Linux VMs in the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Profile of network configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeResourceGroup": {
        "description": "Name of the resource group containing agent pool nodes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "servicePrincipalProfile": {
        "description": "Information about a service principal identity for the cluster to use for manipulating Azure APIs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "windowsProfile": {
        "description": "Profile for Windows VMs in the container service cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agentPoolProfiles",
      "dnsPrefix",
      "kubernetesVersion",
      "linuxProfile",
      "servicePrincipalProfile",
      "aadProfile",
      "addonProfiles",
      "enableRBAC",
      "networkProfile",
      "apiServerAuthorizedIPRanges",
      "enablePodSecurityPolicy",
      "nodeResourceGroup",
      "windowsProfile",
      "apiServerAccessProfile",
      "identityProfile",
      "diskEncryptionSetID",
      "autoScalerProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerService/managedClusters/agentPools": {
    "api_version": "2020-03-01",
    "full_properties": {
      "availabilityZones": {
        "description": "Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "count": {
        "description": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive). The default value is 1. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutoScaling": {
        "description": "Whether to enable auto-scaler",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableNodePublicIP": {
        "description": "Enable public IP for nodes",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxCount": {
        "description": "Maximum number of nodes for auto-scaling",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxPods": {
        "description": "Maximum number of pods that can run on a node.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minCount": {
        "description": "Minimum number of nodes for auto-scaling",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mode": {
        "description": "AgentPoolMode represents mode of an agent pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeLabels": {
        "description": "Agent pool node labels to be persisted across all nodes in agent pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeTaints": {
        "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "orchestratorVersion": {
        "description": "Version of orchestrator specified when creating the managed cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "osDiskSizeGB": {
        "description": "OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleSetEvictionPolicy": {
        "description": "ScaleSetEvictionPolicy to be used to specify eviction policy for Spot or low priority virtual machine scale set. Default to Delete.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleSetPriority": {
        "description": "ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "spotMaxPrice": {
        "description": "SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tags": {
        "description": "Agent pool tags to be persisted on the agent pool virtual machine scale set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "AgentPoolType represents types of an agent pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "Size of agent VMs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetSubnetID": {
        "description": "VNet SubnetID specifies the VNet's subnet identifier.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "availabilityZones",
      "count",
      "enableAutoScaling",
      "maxCount",
      "maxPods",
      "minCount",
      "orchestratorVersion",
      "osDiskSizeGB",
      "osType",
      "type",
      "vmSize",
      "vnetSubnetID",
      "enableNodePublicIP",
      "nodeTaints",
      "scaleSetEvictionPolicy",
      "scaleSetPriority",
      "nodeLabels",
      "tags",
      "spotMaxPrice",
      "mode"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ContainerService/openShiftManagedClusters": {
    "api_version": "2019-10-27-preview",
    "full_properties": {
      "agentPoolProfiles": {
        "description": "Configuration of OpenShift cluster VMs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authProfile": {
        "description": "Defines all possible authentication profiles for the OpenShift cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fqdn": {
        "description": "User-specified FQDN for OpenShift API server loadbalancer internal hostname.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "masterPoolProfile": {
        "description": "OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitorProfile": {
        "description": "Defines the configuration for Log Analytics integration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Represents the OpenShift networking configuration",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "openShiftVersion": {
        "description": "Version of OpenShift specified when creating the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicHostname": {
        "description": "Optional user-specified FQDN for OpenShift API server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "refreshCluster": {
        "description": "Allows node rotation",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routerProfiles": {
        "description": "Configuration for OpenShift router(s).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agentPoolProfiles",
      "authProfile",
      "fqdn",
      "masterPoolProfile",
      "networkProfile",
      "openShiftVersion",
      "publicHostname",
      "routerProfiles",
      "monitorProfile",
      "refreshCluster"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.CustomProviders/resourceProviders": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "actions": {
        "description": "A list of actions that the custom resource provider implements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceTypes": {
        "description": "A list of resource types that the custom resource provider implements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "validations": {
        "description": "A list of validations to run on the custom resource provider's requests.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actions",
      "resourceTypes",
      "validations"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMariaDB/servers": {
    "api_version": "2018-06-01",
    "full_properties": {
      "infrastructureEncryption": {
        "description": "Status showing whether the server enabled infrastructure encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimalTlsVersion": {
        "description": "Enforce a minimal Tls version for the server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sslEnforcement": {
        "description": "Enable ssl enforcement or not when connect to server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Storage Profile properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "Server version.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "minimalTlsVersion",
      "sslEnforcement",
      "storageProfile",
      "version",
      "infrastructureEncryption",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMariaDB/servers/configurations": {
    "api_version": "2018-06-01",
    "full_properties": {
      "source": {
        "description": "Source of the configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "Value of the configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "source",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMariaDB/servers/databases": {
    "api_version": "2018-06-01",
    "full_properties": {
      "autoPauseDelay": {
        "description": "Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "catalogCollation": {
        "description": "Collation of the metadata catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "charset": {
        "description": "The charset of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "collation": {
        "description": "The collation of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "edition": {
        "description": "The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticPoolId": {
        "description": "The resource identifier of the elastic pool containing this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "elasticPoolName": {
        "description": "The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriod": {
        "description": "The time the data should be kept in cache for fast queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriodInDays": {
        "description": "The number of days of data that should be kept in cache for fast queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type to apply for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "longTermRetentionBackupResourceId": {
        "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "The max size of the database expressed in bytes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minCapacity": {
        "description": "Minimal capacity that database will always have allocated, if not paused",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readReplicaCount": {
        "description": "The number of readonly secondary replicas associated with the database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readScale": {
        "description": "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "The resource identifier of the recoverable database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointId": {
        "description": "The resource identifier of the recovery point associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointResourceId": {
        "description": "Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveId": {
        "description": "The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveName": {
        "description": "The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. \r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restorableDroppedDatabaseId": {
        "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampleName": {
        "description": "The name of the sample schema to apply when creating this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeletePeriod": {
        "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "softDeletePeriodInDays": {
        "description": "The number of days data should be kept before it stops being accessible to queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "sourceDatabaseDeletionDate": {
        "description": "Specifies the time that the database was deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "The resource identifier of the source database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountType": {
        "description": "The storage account type used to store backups for this database. Currently the only supported option is GRS (GeoRedundantStorage).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "createMode",
      "edition",
      "elasticPoolName",
      "maxSizeBytes",
      "readScale",
      "recoveryServicesRecoveryPointResourceId",
      "requestedServiceObjectiveId",
      "requestedServiceObjectiveName",
      "restorePointInTime",
      "sampleName",
      "sourceDatabaseDeletionDate",
      "sourceDatabaseId",
      "zoneRedundant",
      "softDeletePeriodInDays",
      "autoPauseDelay",
      "catalogCollation",
      "elasticPoolId",
      "licenseType",
      "longTermRetentionBackupResourceId",
      "minCapacity",
      "readReplicaCount",
      "recoverableDatabaseId",
      "recoveryServicesRecoveryPointId",
      "restorableDroppedDatabaseId",
      "charset",
      "hotCachePeriodInDays",
      "softDeletePeriod",
      "hotCachePeriod",
      "storageAccountType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMariaDB/servers/firewallRules": {
    "api_version": "2018-06-01",
    "full_properties": {
      "endIpAddress": {
        "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIpAddress": {
        "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIpAddress",
      "startIpAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMariaDB/servers/privateEndpointConnections": {
    "api_version": "2018-06-01",
    "full_properties": {
      "groupIds": {
        "description": "GroupIds from the private link service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMariaDB/servers/securityAlertPolicies": {
    "api_version": "2018-06-01",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMariaDB/servers/virtualNetworkRules": {
    "api_version": "2018-06-01",
    "full_properties": {
      "ignoreMissingVnetServiceEndpoint": {
        "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetId": {
        "description": "The ARM resource id of the virtual network subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ignoreMissingVnetServiceEndpoint",
      "virtualNetworkSubnetId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers": {
    "api_version": "2017-12-01",
    "full_properties": {
      "infrastructureEncryption": {
        "description": "Status showing whether the server enabled infrastructure encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimalTlsVersion": {
        "description": "Enforce a minimal Tls version for the server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sslEnforcement": {
        "description": "Enable ssl enforcement or not when connect to server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Storage Profile properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "Server version.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "minimalTlsVersion",
      "sslEnforcement",
      "storageProfile",
      "version",
      "infrastructureEncryption",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers/Administrators": {
    "api_version": "2017-12-01",
    "full_properties": {
      "administratorType": {
        "description": "The type of administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "login": {
        "description": "The server administrator login account name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sid": {
        "description": "The server administrator Sid (Secure ID).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "The server Active Directory Administrator tenant id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorType",
      "login",
      "sid",
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers/configurations": {
    "api_version": "2017-12-01",
    "full_properties": {
      "source": {
        "description": "Source of the configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "Value of the configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "source",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers/databases": {
    "api_version": "2017-12-01",
    "full_properties": {
      "autoPauseDelay": {
        "description": "Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "catalogCollation": {
        "description": "Collation of the metadata catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "charset": {
        "description": "The charset of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "collation": {
        "description": "The collation of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "edition": {
        "description": "The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticPoolId": {
        "description": "The resource identifier of the elastic pool containing this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "elasticPoolName": {
        "description": "The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriod": {
        "description": "The time the data should be kept in cache for fast queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriodInDays": {
        "description": "The number of days of data that should be kept in cache for fast queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type to apply for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "longTermRetentionBackupResourceId": {
        "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "The max size of the database expressed in bytes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minCapacity": {
        "description": "Minimal capacity that database will always have allocated, if not paused",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readReplicaCount": {
        "description": "The number of readonly secondary replicas associated with the database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readScale": {
        "description": "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "The resource identifier of the recoverable database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointId": {
        "description": "The resource identifier of the recovery point associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointResourceId": {
        "description": "Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveId": {
        "description": "The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveName": {
        "description": "The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. \r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restorableDroppedDatabaseId": {
        "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampleName": {
        "description": "The name of the sample schema to apply when creating this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeletePeriod": {
        "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "softDeletePeriodInDays": {
        "description": "The number of days data should be kept before it stops being accessible to queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "sourceDatabaseDeletionDate": {
        "description": "Specifies the time that the database was deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "The resource identifier of the source database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountType": {
        "description": "The storage account type used to store backups for this database. Currently the only supported option is GRS (GeoRedundantStorage).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "createMode",
      "edition",
      "elasticPoolName",
      "maxSizeBytes",
      "readScale",
      "recoveryServicesRecoveryPointResourceId",
      "requestedServiceObjectiveId",
      "requestedServiceObjectiveName",
      "restorePointInTime",
      "sampleName",
      "sourceDatabaseDeletionDate",
      "sourceDatabaseId",
      "zoneRedundant",
      "softDeletePeriodInDays",
      "autoPauseDelay",
      "catalogCollation",
      "elasticPoolId",
      "licenseType",
      "longTermRetentionBackupResourceId",
      "minCapacity",
      "readReplicaCount",
      "recoverableDatabaseId",
      "recoveryServicesRecoveryPointId",
      "restorableDroppedDatabaseId",
      "charset",
      "hotCachePeriodInDays",
      "softDeletePeriod",
      "hotCachePeriod",
      "storageAccountType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers/firewallRules": {
    "api_version": "2017-12-01",
    "full_properties": {
      "endIpAddress": {
        "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIpAddress": {
        "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIpAddress",
      "startIpAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers/keys": {
    "api_version": "2020-01-01",
    "full_properties": {
      "creationDate": {
        "description": "The server key creation date.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverKeyType": {
        "description": "The key type like 'AzureKeyVault'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "Thumbprint of the server key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The URI of the key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "creationDate",
      "serverKeyType",
      "thumbprint",
      "uri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers/privateEndpointConnections": {
    "api_version": "2018-06-01",
    "full_properties": {
      "groupIds": {
        "description": "GroupIds from the private link service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers/securityAlertPolicies": {
    "api_version": "2017-12-01",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforMySQL/servers/virtualNetworkRules": {
    "api_version": "2017-12-01",
    "full_properties": {
      "ignoreMissingVnetServiceEndpoint": {
        "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetId": {
        "description": "The ARM resource id of the virtual network subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ignoreMissingVnetServiceEndpoint",
      "virtualNetworkSubnetId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers": {
    "api_version": "2017-12-01",
    "full_properties": {
      "infrastructureEncryption": {
        "description": "Status showing whether the server enabled infrastructure encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimalTlsVersion": {
        "description": "Enforce a minimal Tls version for the server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sslEnforcement": {
        "description": "Enable ssl enforcement or not when connect to server.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Storage Profile properties of a server",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "Server version.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "minimalTlsVersion",
      "sslEnforcement",
      "storageProfile",
      "version",
      "infrastructureEncryption",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers/Administrators": {
    "api_version": "2017-12-01",
    "full_properties": {
      "administratorType": {
        "description": "The type of administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "login": {
        "description": "The server administrator login account name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sid": {
        "description": "The server administrator Sid (Secure ID).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "The server Active Directory Administrator tenant id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorType",
      "login",
      "sid",
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers/configurations": {
    "api_version": "2017-12-01",
    "full_properties": {
      "source": {
        "description": "Source of the configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "Value of the configuration.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "source",
      "value"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers/databases": {
    "api_version": "2017-12-01",
    "full_properties": {
      "autoPauseDelay": {
        "description": "Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "catalogCollation": {
        "description": "Collation of the metadata catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "charset": {
        "description": "The charset of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "collation": {
        "description": "The collation of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "edition": {
        "description": "The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticPoolId": {
        "description": "The resource identifier of the elastic pool containing this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "elasticPoolName": {
        "description": "The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriod": {
        "description": "The time the data should be kept in cache for fast queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriodInDays": {
        "description": "The number of days of data that should be kept in cache for fast queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type to apply for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "longTermRetentionBackupResourceId": {
        "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "The max size of the database expressed in bytes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minCapacity": {
        "description": "Minimal capacity that database will always have allocated, if not paused",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readReplicaCount": {
        "description": "The number of readonly secondary replicas associated with the database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readScale": {
        "description": "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "The resource identifier of the recoverable database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointId": {
        "description": "The resource identifier of the recovery point associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointResourceId": {
        "description": "Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveId": {
        "description": "The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveName": {
        "description": "The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. \r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restorableDroppedDatabaseId": {
        "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampleName": {
        "description": "The name of the sample schema to apply when creating this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeletePeriod": {
        "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "softDeletePeriodInDays": {
        "description": "The number of days data should be kept before it stops being accessible to queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "sourceDatabaseDeletionDate": {
        "description": "Specifies the time that the database was deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "The resource identifier of the source database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountType": {
        "description": "The storage account type used to store backups for this database. Currently the only supported option is GRS (GeoRedundantStorage).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "createMode",
      "edition",
      "elasticPoolName",
      "maxSizeBytes",
      "readScale",
      "recoveryServicesRecoveryPointResourceId",
      "requestedServiceObjectiveId",
      "requestedServiceObjectiveName",
      "restorePointInTime",
      "sampleName",
      "sourceDatabaseDeletionDate",
      "sourceDatabaseId",
      "zoneRedundant",
      "softDeletePeriodInDays",
      "autoPauseDelay",
      "catalogCollation",
      "elasticPoolId",
      "licenseType",
      "longTermRetentionBackupResourceId",
      "minCapacity",
      "readReplicaCount",
      "recoverableDatabaseId",
      "recoveryServicesRecoveryPointId",
      "restorableDroppedDatabaseId",
      "charset",
      "hotCachePeriodInDays",
      "softDeletePeriod",
      "hotCachePeriod",
      "storageAccountType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers/firewallRules": {
    "api_version": "2017-12-01",
    "full_properties": {
      "endIpAddress": {
        "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIpAddress": {
        "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIpAddress",
      "startIpAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers/keys": {
    "api_version": "2020-01-01",
    "full_properties": {
      "creationDate": {
        "description": "The server key creation date.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverKeyType": {
        "description": "The key type like 'AzureKeyVault'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "Thumbprint of the server key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The URI of the key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "creationDate",
      "serverKeyType",
      "thumbprint",
      "uri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers/privateEndpointConnections": {
    "api_version": "2018-06-01",
    "full_properties": {
      "groupIds": {
        "description": "GroupIds from the private link service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers/securityAlertPolicies": {
    "api_version": "2017-12-01",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DBforPostgreSQL/servers/virtualNetworkRules": {
    "api_version": "2017-12-01",
    "full_properties": {
      "ignoreMissingVnetServiceEndpoint": {
        "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetId": {
        "description": "The ARM resource id of the virtual network subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ignoreMissingVnetServiceEndpoint",
      "virtualNetworkSubnetId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBox/jobs": {
    "api_version": "2019-09-01",
    "full_properties": {
      "action": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "correlationData": {
        "description": "Customer provided correlation data that will be returned in Job and JobOutput state events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryInfo": {
        "description": "Additional delivery info.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryType": {
        "description": "Delivery type of Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Optional customer supplied description of the Job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Job details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "input": {
        "description": "The inputs for the Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputs": {
        "description": "The outputs for the Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recurrence": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedule": {
        "description": "Scheduling properties of a job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Gets or sets the job start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Gets or set the job state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "recurrence",
      "startTime",
      "state",
      "description",
      "schedule",
      "details",
      "input",
      "outputs",
      "priority",
      "correlationData",
      "deliveryInfo",
      "deliveryType"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices": {
    "api_version": "2019-08-01",
    "full_properties": {
      "dataBoxEdgeDeviceStatus": {
        "description": "The status of the Data Box Edge/Gateway device.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The Description of the Data Box Edge/Gateway device.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The Data Box Edge/Gateway device name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "modelDescription": {
        "description": "The description of the Data Box Edge/Gateway device model.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataBoxEdgeDeviceStatus",
      "description",
      "friendlyName",
      "modelDescription"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/bandwidthSchedules": {
    "api_version": "2019-08-01",
    "full_properties": {
      "days": {
        "description": "The days of the week when this schedule is applicable.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rateInMbps": {
        "description": "The bandwidth rate in Mbps.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "start": {
        "description": "The start time of the schedule in UTC.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "stop": {
        "description": "The stop time of the schedule in UTC.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "days",
      "rateInMbps",
      "start",
      "stop"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/orders": {
    "api_version": "2019-08-01",
    "full_properties": {
      "contactInformation": {
        "description": "Contains all the contact details of the customer.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "currentStatus": {
        "description": "Represents a single status change.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shippingAddress": {
        "description": "The shipping address of the customer.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contactInformation",
      "currentStatus",
      "shippingAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/roles": {
    "api_version": "2019-08-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/shares": {
    "api_version": "2019-08-01",
    "full_properties": {
      "accessProtocol": {
        "description": "Access protocol to be used by the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureContainerInfo": {
        "description": "Azure container mapping of the endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientAccessRights": {
        "description": "List of IP addresses and corresponding access rights on the share(required for NFS protocol).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataPolicy": {
        "description": "Data policy of the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Share description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "Current monitoring status of the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "refreshDetails": {
        "description": "Fields for tracking refresh job on the share or container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareKind": {
        "description": "Share kind.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareStatus": {
        "description": "Current status of the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "terms": {
        "description": "Share terms.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userAccessRights": {
        "description": "Mapping of users and corresponding access rights on the share (required for SMB protocol).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "shareKind",
      "terms",
      "accessProtocol",
      "azureContainerInfo",
      "clientAccessRights",
      "dataPolicy",
      "monitoringStatus",
      "refreshDetails",
      "shareStatus",
      "userAccessRights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/storageAccountCredentials": {
    "api_version": "2019-08-01",
    "full_properties": {
      "accessKey": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "accountKey": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "accountType": {
        "description": "Type of storage accessed on the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "alias": {
        "description": "Alias for the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "blobDomainName": {
        "description": "Blob end point for private clouds.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cloudType": {
        "description": "The cloud service provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionString": {
        "description": "Connection string for the storage account. Use this string if username and account key are not specified.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableSSL": {
        "description": "SSL needs to be enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endPoint": {
        "description": "The storage endpoint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "location": {
        "description": "The storage account's geo location",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "login": {
        "description": "The storage account login",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sslStatus": {
        "description": "Signifies whether SSL needs to be enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountId": {
        "description": "Id of the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userName": {
        "description": "Username for the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessKey",
      "cloudType",
      "enableSSL",
      "endPoint",
      "location",
      "login",
      "sslStatus",
      "accountKey",
      "accountType",
      "alias",
      "blobDomainName",
      "connectionString",
      "userName",
      "storageAccountId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/storageAccounts": {
    "api_version": "2019-08-01",
    "full_properties": {
      "accessKey": {
        "description": "The access key to the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataPolicy": {
        "description": "Data policy of the storage Account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description for the storage Account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "id": {
        "description": "The resource ID of the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "The name of the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "ARM resource ID of the Azure Storage Account to store CLI specific files. If not provided one will be created. This cannot be changed once the cluster is created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountCredentialId": {
        "description": "Storage Account Credential Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountId": {
        "description": "The fully qualified arm Id of the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountStatus": {
        "description": "Current status of the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "suffix": {
        "description": "the optional suffix for the Data Lake account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessKey",
      "suffix",
      "name",
      "storageAccountId",
      "id",
      "resourceId",
      "dataPolicy",
      "description",
      "storageAccountCredentialId",
      "storageAccountStatus"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/storageAccounts/containers": {
    "api_version": "2019-08-01",
    "full_properties": {
      "command": {
        "description": "The commands to execute within the container instance in exec form.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataFormat": {
        "description": "DataFormat for Container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentVariables": {
        "description": "The environment variables to set in the container instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "image": {
        "description": "The name of the image used to create the container instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "livenessProbe": {
        "description": "The container probe, for liveness or readiness",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "A name-value pair to associate with the container as metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ports": {
        "description": "The exposed ports on the container instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicAccess": {
        "description": "Specifies whether data in the container may be accessed publicly and the level of access.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readinessProbe": {
        "description": "The container probe, for liveness or readiness",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resources": {
        "description": "The resource requirements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeMounts": {
        "description": "The volume mounts available to the container instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "command",
      "environmentVariables",
      "image",
      "ports",
      "resources",
      "volumeMounts",
      "publicAccess",
      "metadata",
      "livenessProbe",
      "readinessProbe",
      "dataFormat"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/triggers": {
    "api_version": "2019-08-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DataBoxEdge/dataBoxEdgeDevices/users": {
    "api_version": "2019-08-01",
    "full_properties": {
      "encryptedPassword": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identity": {
        "description": "Identity attributes of a lab user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPassword": {
        "description": "Password used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPasswordHash": {
        "description": "Password hash used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPasswordHashSalt": {
        "description": "Password hash salt used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingUserName": {
        "description": "Username used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scmUri": {
        "description": "Url of SCM site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secretStore": {
        "description": "Properties of a user's secret store.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareAccessRights": {
        "description": "List of shares that the user has rights on. This field should not be specified during user creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userType": {
        "description": "Type of the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "identity",
      "provisioningState",
      "secretStore",
      "uniqueIdentifier",
      "publishingPassword",
      "publishingPasswordHash",
      "publishingPasswordHashSalt",
      "publishingUserName",
      "scmUri",
      "encryptedPassword",
      "shareAccessRights",
      "userType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataCatalog/catalogs": {
    "api_version": "2016-03-30",
    "full_properties": {
      "admins": {
        "description": "Azure data catalog admin list.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutomaticUnitAdjustment": {
        "description": "Automatic unit adjustment enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Azure data catalog SKU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "successfullyProvisioned": {
        "description": "Azure data catalog provision status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "units": {
        "description": "Azure data catalog units.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "users": {
        "description": "Azure data catalog user list.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "admins",
      "enableAutomaticUnitAdjustment",
      "sku",
      "successfullyProvisioned",
      "units",
      "users"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories": {
    "api_version": "2018-06-01",
    "full_properties": {
      "repoConfiguration": {
        "description": "Factory's git repo information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vstsConfiguration": {
        "description": "Factory's VSTS repo information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vstsConfiguration",
      "repoConfiguration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories/dataflows": {
    "api_version": "2018-06-01",
    "full_properties": {
      "annotations": {
        "description": "List of tags that can be used for describing the data flow.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the data flow.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "folder": {
        "description": "The folder that this data flow is in. If not specified, Data flow will appear at the root level.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "annotations",
      "description",
      "folder"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories/datasets": {
    "api_version": "2018-06-01",
    "full_properties": {
      "additionalProperties": {
        "description": "Unmatched properties from the message are deserialized this collection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "annotations": {
        "description": "List of tags that can be used for describing the Dataset.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Dataset description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "folder": {
        "description": "The folder that this Dataset is in. If not specified, Dataset will appear at the root level.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "linkedServiceName": {
        "description": "Linked service reference type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Definition of all parameters for an entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schema": {
        "description": "Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "structure": {
        "description": "Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalProperties",
      "annotations",
      "description",
      "linkedServiceName",
      "parameters",
      "structure",
      "folder",
      "schema"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories/integrationRuntimes": {
    "api_version": "2018-06-01",
    "full_properties": {
      "additionalProperties": {
        "description": "Unmatched properties from the message are deserialized this collection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Integration runtime description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalProperties",
      "description"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories/linkedservices": {
    "api_version": "2018-06-01",
    "full_properties": {
      "additionalProperties": {
        "description": "Unmatched properties from the message are deserialized this collection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "annotations": {
        "description": "List of tags that can be used for describing the linked service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectVia": {
        "description": "Integration runtime reference type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Linked service description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Definition of all parameters for an entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalProperties",
      "annotations",
      "connectVia",
      "description",
      "parameters"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories/pipelines": {
    "api_version": "2018-06-01",
    "full_properties": {
      "activities": {
        "description": "List of activities in pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "annotations": {
        "description": "List of tags that can be used for describing the Pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "concurrency": {
        "description": "The max number of concurrent runs for the pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the pipeline.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "folder": {
        "description": "The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Definition of all parameters for an entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "runDimensions": {
        "description": "Dimensions emitted by Pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "variables": {
        "description": "Definition of variable for a Pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "activities",
      "annotations",
      "concurrency",
      "description",
      "parameters",
      "folder",
      "runDimensions",
      "variables"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataFactory/factories/triggers": {
    "api_version": "2018-06-01",
    "full_properties": {
      "additionalProperties": {
        "description": "Unmatched properties from the message are deserialized this collection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "annotations": {
        "description": "List of tags that can be used for describing the trigger.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Trigger description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalProperties",
      "description",
      "annotations"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeAnalytics/accounts": {
    "api_version": "2016-11-01",
    "full_properties": {
      "computePolicies": {
        "description": "The list of compute policies associated with this account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataLakeStoreAccounts": {
        "description": "The list of Data Lake Store accounts associated with this account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultDataLakeStoreAccount": {
        "description": "The default Data Lake Store account associated with this account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "firewallAllowAzureIps": {
        "description": "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "firewallRules": {
        "description": "The list of firewall rules associated with this account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "firewallState": {
        "description": "The current state of the IP address firewall for this account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxDegreeOfParallelism": {
        "description": "The maximum supported degree of parallelism for this account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxDegreeOfParallelismPerJob": {
        "description": "The maximum supported degree of parallelism per job for this account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxJobCount": {
        "description": "The maximum supported jobs running under the account at the same time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minPriorityPerJob": {
        "description": "The minimum supported priority per job for this account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "newTier": {
        "description": "The commitment tier for the next month.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "queryStoreRetention": {
        "description": "The number of days that job metadata is retained.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccounts": {
        "description": "The list of Azure Blob Storage accounts associated with this account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "computePolicies",
      "dataLakeStoreAccounts",
      "defaultDataLakeStoreAccount",
      "firewallAllowAzureIps",
      "firewallRules",
      "firewallState",
      "maxDegreeOfParallelism",
      "maxDegreeOfParallelismPerJob",
      "maxJobCount",
      "minPriorityPerJob",
      "newTier",
      "queryStoreRetention",
      "storageAccounts"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeAnalytics/accounts/DataLakeStoreAccounts": {
    "api_version": "2015-10-01-preview",
    "full_properties": {
      "suffix": {
        "description": "the optional suffix for the Data Lake Store account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "suffix"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeAnalytics/accounts/StorageAccounts": {
    "api_version": "2015-10-01-preview",
    "full_properties": {
      "accessKey": {
        "description": "The access key to the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataPolicy": {
        "description": "Data policy of the storage Account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description for the storage Account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "id": {
        "description": "The resource ID of the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "The name of the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "ARM resource ID of the Azure Storage Account to store CLI specific files. If not provided one will be created. This cannot be changed once the cluster is created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountCredentialId": {
        "description": "Storage Account Credential Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountId": {
        "description": "The fully qualified arm Id of the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountStatus": {
        "description": "Current status of the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "suffix": {
        "description": "the optional suffix for the Data Lake account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessKey",
      "suffix",
      "name",
      "storageAccountId",
      "id",
      "resourceId",
      "dataPolicy",
      "description",
      "storageAccountCredentialId",
      "storageAccountStatus"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeAnalytics/accounts/computePolicies": {
    "api_version": "2016-11-01",
    "full_properties": {
      "maxDegreeOfParallelismPerJob": {
        "description": "The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minPriorityPerJob": {
        "description": "The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "objectId": {
        "description": "The AAD object identifier for the entity to create a policy for.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "objectType": {
        "description": "The type of AAD object the object identifier refers to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "maxDegreeOfParallelismPerJob",
      "minPriorityPerJob",
      "objectId",
      "objectType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeAnalytics/accounts/dataLakeStoreAccounts": {
    "api_version": "2016-11-01",
    "full_properties": {
      "suffix": {
        "description": "The optional suffix for the Data Lake Store account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "suffix"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeAnalytics/accounts/firewallRules": {
    "api_version": "2016-11-01",
    "full_properties": {
      "endIpAddress": {
        "description": "The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIpAddress": {
        "description": "The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIpAddress",
      "startIpAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeAnalytics/accounts/storageAccounts": {
    "api_version": "2016-11-01",
    "full_properties": {
      "accessKey": {
        "description": "The access key associated with this Azure Storage account that will be used to connect to it.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "suffix": {
        "description": "The optional suffix for the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessKey",
      "suffix"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeStore/accounts": {
    "api_version": "2016-11-01",
    "full_properties": {
      "defaultGroup": {
        "description": "The default owner group for all new folders and files created in the Data Lake Store account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptionConfig": {
        "description": "The encryption configuration for the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionState": {
        "description": "The current state of encryption for this Data Lake Store account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "firewallAllowAzureIps": {
        "description": "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "firewallRules": {
        "description": "The list of firewall rules associated with this Data Lake Store account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "firewallState": {
        "description": "The current state of the IP address firewall for this Data Lake Store account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "newTier": {
        "description": "The commitment tier to use for next month.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedIdProviderState": {
        "description": "The current state of the trusted identity provider feature for this Data Lake Store account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedIdProviders": {
        "description": "The list of trusted identity providers associated with this Data Lake Store account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkRules": {
        "description": "The list of virtual network rules associated with this Data Lake Store account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "defaultGroup",
      "encryptionConfig",
      "encryptionState",
      "firewallAllowAzureIps",
      "firewallRules",
      "firewallState",
      "newTier",
      "trustedIdProviders",
      "trustedIdProviderState",
      "virtualNetworkRules"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeStore/accounts/firewallRules": {
    "api_version": "2016-11-01",
    "full_properties": {
      "endIpAddress": {
        "description": "The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIpAddress": {
        "description": "The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIpAddress",
      "startIpAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeStore/accounts/trustedIdProviders": {
    "api_version": "2016-11-01",
    "full_properties": {
      "idProvider": {
        "description": "The URL of this trusted identity provider.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "idProvider"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataLakeStore/accounts/virtualNetworkRules": {
    "api_version": "2016-11-01",
    "full_properties": {
      "subnetId": {
        "description": "The resource identifier for the subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "subnetId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataMigration/services": {
    "api_version": "2017-11-15-privatepreview",
    "full_properties": {
      "virtualSubnetId": {
        "description": "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "virtualSubnetId"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.DataMigration/services/projects": {
    "api_version": "2017-11-15-privatepreview",
    "full_properties": {
      "assessmentSolutionId": {
        "description": "Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceId": {
        "description": "The ARM id of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceLocation": {
        "description": "Location of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databasesInfo": {
        "description": "List of DatabaseInfo",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "gitrepo": {
        "description": "The reference to git repo for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "projectStatus": {
        "description": "Assessment project status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceConnectionInfo": {
        "description": "Information for connecting to source",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourcePlatform": {
        "description": "Source platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetConnectionInfo": {
        "description": "Information for connecting to target",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetPlatform": {
        "description": "Target platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "gitrepo",
      "sourcePlatform",
      "targetPlatform",
      "sourceConnectionInfo",
      "targetConnectionInfo",
      "databasesInfo",
      "customerWorkspaceId",
      "customerWorkspaceLocation",
      "provisioningState",
      "assessmentSolutionId",
      "projectStatus"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.DataMigration/services/projects/tasks": {
    "api_version": "2017-11-15-privatepreview",
    "full_properties": {
      "taskType": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "taskType"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.DataShare/accounts": {
    "api_version": "2019-11-01",
    "full_properties": {
      "activeDirectories": {
        "description": "Active Directories",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "The fully qualified arm id of the user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "seats": {
        "description": "The no of users/seats who can access this team account. This property defines the charge on the team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "The properties of a storage account for a machine learning team account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vsoAccountId": {
        "description": "The fully qualified arm id of the vso account to be used for this team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "keyVaultId",
      "seats",
      "storageAccount",
      "vsoAccountId",
      "activeDirectories"
    ],
    "required": [
      "apiVersion",
      "identity",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataShare/accounts/shareSubscriptions": {
    "api_version": "2019-11-01",
    "full_properties": {
      "invitationId": {
        "description": "The invitation id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceShareLocation": {
        "description": "Source share location.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "invitationId",
      "sourceShareLocation"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataShare/accounts/shareSubscriptions/dataSetMappings": {
    "api_version": "2019-11-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DataShare/accounts/shareSubscriptions/triggers": {
    "api_version": "2019-11-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DataShare/accounts/shares": {
    "api_version": "2019-11-01",
    "full_properties": {
      "accessProtocol": {
        "description": "Access protocol to be used by the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureContainerInfo": {
        "description": "Azure container mapping of the endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientAccessRights": {
        "description": "List of IP addresses and corresponding access rights on the share(required for NFS protocol).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataPolicy": {
        "description": "Data policy of the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Share description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "Current monitoring status of the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "refreshDetails": {
        "description": "Fields for tracking refresh job on the share or container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareKind": {
        "description": "Share kind.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareStatus": {
        "description": "Current status of the share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "terms": {
        "description": "Share terms.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userAccessRights": {
        "description": "Mapping of users and corresponding access rights on the share (required for SMB protocol).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "shareKind",
      "terms",
      "accessProtocol",
      "azureContainerInfo",
      "clientAccessRights",
      "dataPolicy",
      "monitoringStatus",
      "refreshDetails",
      "shareStatus",
      "userAccessRights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataShare/accounts/shares/dataSets": {
    "api_version": "2019-11-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DataShare/accounts/shares/invitations": {
    "api_version": "2019-11-01",
    "full_properties": {
      "targetActiveDirectoryId": {
        "description": "The target Azure AD Id. Can't be combined with email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetEmail": {
        "description": "The email the invitation is directed to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetObjectId": {
        "description": "The target user or application Id that invitation is being sent to.\r\nMust be specified along TargetActiveDirectoryId. This enables sending\r\ninvitations to specific users or applications in an AD tenant.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "targetActiveDirectoryId",
      "targetEmail",
      "targetObjectId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DataShare/accounts/shares/synchronizationSettings": {
    "api_version": "2019-11-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Databricks/workspaces": {
    "api_version": "2018-04-01",
    "full_properties": {
      "allowPublicAccessWhenBehindVnet": {
        "description": "The flag to indicate whether to allow public access when behind VNet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationInsights": {
        "description": "ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The workspace provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "batchaiWorkspace": {
        "description": "ARM id of the Batch AI workspace associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectivityEndpoints": {
        "description": "Connectivity endpoints",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerRegistry": {
        "description": "ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDateTime": {
        "description": "The date and time stamp when the workspace was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultDataLakeStorage": {
        "description": "Details of the data lake storage account associated with the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "discoveryUrl": {
        "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This name in mutable",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hbiWorkspace": {
        "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "imageBuildCompute": {
        "description": "The compute name for image build",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultIdentifierId": {
        "description": "The key vault identifier used for encrypted workspaces.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetwork": {
        "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ownerEmail": {
        "description": "The email id of the owner for this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Custom Parameters used for Cluster Creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections to the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForIngestion": {
        "description": "The network access type for accessing Log Analytics ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForQuery": {
        "description": "The network access type for accessing Log Analytics query.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionInDays": {
        "description": "The workspace data retention in days. -1 means Unlimited retention for the Unlimited Sku. 730 days is the maximum allowed for all other Skus. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedPrivateLinkResources": {
        "description": "The list of shared private link resources in this workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU (tier) of a workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlAdministratorLogin": {
        "description": "Login for workspace SQL active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlAdministratorLoginPassword": {
        "description": "SQL administrator login password",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "updatedBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userStorageAccountId": {
        "description": "The fully qualified arm id of the storage account associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkProfile": {
        "description": "Virtual Network Profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "retentionInDays",
      "sku",
      "keyVaultIdentifierId",
      "ownerEmail",
      "userStorageAccountId",
      "description",
      "friendlyName",
      "applicationInsights",
      "batchaiWorkspace",
      "containerRegistry",
      "discoveryUrl",
      "keyVault",
      "storageAccount",
      "authorizations",
      "createdBy",
      "createdDateTime",
      "managedResourceGroupId",
      "parameters",
      "uiDefinitionUri",
      "updatedBy",
      "connectivityEndpoints",
      "defaultDataLakeStorage",
      "managedVirtualNetwork",
      "privateEndpointConnections",
      "sqlAdministratorLogin",
      "sqlAdministratorLoginPassword",
      "virtualNetworkProfile",
      "encryption",
      "hbiWorkspace",
      "publicNetworkAccessForIngestion",
      "publicNetworkAccessForQuery",
      "allowPublicAccessWhenBehindVnet",
      "imageBuildCompute",
      "sharedPrivateLinkResources"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DeploymentManager/artifactSources": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "armTemplateFolderPath": {
        "description": "The folder containing Azure Resource Manager templates.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "artifactRoot": {
        "description": "The path from the location that the 'authentication' property [say, a SAS URI to the blob container] refers to, to the location of the artifacts. This can be used to differentiate different versions of the artifacts. Or, different types of artifacts like binaries or templates. The location referenced by the authentication property concatenated with this optional artifactRoot path forms the artifact source location where the artifacts are expected to be found.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authentication": {
        "description": "Defines the authentication method and properties to access the artifacts.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "branchRef": {
        "description": "The artifact source's branch reference.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The artifact source's display name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "folderPath": {
        "description": "The folder containing artifacts.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "securityToken": {
        "description": "The security token to authenticate to the artifact source.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceType": {
        "description": "The type of artifact source used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The artifact source's URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "branchRef",
      "displayName",
      "folderPath",
      "provisioningState",
      "securityToken",
      "sourceType",
      "status",
      "uri",
      "armTemplateFolderPath",
      "uniqueIdentifier",
      "artifactRoot",
      "authentication"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DeploymentManager/rollouts": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "artifactSourceId": {
        "description": "The reference to the artifact source resource Id where the payload is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "buildVersion": {
        "description": "The version of the build being deployed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "stepGroups": {
        "description": "The list of step groups that define the orchestration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetServiceTopologyId": {
        "description": "The resource Id of the service topology from which service units are being referenced in step groups to be deployed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "artifactSourceId",
      "buildVersion",
      "stepGroups",
      "targetServiceTopologyId"
    ],
    "required": [
      "apiVersion",
      "identity",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DeploymentManager/serviceTopologies": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "artifactSourceId": {
        "description": "The resource Id of the artifact source that contains the artifacts that can be referenced in the service units.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "artifactSourceId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DeploymentManager/serviceTopologies/services": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "autoScalingPolicies": {
        "description": "Auto scaling policies",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "codePackages": {
        "description": "Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "correlationScheme": {
        "description": "A list that describes the correlation of the service with other services.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultMoveCost": {
        "description": "Specifies the move cost for the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "User readable description of the service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnostics": {
        "description": "Reference to sinks in DiagnosticsDescription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "healthState": {
        "description": "The health state of a resource such as Application, Service, or Network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkRefs": {
        "description": "The names of the private networks that this service needs to be part of.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The operation system required by the code in service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partitionDescription": {
        "description": "Describes how the service is partitioned.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "placementConstraints": {
        "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "replicaCount": {
        "description": "The number of replicas of the service to create. Defaults to 1 if not specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceDnsName": {
        "description": "Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceLoadMetrics": {
        "description": "The service load metrics is given as an array of ServiceLoadMetricDescription objects.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "servicePackageActivationMode": {
        "description": "The activation Mode of the service package.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "servicePlacementPolicies": {
        "description": "A list that describes the correlation of the service with other services.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceTypeName": {
        "description": "The name of the service type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetLocation": {
        "description": "The Azure location to which the resources in the service belong to or should be deployed to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetSubscriptionId": {
        "description": "The subscription to which the resources in the service belong to or should be deployed to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "correlationScheme",
      "defaultMoveCost",
      "partitionDescription",
      "placementConstraints",
      "serviceLoadMetrics",
      "servicePlacementPolicies",
      "serviceTypeName",
      "codePackages",
      "description",
      "diagnostics",
      "healthState",
      "networkRefs",
      "osType",
      "replicaCount",
      "targetLocation",
      "targetSubscriptionId",
      "autoScalingPolicies",
      "servicePackageActivationMode",
      "serviceDnsName"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DeploymentManager/serviceTopologies/services/serviceUnits": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
      "artifacts": {
        "description": "Defines the artifacts of a service unit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deploymentMode": {
        "description": "Describes the type of ARM deployment to be performed on the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResourceGroup": {
        "description": "The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "artifacts",
      "deploymentMode",
      "targetResourceGroup"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DeploymentManager/steps": {
    "api_version": "2019-11-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevOps/pipelines": {
    "api_version": "2019-07-01-preview",
    "full_properties": {
      "bootstrapConfiguration": {
        "description": "Configuration used to bootstrap a Pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "organization": {
        "description": "Reference to an Azure DevOps Organization.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "project": {
        "description": "Reference to an Azure DevOps Project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "bootstrapConfiguration",
      "organization",
      "project"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevSpaces/controllers": {
    "api_version": "2019-04-01",
    "full_properties": {
      "hostSuffix": {
        "description": "DNS suffix for public endpoints running in the Azure Dev Spaces Controller.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetContainerHostCredentialsBase64": {
        "description": "Credentials of the target container host (base64).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetContainerHostResourceId": {
        "description": "Resource ID of the target container host",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hostSuffix",
      "targetContainerHostResourceId",
      "targetContainerHostCredentialsBase64"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs": {
    "api_version": "2018-09-15",
    "full_properties": {
      "announcement": {
        "description": "Properties of a lab's announcement banner",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "artifactsStorageAccount": {
        "description": "The artifact storage account of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdDate": {
        "description": "The creation date of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultStorageAccount": {
        "description": "The lab's default storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultVirtualNetworkId": {
        "description": "The default virtual network identifier of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "environmentPermission": {
        "description": "The access rights to be granted to the user when provisioning an environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "extendedProperties": {
        "description": "Extended properties of the lab used for experimental features",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "labStorageType": {
        "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mandatoryArtifactsResourceIdsLinux": {
        "description": "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mandatoryArtifactsResourceIdsWindows": {
        "description": "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxUsersInLab": {
        "description": "Maximum number of users allowed in the lab.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "premiumDataDisks": {
        "description": "The setting to enable usage of premium data disks.\r\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\r\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccounts": {
        "description": "The storage accounts of the lab.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "support": {
        "description": "Properties of a lab's support banner",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "usageQuota": {
        "description": "Maximum duration a user can use an environment for in the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userAccessMode": {
        "description": "Lab user access mode (open to all vs. restricted to those listed on the lab).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vaultName": {
        "description": "The name of the key vault of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "artifactsStorageAccount",
      "createdDate",
      "defaultStorageAccount",
      "defaultVirtualNetworkId",
      "labStorageType",
      "provisioningState",
      "storageAccounts",
      "vaultName",
      "premiumDataDisks",
      "uniqueIdentifier",
      "announcement",
      "environmentPermission",
      "extendedProperties",
      "mandatoryArtifactsResourceIdsLinux",
      "mandatoryArtifactsResourceIdsWindows",
      "support",
      "maxUsersInLab",
      "usageQuota",
      "userAccessMode"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/artifactsources": {
    "api_version": "2018-09-15",
    "full_properties": {
      "armTemplateFolderPath": {
        "description": "The folder containing Azure Resource Manager templates.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "artifactRoot": {
        "description": "The path from the location that the 'authentication' property [say, a SAS URI to the blob container] refers to, to the location of the artifacts. This can be used to differentiate different versions of the artifacts. Or, different types of artifacts like binaries or templates. The location referenced by the authentication property concatenated with this optional artifactRoot path forms the artifact source location where the artifacts are expected to be found.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authentication": {
        "description": "Defines the authentication method and properties to access the artifacts.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "branchRef": {
        "description": "The artifact source's branch reference.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The artifact source's display name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "folderPath": {
        "description": "The folder containing artifacts.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "securityToken": {
        "description": "The security token to authenticate to the artifact source.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceType": {
        "description": "The type of artifact source used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The artifact source's URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "branchRef",
      "displayName",
      "folderPath",
      "provisioningState",
      "securityToken",
      "sourceType",
      "status",
      "uri",
      "armTemplateFolderPath",
      "uniqueIdentifier",
      "artifactRoot",
      "authentication"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/costs": {
    "api_version": "2018-09-15",
    "full_properties": {
      "createdDate": {
        "description": "The creation date of the cost.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "currencyCode": {
        "description": "The currency code of the cost.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endDateTime": {
        "description": "The end time of the cost data.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startDateTime": {
        "description": "The start time of the cost data.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetCost": {
        "description": "Properties of a cost target.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "createdDate",
      "currencyCode",
      "endDateTime",
      "provisioningState",
      "startDateTime",
      "targetCost",
      "uniqueIdentifier"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/customimages": {
    "api_version": "2018-09-15",
    "full_properties": {
      "author": {
        "description": "The author of the custom image.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "creationDate": {
        "description": "The creation date of the custom image.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customImagePlan": {
        "description": "Properties for plan on a custom image.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataDiskStorageInfo": {
        "description": "Storage information about the data disks present in the custom image",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the custom image.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isPlanAuthorized": {
        "description": "Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedImageId": {
        "description": "The Managed Image Id backing the custom image.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedSnapshotId": {
        "description": "The Managed Snapshot Id backing the custom image.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The OS type of the custom image.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vhd": {
        "description": "Properties for creating a custom image from a VHD.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vm": {
        "description": "Properties for creating a custom image from a virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "author",
      "creationDate",
      "description",
      "osType",
      "provisioningState",
      "vhd",
      "vm",
      "managedImageId",
      "uniqueIdentifier",
      "customImagePlan",
      "dataDiskStorageInfo",
      "isPlanAuthorized",
      "managedSnapshotId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/formulas": {
    "api_version": "2018-09-15",
    "full_properties": {
      "author": {
        "description": "The author of the formula.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "creationDate": {
        "description": "The creation date of the formula.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the formula.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "formulaContent": {
        "description": "Properties for creating a virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The OS type of the formula.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vm": {
        "description": "Information about a VM from which a formula is to be created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "author",
      "creationDate",
      "description",
      "formulaContent",
      "osType",
      "provisioningState",
      "vm",
      "uniqueIdentifier"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/notificationchannels": {
    "api_version": "2018-09-15",
    "full_properties": {
      "description": {
        "description": "Description of notification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "emailRecipient": {
        "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "events": {
        "description": "The list of event for which this notification is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notificationLocale": {
        "description": "The locale to use when sending a notification (fallback for unsupported languages is EN).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "webHookUrl": {
        "description": "The webhook URL to send notifications to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "events",
      "provisioningState",
      "uniqueIdentifier",
      "webHookUrl",
      "emailRecipient",
      "notificationLocale"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/policysets/policies": {
    "api_version": "2018-09-15",
    "full_properties": {
      "description": {
        "description": "The description of the policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "evaluatorType": {
        "description": "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "factData": {
        "description": "The fact data of the policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "factName": {
        "description": "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "marketplacePurchases": {
        "description": "The policy that controls whether Azure marketplace purchases are allowed for a billing profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "marketplacePurchasesAllowed": {
        "description": "The marketplacePurchasesAllowed flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "reservationPurchases": {
        "description": "The policy that controls whether Azure reservation purchases are allowed for a billing profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reservationPurchasesAllowed": {
        "description": "The reservationPurchasesAllowed flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subscriptionOwnerCanViewCharges": {
        "description": "The subscriptionOwnerCanViewCharges flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "threshold": {
        "description": "The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "viewCharges": {
        "description": "The policy that controls whether users with Azure RBAC access to a subscription can view its charges.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "evaluatorType",
      "factData",
      "factName",
      "provisioningState",
      "status",
      "threshold",
      "uniqueIdentifier",
      "marketplacePurchasesAllowed",
      "reservationPurchasesAllowed",
      "subscriptionOwnerCanViewCharges",
      "marketplacePurchases",
      "reservationPurchases",
      "viewCharges"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/schedules": {
    "api_version": "2018-09-15",
    "full_properties": {
      "dailyRecurrence": {
        "description": "Properties of a daily schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourlyRecurrence": {
        "description": "Properties of an hourly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notificationSettings": {
        "description": "Notification settings for a schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the schedule (i.e. Enabled, Disabled).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResourceId": {
        "description": "The resource ID to which the schedule belongs",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "taskType": {
        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZoneId": {
        "description": "The time zone ID (e.g. Pacific Standard time).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "weeklyRecurrence": {
        "description": "Properties of a weekly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dailyRecurrence",
      "hourlyRecurrence",
      "provisioningState",
      "status",
      "taskType",
      "timeZoneId",
      "weeklyRecurrence",
      "notificationSettings",
      "targetResourceId",
      "uniqueIdentifier"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/servicerunners": {
    "api_version": "2018-09-15",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/users": {
    "api_version": "2018-09-15",
    "full_properties": {
      "encryptedPassword": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identity": {
        "description": "Identity attributes of a lab user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPassword": {
        "description": "Password used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPasswordHash": {
        "description": "Password hash used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPasswordHashSalt": {
        "description": "Password hash salt used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingUserName": {
        "description": "Username used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scmUri": {
        "description": "Url of SCM site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secretStore": {
        "description": "Properties of a user's secret store.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareAccessRights": {
        "description": "List of shares that the user has rights on. This field should not be specified during user creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userType": {
        "description": "Type of the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "identity",
      "provisioningState",
      "secretStore",
      "uniqueIdentifier",
      "publishingPassword",
      "publishingPasswordHash",
      "publishingPasswordHashSalt",
      "publishingUserName",
      "scmUri",
      "encryptedPassword",
      "shareAccessRights",
      "userType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/users/disks": {
    "api_version": "2018-09-15",
    "full_properties": {
      "accountType": {
        "description": "the storage account type of the disk.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationData": {
        "description": "Disk source information. CreationData information cannot be changed after the disk has been created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskBlobName": {
        "description": "When backed by a blob, the name of the VHD blob without extension.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskIOPSReadWrite": {
        "description": "The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskMBpsReadWrite": {
        "description": "The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskSizeGB": {
        "description": "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskSizeGiB": {
        "description": "The size of the disk in GibiBytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskType": {
        "description": "The storage type for the disk (i.e. Standard, Premium).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskUri": {
        "description": "When backed by a blob, the URI of underlying blob.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettings": {
        "description": "Encryption settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettingsCollection": {
        "description": "Encryption settings collection used for Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostCaching": {
        "description": "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hyperVGeneration": {
        "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "leasedByLabVmId": {
        "description": "The resource ID of the VM to which this disk is leased.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedDiskId": {
        "description": "When backed by managed disk, this is the ID of the compute disk resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The Operating System type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accountType",
      "osType",
      "creationData",
      "diskSizeGB",
      "encryptionSettings",
      "diskBlobName",
      "diskSizeGiB",
      "diskType",
      "diskUri",
      "hostCaching",
      "leasedByLabVmId",
      "managedDiskId",
      "provisioningState",
      "uniqueIdentifier",
      "diskIOPSReadWrite",
      "diskMBpsReadWrite",
      "hyperVGeneration",
      "encryptionSettingsCollection",
      "encryption"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/users/environments": {
    "api_version": "2018-09-15",
    "full_properties": {
      "armTemplateDisplayName": {
        "description": "The display name of the Azure Resource Manager template that produced the environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deploymentProperties": {
        "description": "Properties of an environment deployment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceSets": {
        "description": "Represents a VM and the setting Id it was created for.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "armTemplateDisplayName",
      "deploymentProperties",
      "provisioningState",
      "uniqueIdentifier",
      "resourceSets"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/users/secrets": {
    "api_version": "2018-09-15",
    "full_properties": {
      "attributes": {
        "description": "The attributes of the secret.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contentType": {
        "description": "The content type of the secret.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "The value of the secret for secret creation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "uniqueIdentifier",
      "value",
      "contentType",
      "attributes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/users/servicefabrics": {
    "api_version": "2018-09-15",
    "full_properties": {
      "environmentId": {
        "description": "The resource id of the environment under which the service fabric resource is present",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalServiceFabricId": {
        "description": "The backing service fabric resource's id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "environmentId",
      "externalServiceFabricId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/users/servicefabrics/schedules": {
    "api_version": "2018-09-15",
    "full_properties": {
      "dailyRecurrence": {
        "description": "Properties of a daily schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourlyRecurrence": {
        "description": "Properties of an hourly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notificationSettings": {
        "description": "Notification settings for a schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the schedule (i.e. Enabled, Disabled).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResourceId": {
        "description": "The resource ID to which the schedule belongs",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "taskType": {
        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZoneId": {
        "description": "The time zone ID (e.g. Pacific Standard time).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "weeklyRecurrence": {
        "description": "Properties of a weekly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dailyRecurrence",
      "hourlyRecurrence",
      "provisioningState",
      "status",
      "taskType",
      "timeZoneId",
      "weeklyRecurrence",
      "notificationSettings",
      "targetResourceId",
      "uniqueIdentifier"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/virtualmachines": {
    "api_version": "2018-09-15",
    "full_properties": {
      "allowClaim": {
        "description": "Indicates whether another user can take ownership of the virtual machine",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicableSchedule": {
        "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "artifactDeploymentStatus": {
        "description": "Properties of an artifact deployment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "artifacts": {
        "description": "The artifacts to be installed on the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "computeId": {
        "description": "The resource identifier (Microsoft.Compute) of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "computeVm": {
        "description": "Properties of a virtual machine returned by the Microsoft.Compute API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdByUser": {
        "description": "The email address of creator of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdByUserId": {
        "description": "The object identifier of the creator of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdDate": {
        "description": "The creation date of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customImageId": {
        "description": "The custom image identifier of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataDiskParameters": {
        "description": "New or existing data disks to attach to the virtual machine after creation",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disallowPublicIpAddress": {
        "description": "Indicates whether the virtual machine is to be created without a public IP address.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentId": {
        "description": "The resource ID of the environment that contains this virtual machine, if any.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expirationDate": {
        "description": "The expiration date for VM.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "fqdn": {
        "description": "The fully-qualified domain name of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "galleryImageReference": {
        "description": "The reference information for an Azure Marketplace image.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAuthenticationWithSshKey": {
        "description": "Indicates whether this virtual machine uses an SSH key for authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "labSubnetName": {
        "description": "The lab subnet name of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labVirtualNetworkId": {
        "description": "The lab virtual network identifier of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lastKnownPowerState": {
        "description": "Last known compute power state captured in DTL",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkInterface": {
        "description": "Properties of a network interface.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notes": {
        "description": "The notes of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The OS type of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ownerObjectId": {
        "description": "The object identifier of the owner of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ownerUserPrincipalName": {
        "description": "The user principal name of the virtual machine owner.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "The password of the virtual machine administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "planId": {
        "description": "The id of the plan associated with the virtual machine image",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scheduleParameters": {
        "description": "Virtual Machine schedules to be created",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "size": {
        "description": "The size of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sshKey": {
        "description": "The SSH key of the virtual machine administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageType": {
        "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userName": {
        "description": "The user name of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualMachineCreationSource": {
        "description": "Tells source of creation of lab virtual machine. Output property only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "artifactDeploymentStatus",
      "artifacts",
      "computeId",
      "createdByUser",
      "createdByUserId",
      "customImageId",
      "disallowPublicIpAddress",
      "fqdn",
      "galleryImageReference",
      "isAuthenticationWithSshKey",
      "labSubnetName",
      "labVirtualNetworkId",
      "notes",
      "osType",
      "ownerObjectId",
      "password",
      "provisioningState",
      "size",
      "sshKey",
      "userName",
      "allowClaim",
      "applicableSchedule",
      "computeVm",
      "createdDate",
      "environmentId",
      "expirationDate",
      "networkInterface",
      "ownerUserPrincipalName",
      "storageType",
      "uniqueIdentifier",
      "virtualMachineCreationSource",
      "dataDiskParameters",
      "lastKnownPowerState",
      "planId",
      "scheduleParameters"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/virtualmachines/schedules": {
    "api_version": "2018-09-15",
    "full_properties": {
      "dailyRecurrence": {
        "description": "Properties of a daily schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourlyRecurrence": {
        "description": "Properties of an hourly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notificationSettings": {
        "description": "Notification settings for a schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the schedule (i.e. Enabled, Disabled).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResourceId": {
        "description": "The resource ID to which the schedule belongs",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "taskType": {
        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZoneId": {
        "description": "The time zone ID (e.g. Pacific Standard time).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "weeklyRecurrence": {
        "description": "Properties of a weekly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dailyRecurrence",
      "hourlyRecurrence",
      "provisioningState",
      "status",
      "taskType",
      "timeZoneId",
      "weeklyRecurrence",
      "notificationSettings",
      "targetResourceId",
      "uniqueIdentifier"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/labs/virtualnetworks": {
    "api_version": "2018-09-15",
    "full_properties": {
      "allowedSubnets": {
        "description": "The allowed subnets of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalProviderResourceId": {
        "description": "The Microsoft.Network resource identifier of the virtual network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "externalSubnets": {
        "description": "The external subnet properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subnetOverrides": {
        "description": "The subnet overrides of the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allowedSubnets",
      "description",
      "externalProviderResourceId",
      "provisioningState",
      "subnetOverrides",
      "externalSubnets",
      "uniqueIdentifier"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DevTestLab/schedules": {
    "api_version": "2018-09-15",
    "full_properties": {
      "dailyRecurrence": {
        "description": "Properties of a daily schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hourlyRecurrence": {
        "description": "Properties of an hourly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notificationSettings": {
        "description": "Notification settings for a schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "The status of the schedule (i.e. Enabled, Disabled).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResourceId": {
        "description": "The resource ID to which the schedule belongs",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "taskType": {
        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeZoneId": {
        "description": "The time zone ID (e.g. Pacific Standard time).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "weeklyRecurrence": {
        "description": "Properties of a weekly schedule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dailyRecurrence",
      "hourlyRecurrence",
      "provisioningState",
      "status",
      "taskType",
      "timeZoneId",
      "weeklyRecurrence",
      "notificationSettings",
      "targetResourceId",
      "uniqueIdentifier"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Devices/IotHubs": {
    "api_version": "2020-03-01",
    "full_properties": {
      "authorizationPolicies": {
        "description": "The shared access policies you can use to secure a connection to the IoT hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudToDevice": {
        "description": "The IoT hub cloud-to-device messaging properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "comments": {
        "description": "IoT hub comments.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deviceStreams": {
        "description": "The device streams properties of iothub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableFileUploadNotifications": {
        "description": "If True, file upload notifications are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventHubEndpoints": {
        "description": "The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "features": {
        "description": "The capabilities and features enabled for the IoT hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipFilterRules": {
        "description": "The IP filter rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "locations": {
        "description": "Primary and secondary location for iot hub",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "messagingEndpoints": {
        "description": "The messaging endpoint properties for the file upload notification queue.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minTlsVersion": {
        "description": "Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients that use a TLS version below 1.2 to be rejected.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "operationsMonitoringProperties": {
        "description": "The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections created on this IotHub",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether requests from Public Network are allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routing": {
        "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageEndpoints": {
        "description": "The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authorizationPolicies",
      "cloudToDevice",
      "comments",
      "enableFileUploadNotifications",
      "eventHubEndpoints",
      "features",
      "ipFilterRules",
      "messagingEndpoints",
      "operationsMonitoringProperties",
      "storageEndpoints",
      "routing",
      "deviceStreams",
      "locations",
      "minTlsVersion",
      "privateEndpointConnections",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.Devices/IotHubs/certificates": {
    "api_version": "2020-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups": {
    "api_version": "2020-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Devices/iotHubs/privateEndpointConnections": {
    "api_version": "2020-03-01",
    "full_properties": {
      "groupIds": {
        "description": "GroupIds from the private link service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Devices/provisioningServices": {
    "api_version": "2020-01-01",
    "full_properties": {
      "allocationPolicy": {
        "description": "Allocation policy to be used by this provisioning service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authorizationPolicies": {
        "description": "List of authorization keys for a provisioning service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "iotHubs": {
        "description": "List of IoT hubs associated with this provisioning service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipFilterRules": {
        "description": "The IP filter rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The ARM provisioning state of the provisioning service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Current state of the provisioning service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allocationPolicy",
      "authorizationPolicies",
      "iotHubs",
      "provisioningState",
      "state",
      "ipFilterRules"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.Devices/provisioningServices/certificates": {
    "api_version": "2020-01-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DigitalTwins/digitalTwinsInstances": {
    "api_version": "2020-03-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DigitalTwins/digitalTwinsInstances/endpoints": {
    "api_version": "2020-03-01-preview",
    "full_properties": {
      "tags": {
        "description": "The resource tags.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "tags"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts": {
    "api_version": "2020-03-01",
    "full_properties": {
      "capabilities": {
        "description": "List of Cosmos DB capabilities for the account",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectorOffer": {
        "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "consistencyPolicy": {
        "description": "The consistency policy for the Cosmos DB database account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "databaseAccountOfferType": {
        "description": "The offer type for the database",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableKeyBasedMetadataWriteAccess": {
        "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableAutomaticFailover": {
        "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableCassandraConnector": {
        "description": "Enables the cassandra connector on the Cosmos DB C* account",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableMultipleWriteLocations": {
        "description": "Enables the account to write in multiple locations",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipRangeFilter": {
        "description": "Cosmos DB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isVirtualNetworkFilterEnabled": {
        "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultKeyUri": {
        "description": "The URI of the key vault",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "locations": {
        "description": "An array that contains the georeplication locations enabled for the Cosmos DB account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether requests from Public Network are allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkRules": {
        "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "capabilities",
      "connectorOffer",
      "consistencyPolicy",
      "databaseAccountOfferType",
      "enableAutomaticFailover",
      "enableCassandraConnector",
      "enableMultipleWriteLocations",
      "ipRangeFilter",
      "isVirtualNetworkFilterEnabled",
      "locations",
      "virtualNetworkRules",
      "disableKeyBasedMetadataWriteAccess",
      "keyVaultKeyUri",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/databases": {
    "api_version": "2016-03-31",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB SQL database resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/databases/collections": {
    "api_version": "2016-03-31",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB MongoDB collection resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/databases/collections/settings": {
    "api_version": "2016-03-31",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/databases/containers": {
    "api_version": "2016-03-31",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB SQL container resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/databases/containers/settings": {
    "api_version": "2016-03-31",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/databases/graphs": {
    "api_version": "2016-03-31",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB Gremlin graph resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/databases/graphs/settings": {
    "api_version": "2016-03-31",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/databases/settings": {
    "api_version": "2016-03-31",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/keyspaces": {
    "api_version": "2016-03-31",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB Cassandra keyspace resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/keyspaces/settings": {
    "api_version": "2016-03-31",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/keyspaces/tables": {
    "api_version": "2016-03-31",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB Cassandra table resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/keyspaces/tables/settings": {
    "api_version": "2016-03-31",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/tables": {
    "api_version": "2016-03-31",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB table resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/apis/tables/settings": {
    "api_version": "2016-03-31",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces": {
    "api_version": "2020-03-01",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB Cassandra keyspace resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables": {
    "api_version": "2020-03-01",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB Cassandra table resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings": {
    "api_version": "2020-03-01",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or provisionedThroughputSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings": {
    "api_version": "2020-03-01",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or provisionedThroughputSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases": {
    "api_version": "2020-03-01",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB Gremlin database resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs": {
    "api_version": "2020-03-01",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB Gremlin graph resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings": {
    "api_version": "2020-03-01",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or provisionedThroughputSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings": {
    "api_version": "2020-03-01",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or provisionedThroughputSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases": {
    "api_version": "2020-03-01",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB MongoDB database resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections": {
    "api_version": "2020-03-01",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB MongoDB collection resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings": {
    "api_version": "2020-03-01",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or provisionedThroughputSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings": {
    "api_version": "2020-03-01",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or provisionedThroughputSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces": {
    "api_version": "2019-08-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections": {
    "api_version": "2019-08-01-preview",
    "full_properties": {
      "groupId": {
        "description": "Group id of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "Private endpoint which the connection belongs to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "Connection State of the Private Endpoint Connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the private endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupId",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlDatabases": {
    "api_version": "2020-03-01",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB SQL database resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers": {
    "api_version": "2020-03-01",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB SQL container resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/storedProcedures": {
    "api_version": "2020-03-01",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB SQL storedProcedure resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings": {
    "api_version": "2020-03-01",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or provisionedThroughputSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/triggers": {
    "api_version": "2020-03-01",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB SQL trigger resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/userDefinedFunctions": {
    "api_version": "2020-03-01",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB SQL userDefinedFunction resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings": {
    "api_version": "2020-03-01",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or provisionedThroughputSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/tables": {
    "api_version": "2020-03-01",
    "full_properties": {
      "options": {
        "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resource": {
        "description": "Cosmos DB table resource object",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "options",
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings": {
    "api_version": "2020-03-01",
    "full_properties": {
      "resource": {
        "description": "Cosmos DB resource throughput object. Either throughput is required or provisionedThroughputSettings is required, but not both.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resource"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.DomainRegistration/domains": {
    "api_version": "2015-04-01",
    "full_properties": {
      "autoRenew": {
        "description": "<code>true</code> if the domain should be automatically renewed; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "consent": {
        "description": "Legal agreement consent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactAdmin": {
        "description": "Administrative contact.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactBilling": {
        "description": "Billing contact.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactRegistrant": {
        "description": "Registrant contact.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactTech": {
        "description": "Technical contact.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "domainNotRenewableReasons": {
        "description": "Reasons why domain is not renewable.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedHostNames": {
        "description": "All hostnames derived from the domain and assigned to Azure resources.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nameServers": {
        "description": "Name servers.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privacy": {
        "description": "<code>true</code> if domain privacy is enabled for this domain; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contactAdmin",
      "contactBilling",
      "contactRegistrant",
      "contactTech",
      "nameServers",
      "privacy",
      "autoRenew",
      "managedHostNames",
      "consent",
      "domainNotRenewableReasons"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.DomainRegistration/domains/domainOwnershipIdentifiers": {
    "api_version": "2015-04-01",
    "full_properties": {
      "ownershipId": {
        "description": "Ownership Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ownershipId"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.EnterpriseKnowledgeGraph/services": {
    "api_version": "2018-12-03",
    "full_properties": {
      "description": {
        "description": "The description of the EnterpriseKnowledgeGraph",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "Specifies the metadata  of the resource.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The state of EnterpriseKnowledgeGraph provisioning.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "metadata",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/domains": {
    "api_version": "2020-04-01-preview",
    "full_properties": {
      "inboundIpRules": {
        "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputSchema": {
        "description": "This determines the format that Event Grid should expect for incoming events published to the domain.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputSchemaMapping": {
        "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "List of private endpoint connections.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "inputSchema",
      "inputSchemaMapping",
      "inboundIpRules",
      "privateEndpointConnections",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/domains/topics": {
    "api_version": "2020-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.EventGrid/partnerNamespaces": {
    "api_version": "2020-04-01-preview",
    "full_properties": {
      "partnerRegistrationFullyQualifiedId": {
        "description": "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "partnerRegistrationFullyQualifiedId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/partnerNamespaces/eventChannels": {
    "api_version": "2020-04-01-preview",
    "full_properties": {
      "destination": {
        "description": "Properties of the destination of an event channel.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filter": {
        "description": "Filter for the Event Channel.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Properties of the source of an event channel.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "destination",
      "filter",
      "source"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/partnerRegistrations": {
    "api_version": "2020-04-01-preview",
    "full_properties": {
      "authorizedAzureSubscriptionIds": {
        "description": "List of Azure subscription Ids that are authorized to create a partner namespace\r\nassociated with this partner registration. This is an optional property. Creating\r\npartner namespaces is always permitted under the same Azure subscription as the one used\r\nfor creating the partner registration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logoUri": {
        "description": "URI of the logo.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerName": {
        "description": "Official name of the partner name. For example: \"Contoso\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerResourceTypeDescription": {
        "description": "Description of the partner resource type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerResourceTypeDisplayName": {
        "description": "Display name of the partner resource type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerResourceTypeName": {
        "description": "Name of the partner resource type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "setupUri": {
        "description": "URI of the partner website that can be used by Azure customers to setup Event Grid\r\nintegration on an event source.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "visibilityState": {
        "description": "Visibility state of the partner registration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authorizedAzureSubscriptionIds",
      "logoUri",
      "partnerName",
      "partnerResourceTypeDescription",
      "partnerResourceTypeDisplayName",
      "partnerResourceTypeName",
      "setupUri",
      "visibilityState"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/partnerTopics/eventSubscriptions": {
    "api_version": "2020-04-01-preview",
    "full_properties": {
      "deadLetterDestination": {
        "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deadLetterWithResourceIdentity": {
        "description": "Information about the deadletter destination with resource identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryWithResourceIdentity": {
        "description": "Information about the delivery for an event subscription with resource identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destination": {
        "description": "Information about the destination for an event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventDeliverySchema": {
        "description": "The event delivery schema for the event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expirationTimeUtc": {
        "description": "Expiration time of the event subscription.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "filter": {
        "description": "Filter for the Event Subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "labels": {
        "description": "List of user defined labels.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retryPolicy": {
        "description": "Information about the retry policy for an event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "destination",
      "filter",
      "labels",
      "deadLetterDestination",
      "eventDeliverySchema",
      "retryPolicy",
      "expirationTimeUtc",
      "deadLetterWithResourceIdentity",
      "deliveryWithResourceIdentity"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/systemTopics": {
    "api_version": "2020-04-01-preview",
    "full_properties": {
      "source": {
        "description": "Source for the system topic.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "topicType": {
        "description": "TopicType for the system topic.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "source",
      "topicType"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/systemTopics/eventSubscriptions": {
    "api_version": "2020-04-01-preview",
    "full_properties": {
      "deadLetterDestination": {
        "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deadLetterWithResourceIdentity": {
        "description": "Information about the deadletter destination with resource identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryWithResourceIdentity": {
        "description": "Information about the delivery for an event subscription with resource identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destination": {
        "description": "Information about the destination for an event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventDeliverySchema": {
        "description": "The event delivery schema for the event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expirationTimeUtc": {
        "description": "Expiration time of the event subscription.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "filter": {
        "description": "Filter for the Event Subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "labels": {
        "description": "List of user defined labels.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retryPolicy": {
        "description": "Information about the retry policy for an event subscription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "destination",
      "filter",
      "labels",
      "deadLetterDestination",
      "eventDeliverySchema",
      "retryPolicy",
      "expirationTimeUtc",
      "deadLetterWithResourceIdentity",
      "deliveryWithResourceIdentity"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventGrid/topics": {
    "api_version": "2020-04-01-preview",
    "full_properties": {
      "autoDeleteOnIdle": {
        "description": "TimeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultMessageTimeToLive": {
        "description": "Default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "duplicateDetectionHistoryTimeWindow": {
        "description": "TimeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableBatchedOperations": {
        "description": "Value that indicates whether server-side batched operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableExpress": {
        "description": "Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePartitioning": {
        "description": "Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "entityAvailabilityStatus": {
        "description": "Entity availability status for the topic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filteringMessagesBeforePublishing": {
        "description": "Whether messages should be filtered before publishing.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inboundIpRules": {
        "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputSchema": {
        "description": "This determines the format that Event Grid should expect for incoming events published to the topic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputSchemaMapping": {
        "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAnonymousAccessible": {
        "description": "Value that indicates whether the message is accessible anonymously.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isExpress": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxSizeInMegabytes": {
        "description": "Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresDuplicateDetection": {
        "description": "Value indicating if this topic requires duplicate detection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Enumerates the possible values for the status of a messaging entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportOrdering": {
        "description": "Value that indicates whether the topic supports ordering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoDeleteOnIdle",
      "defaultMessageTimeToLive",
      "duplicateDetectionHistoryTimeWindow",
      "enableBatchedOperations",
      "enableExpress",
      "enablePartitioning",
      "entityAvailabilityStatus",
      "filteringMessagesBeforePublishing",
      "isAnonymousAccessible",
      "isExpress",
      "maxSizeInMegabytes",
      "requiresDuplicateDetection",
      "status",
      "supportOrdering",
      "inputSchema",
      "inputSchemaMapping",
      "inboundIpRules",
      "privateEndpointConnections",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/clusters": {
    "api_version": "2018-01-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces": {
    "api_version": "2018-01-01-preview",
    "full_properties": {
      "clusterArmId": {
        "description": "Cluster ARM ID of the Namespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Properties to configure Encryption",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAutoInflateEnabled": {
        "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "kafkaEnabled": {
        "description": "Value that indicates whether Kafka is enabled for eventhub namespace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maximumThroughputUnits": {
        "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clusterArmId",
      "encryption",
      "isAutoInflateEnabled",
      "kafkaEnabled",
      "maximumThroughputUnits",
      "zoneRedundant"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/AuthorizationRules": {
    "api_version": "2015-08-01",
    "full_properties": {
      "claimType": {
        "description": "The type of the claim.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "claimValue": {
        "description": "The value of the claim.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdTime": {
        "description": "The time at which the authorization rule was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyName": {
        "description": "The name of the key that was used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "modifiedTime": {
        "description": "The most recent time the rule was updated.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "primaryKey": {
        "description": "The primary key that was used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "revision": {
        "description": "The revision number for the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secondaryKey": {
        "description": "The secondary key that was used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights",
      "claimType",
      "claimValue",
      "createdTime",
      "keyName",
      "modifiedTime",
      "primaryKey",
      "revision",
      "secondaryKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/authorizationRules": {
    "api_version": "2017-04-01",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/disasterRecoveryConfigs": {
    "api_version": "2017-04-01",
    "full_properties": {
      "alternateName": {
        "description": "Primary/Secondary eventhub namespace name, which is part of GEO DR pairing",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerNamespace": {
        "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "alternateName",
      "partnerNamespace"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/eventhubs": {
    "api_version": "2017-04-01",
    "full_properties": {
      "captureDescription": {
        "description": "Properties to configure capture description for eventhub",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "messageRetentionInDays": {
        "description": "Number of days to retain the events for this Event Hub, value should be 1 to 7 days",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partitionCount": {
        "description": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Enumerates the possible values for the status of the Event Hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "captureDescription",
      "messageRetentionInDays",
      "partitionCount",
      "status"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/eventhubs/authorizationRules": {
    "api_version": "2017-04-01",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/eventhubs/consumergroups": {
    "api_version": "2017-04-01",
    "full_properties": {
      "userMetadata": {
        "description": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "userMetadata"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/ipfilterrules": {
    "api_version": "2018-01-01-preview",
    "full_properties": {
      "action": {
        "description": "The IP Filter Action.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filterName": {
        "description": "IP Filter name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipMask": {
        "description": "IP Mask",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "filterName",
      "ipMask"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/networkRuleSets": {
    "api_version": "2018-01-01-preview",
    "full_properties": {
      "defaultAction": {
        "description": "Default Action for Network Rule Set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipRules": {
        "description": "List of IpRules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkRules": {
        "description": "List VirtualNetwork Rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "defaultAction",
      "ipRules",
      "virtualNetworkRules"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.EventHub/namespaces/virtualnetworkrules": {
    "api_version": "2018-01-01-preview",
    "full_properties": {
      "ignoreMissingVnetServiceEndpoint": {
        "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetId": {
        "description": "The ARM resource id of the virtual network subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ignoreMissingVnetServiceEndpoint",
      "virtualNetworkSubnetId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Genomics/accounts": {
    "api_version": "2017-08-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.HDInsight/clusters": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "clusterDefinition": {
        "description": "The cluster definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterVersion": {
        "description": "The version of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "computeProfile": {
        "description": "Describes the compute profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskEncryptionProperties": {
        "description": "The disk encryption properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "kafkaRestProperties": {
        "description": "The kafka rest proxy configuration which contains AAD security group information.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minSupportedTlsVersion": {
        "description": "The minimal supported tls version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The type of operating system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProfile": {
        "description": "The security profile which contains Ssh public key for the HDInsight cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "The storage profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tier": {
        "description": "The cluster tier.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clusterDefinition",
      "clusterVersion",
      "computeProfile",
      "diskEncryptionProperties",
      "kafkaRestProperties",
      "minSupportedTlsVersion",
      "osType",
      "securityProfile",
      "storageProfile",
      "tier"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HDInsight/clusters/applications": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "allowUpdates": {
        "description": "A value indicating whether packages within the application may be overwritten using the same version string.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationType": {
        "description": "The application type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "computeProfile": {
        "description": "Describes the compute profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultVersion": {
        "description": "The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name for the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "errors": {
        "description": "The list of errors.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpsEndpoints": {
        "description": "The list of application HTTPS endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "installScriptActions": {
        "description": "The list of install script actions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sshEndpoints": {
        "description": "The list of application SSH endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uninstallScriptActions": {
        "description": "The list of uninstall script actions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationType",
      "computeProfile",
      "errors",
      "httpsEndpoints",
      "installScriptActions",
      "sshEndpoints",
      "uninstallScriptActions",
      "allowUpdates",
      "defaultVersion",
      "displayName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HDInsight/clusters/extensions": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.HanaOnAzure/hanaInstances": {
    "api_version": "2017-11-03-preview",
    "full_properties": {
      "hardwareProfile": {
        "description": "Specifies the hardware settings for the HANA instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Specifies the network settings for the HANA instance disks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osProfile": {
        "description": "Specifies the operating system settings for the HANA instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partnerNodeId": {
        "description": "ARM ID of another HanaInstance that will share a network with this HanaInstance",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Specifies the storage settings for the HANA instance disks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hardwareProfile",
      "networkProfile",
      "osProfile",
      "partnerNodeId",
      "storageProfile"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HanaOnAzure/sapMonitors": {
    "api_version": "2020-02-07-preview",
    "full_properties": {
      "enableCustomerAnalytics": {
        "description": "The value indicating whether to send analytics to Microsoft",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hanaDbCredentialsMsiId": {
        "description": "MSI ID passed by customer which has access to customer's KeyVault and to be assigned to the Collector VM.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hanaDbName": {
        "description": "Database name of the HANA instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hanaDbPassword": {
        "description": "Database password of the HANA instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hanaDbPasswordKeyVaultUrl": {
        "description": "KeyVault URL link to the password for the HANA database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hanaDbSqlPort": {
        "description": "Database port of the HANA instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hanaDbUsername": {
        "description": "Database username of the HANA instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hanaHostname": {
        "description": "Hostname of the HANA instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hanaSubnet": {
        "description": "Specifies the SAP monitor unique ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "Key Vault ID containing customer's HANA credentials.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logAnalyticsWorkspaceArmId": {
        "description": "The ARM ID of the Log Analytics Workspace that is used for monitoring",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logAnalyticsWorkspaceId": {
        "description": "The workspace ID of the log analytics workspace to be used for monitoring",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logAnalyticsWorkspaceSharedKey": {
        "description": "The shared key of the log analytics workspace that is used for monitoring",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "monitorSubnet": {
        "description": "The subnet which the SAP monitor will be deployed in",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enableCustomerAnalytics",
      "hanaDbCredentialsMsiId",
      "hanaDbName",
      "hanaDbPassword",
      "hanaDbPasswordKeyVaultUrl",
      "hanaDbSqlPort",
      "hanaDbUsername",
      "hanaHostname",
      "hanaSubnet",
      "keyVaultId",
      "logAnalyticsWorkspaceArmId",
      "logAnalyticsWorkspaceId",
      "logAnalyticsWorkspaceSharedKey",
      "monitorSubnet"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HanaOnAzure/sapMonitors/providerInstances": {
    "api_version": "2020-02-07-preview",
    "full_properties": {
      "metadata": {
        "description": "A JSON string containing metadata of the provider instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "properties": {
        "description": "A JSON string containing the properties of the provider instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "The type of provider instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "metadata",
      "properties",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HardwareSecurityModules/dedicatedHSMs": {
    "api_version": "2018-10-31-preview",
    "full_properties": {
      "networkProfile": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stampId": {
        "description": "This field will be used when RP does not support Availability zones.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "networkProfile",
      "stampId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HealthcareApis/services": {
    "api_version": "2019-09-16",
    "full_properties": {
      "accessPolicies": {
        "description": "The access policies of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authenticationConfiguration": {
        "description": "The authentication configuration for the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "corsConfiguration": {
        "description": "The settings for the CORS configuration of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cosmosDbConfiguration": {
        "description": "The settings for the Cosmos DB database backing the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportConfiguration": {
        "description": "The settings for the export operation of the service instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies",
      "cosmosDbConfiguration",
      "authenticationConfiguration",
      "corsConfiguration",
      "exportConfiguration"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "kind",
      "location",
      "properties",
      "identity"
    ]
  },
  "Microsoft.HybridCompute/machines": {
    "api_version": "2019-12-12",
    "full_properties": {
      "clientPublicKey": {
        "description": "Public Key that the client provides to be used during initial resource onboarding",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "extensions": {
        "description": "Machine Extensions information",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "locationData": {
        "description": "Metadata pertaining to the geographic location of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osProfile": {
        "description": "Specifies the operating system settings for the hybrid machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmId": {
        "description": "Specifies the hybrid machine unique ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clientPublicKey",
      "extensions",
      "locationData",
      "osProfile",
      "vmId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridCompute/machines/extensions": {
    "api_version": "2019-12-12",
    "full_properties": {
      "autoUpgradeMinorVersion": {
        "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forceUpdateTag": {
        "description": "How the extension handler should be forced to update even if the extension configuration has not changed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "instanceView": {
        "description": "The machine extension instance view.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protectedSettings": {
        "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "publisher": {
        "description": "The name of the extension handler publisher.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "settings": {
        "description": "Json formatted public settings for the extension.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "type": {
        "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "typeHandlerVersion": {
        "description": "Specifies the version of the script handler.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoUpgradeMinorVersion",
      "forceUpdateTag",
      "instanceView",
      "protectedSettings",
      "publisher",
      "settings",
      "type",
      "typeHandlerVersion"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridData/dataManagers": {
    "api_version": "2019-06-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "type"
    ]
  },
  "Microsoft.HybridData/dataManagers/dataServices/jobDefinitions": {
    "api_version": "2019-06-01",
    "full_properties": {
      "customerSecrets": {
        "description": "List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataServiceInput": {
        "description": "A generic json used differently by each data service type.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "dataSinkId": {
        "description": "Data Sink Id associated to the job definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataSourceId": {
        "description": "Data Source Id associated to the job definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lastModifiedTime": {
        "description": "Last modified time of the job definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runLocation": {
        "description": "This is the preferred geo location for the job to run.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedules": {
        "description": "Schedule for running the job definition",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "State of the job definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userConfirmation": {
        "description": "Enum to detect if user confirmation is required. If not passed will default to NotRequired.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customerSecrets",
      "dataServiceInput",
      "dataSinkId",
      "dataSourceId",
      "lastModifiedTime",
      "runLocation",
      "schedules",
      "state",
      "userConfirmation"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.HybridData/dataManagers/dataStores": {
    "api_version": "2019-06-01",
    "full_properties": {
      "customerSecrets": {
        "description": "List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataStoreTypeId": {
        "description": "The arm id of the data store type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "extendedProperties": {
        "description": "A generic json used differently by each data source type.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "repositoryId": {
        "description": "Arm Id for the manager resource to which the data source is associated. This is optional.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "State of the data source.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customerSecrets",
      "dataStoreTypeId",
      "extendedProperties",
      "repositoryId",
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ImportExport/jobs": {
    "api_version": "2016-11-01",
    "full_properties": {
      "backupDriveManifest": {
        "description": "Default value is false. Indicates whether the manifest files on the drives should be copied to block blobs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cancelRequested": {
        "description": "Indicates whether a request has been submitted to cancel the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contactDetails": {
        "description": "Contact Details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryPackage": {
        "description": "Contains information about the package being shipped by the customer to the Microsoft data center.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destinationAccountDetails": {
        "description": "Destination account details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsPath": {
        "description": "The virtual blob directory to which the copy logs and backups of drive manifest files (if enabled) will be stored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "driveList": {
        "description": "List of up to ten drives that comprise the job. The drive list is a required element for an import job; it is not specified for export jobs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expectedDataSizeInTeraBytes": {
        "description": "The expected size of the data, which needs to be transferred in this job, in terabytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expectedDataSizeInTerabytes": {
        "description": "The expected size of the data, which needs to be transferred in this job, in terabytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "export": {
        "description": "A property containing information about the blobs to be exported for an export job. This property is required for export jobs, but must not be specified for import jobs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "incompleteBlobListUri": {
        "description": "A blob path that points to a block blob containing a list of blob names that were not exported due to insufficient drive space. If all blobs were exported successfully, then this element is not included in the response.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "jobType": {
        "description": "The type of job",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "logLevel": {
        "description": "Default value is Error. Indicates whether error logging or verbose logging will be enabled.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "percentComplete": {
        "description": "Overall percentage completed for the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "preferences": {
        "description": "Preferences related to the order",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Specifies the provisioning state of the job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "returnAddress": {
        "description": "Specifies the return address information for the job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "returnPackage": {
        "description": "Contains information about the package being shipped by the customer to the Microsoft data center.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "returnShipping": {
        "description": "Specifies the return carrier and customer's account with the carrier.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shippingAddress": {
        "description": "Shipping address where customer wishes to receive the device.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shippingInformation": {
        "description": "Contains information about the Microsoft datacenter to which the drives should be shipped.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Current state of the job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountId": {
        "description": "The resource identifier of the storage account where data will be imported to or exported from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backupDriveManifest",
      "cancelRequested",
      "deliveryPackage",
      "diagnosticsPath",
      "driveList",
      "export",
      "incompleteBlobListUri",
      "jobType",
      "logLevel",
      "percentComplete",
      "provisioningState",
      "returnAddress",
      "returnPackage",
      "returnShipping",
      "shippingInformation",
      "state",
      "storageAccountId",
      "contactDetails",
      "destinationAccountDetails",
      "expectedDataSizeInTeraBytes",
      "preferences",
      "shippingAddress",
      "expectedDataSizeInTerabytes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/ProactiveDetectionConfigs": {
    "api_version": "2018-05-01-preview",
    "full_properties": {
      "customEmails": {
        "description": "An array of emails to send the proactive detections to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "the flag that indicates whether the proactive detection configuration rule is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "the name of the proactive detection configuration rule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sendEmailsToSubscriptionOwners": {
        "description": "the flag that indicates whether the proactive detections should be sent to subscription owners.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "name",
      "enabled",
      "sendEmailsToSubscriptionOwners",
      "customEmails"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Insights/actionGroups": {
    "api_version": "2019-03-01",
    "full_properties": {
      "automationRunbookReceivers": {
        "description": "The list of AutomationRunbook receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureAppPushReceivers": {
        "description": "The list of AzureAppPush receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureFunctionReceivers": {
        "description": "The list of AzureFunction receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailReceivers": {
        "description": "The list of email receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "Indicates whether this action group is enabled. If an action group is not enabled, then none of its receviers will receive communications.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "groupShortName": {
        "description": "The short name of the action group. This will be used in SMS messages.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "itsmReceivers": {
        "description": "The list of itsm receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logicAppReceivers": {
        "description": "The list of LogicApp receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "smsReceivers": {
        "description": "The list of SMS receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "voiceReceivers": {
        "description": "The list of voice receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "webhookReceivers": {
        "description": "The list of webhook receivers that are part of this action group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupShortName",
      "enabled",
      "emailReceivers",
      "smsReceivers",
      "webhookReceivers",
      "automationRunbookReceivers",
      "azureAppPushReceivers",
      "azureFunctionReceivers",
      "itsmReceivers",
      "logicAppReceivers",
      "voiceReceivers"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Insights/activityLogAlerts": {
    "api_version": "2017-04-01",
    "full_properties": {
      "actions": {
        "description": "The actions that will activate when the condition is met.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "condition": {
        "description": "The conditon that will cause this alert to activate.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "A description of this activity log alert.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "Indicates whether this activity log alert is enabled. If an activity log alert is not enabled, then none of its actions will be activated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scopes": {
        "description": "A list of resourceIds that will be used as prefixes. The alert will only apply to activityLogs with resourceIds that fall under one of these prefixes. This list must include at least one item.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "scopes",
      "enabled",
      "condition",
      "actions",
      "description"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Insights/alertrules": {
    "api_version": "2014-04-01",
    "full_properties": {
      "action": {
        "description": "Microsoft.Insights/alertrules: The action that is performed when the alert rule becomes active, and when an alert condition is resolved.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "condition": {
        "description": "Microsoft.Insights/alertrules: The condition that results in the alert rule being activated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Microsoft.Insights/alertrules: Description of the alert rule that will be included in the alert email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Microsoft.Insights/alertrules: Indicates whether the alert rule is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "Microsoft.Insights/alertrules: Name of the alert rule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "name",
      "description",
      "isEnabled",
      "condition",
      "action"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties",
      "location"
    ]
  },
  "Microsoft.Insights/autoscalesettings": {
    "api_version": "2014-04-01",
    "full_properties": {
      "enabled": {
        "description": "Microsoft.Insights/autoscalesettings: Specifies whether automatic scaling is enabled for the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "Microsoft.Insights/autoscalesettings: The name of the autoscale setting.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "profiles": {
        "description": "Microsoft.Insights/autoscalesettings: Contains a collection of automatic scaling profiles that specify different scaling parameters for different time periods. A maximum of 20 profiles can be specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResourceUri": {
        "description": "Microsoft.Insights/autoscalesettings: The resource identifier of the resource that the autoscale setting should be added to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "profiles",
      "enabled",
      "name",
      "targetResourceUri"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties",
      "location"
    ]
  },
  "Microsoft.Insights/components": {
    "api_version": "2015-05-01",
    "full_properties": {
      "applicationId": {
        "description": "Microsoft.Insights/components: applicationId",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationId"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "kind",
      "properties"
    ]
  },
  "Microsoft.Insights/components/pricingPlans": {
    "api_version": "2017-10-01",
    "full_properties": {
      "cap": {
        "description": "Daily data volume cap in GB.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "planType": {
        "description": "Pricing Plan Type Name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stopSendNotificationWhenHitCap": {
        "description": "Do not send a notification email when the daily data volume cap is met.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stopSendNotificationWhenHitThreshold": {
        "description": "Do not send a notification email when the daily data volume hit the warning threshold.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "warningThreshold": {
        "description": "warning threshold of daily volume cap.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "planType",
      "cap",
      "warningThreshold",
      "stopSendNotificationWhenHitThreshold",
      "stopSendNotificationWhenHitCap"
    ],
    "required": [
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Insights/metricAlerts": {
    "api_version": "2018-03-01",
    "full_properties": {
      "actions": {
        "description": "the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoMitigate": {
        "description": "the flag that indicates whether the alert should be auto resolved or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "criteria": {
        "description": "The rule criteria that defines the conditions of the alert rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "the description of the metric alert that will be included in the alert email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "the flag that indicates whether the metric alert is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "evaluationFrequency": {
        "description": "how often the metric alert is evaluated represented in ISO 8601 duration format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scopes": {
        "description": "the list of resource id's that this metric alert is scoped to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "severity": {
        "description": "Alert severity {0, 1, 2, 3, 4}",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResourceRegion": {
        "description": "the region of the target resource(s) on which the alert is created/updated. Mandatory for MultipleResourceMultipleMetricCriteria.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetResourceType": {
        "description": "the resource type of the target resource(s) on which the alert is created/updated. Mandatory for MultipleResourceMultipleMetricCriteria.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "windowSize": {
        "description": "the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actions",
      "autoMitigate",
      "criteria",
      "description",
      "enabled",
      "evaluationFrequency",
      "scopes",
      "severity",
      "targetResourceRegion",
      "targetResourceType",
      "windowSize"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/privateLinkScopes/privateEndpointConnections": {
    "api_version": "2019-10-17-preview",
    "full_properties": {
      "groupIds": {
        "description": "GroupIds from the private link service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/privateLinkScopes/scopedResources": {
    "api_version": "2019-10-17-preview",
    "full_properties": {
      "linkedResourceId": {
        "description": "The resource id of the scoped Azure monitor resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "linkedResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/scheduledQueryRules": {
    "api_version": "2018-04-16",
    "full_properties": {
      "action": {
        "description": "Action descriptor.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the Log Search rule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "The flag which indicates whether the Log Search rule is enabled. Value should be true or false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedule": {
        "description": "Defines how often to run the search and the time interval.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Specifies the log search query.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "description",
      "enabled",
      "schedule",
      "source"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Insights/webtests": {
    "api_version": "2015-05-01",
    "full_properties": {
      "Configuration": {
        "description": "Microsoft.Insights/webtests: Configuration for the webtest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "Description": {
        "description": "Microsoft.Insights/webtests: description of the webtest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "Enabled": {
        "description": "Microsoft.Insights/webtests: Is the webtest enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "Frequency": {
        "description": "Microsoft.Insights/webtests: Frequency of the webtest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "Locations": {
        "description": "Microsoft.Insights/webtests: Locations of the webtest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "Name": {
        "description": "Microsoft.Insights/webtests: name of the webtest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "SyntheticMonitorId": {
        "description": "Microsoft.Insights/webtests: Synthetic monitor id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "Timeout": {
        "description": "Microsoft.Insights/webtests: Timeout for the webtest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Microsoft.Insights/webtests: provisioning state.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "Name",
      "Description",
      "Enabled",
      "Frequency",
      "Timeout",
      "Locations",
      "Configuration",
      "SyntheticMonitorId"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.IoTCentral/IoTApps": {
    "api_version": "2018-09-01",
    "full_properties": {
      "displayName": {
        "description": "The display name of the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subdomain": {
        "description": "The subdomain of the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "template": {
        "description": "The ID of the application template, which is a blueprint that defines the characteristics and behaviors of an application. Optional; if not specified, defaults to a blank blueprint and allows the application to be defined from scratch.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "subdomain",
      "template"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.IoTSpaces/Graph": {
    "api_version": "2017-10-01-preview",
    "full_properties": {
      "storageContainer": {
        "description": "The properties of the Azure Storage Container for file archive.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "storageContainer"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.KeyVault/vaults": {
    "api_version": "2016-10-01",
    "full_properties": {
      "accessPolicies": {
        "description": "Microsoft.KeyVault/vaults: Access policies",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledForDeployment": {
        "description": "Microsoft.KeyVault/vaults: Enabled for deployment",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Microsoft.KeyVault/vaults: Sku",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "Microsoft.KeyVault/vaults: The tenant ID of the Azure Active Directory Tenant to use for authorization.",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "sku",
      "tenantId",
      "accessPolicies",
      "enabledForDeployment"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.KeyVault/vaults/accessPolicies": {
    "api_version": "2016-10-01",
    "full_properties": {
      "accessPolicies": {
        "description": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessPolicies"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.KeyVault/vaults/secrets": {
    "api_version": "2016-10-01",
    "full_properties": {
      "attributes": {
        "description": "The attributes of the secret.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contentType": {
        "description": "The content type of the secret.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "value": {
        "description": "The value of the secret for secret creation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "uniqueIdentifier",
      "value",
      "contentType",
      "attributes"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Kusto/clusters": {
    "api_version": "2020-02-15",
    "full_properties": {
      "addOnFeatures": {
        "description": "The list of add-on features to enable in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationTypeVersionsCleanupPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availableClusterVersions": {
        "description": "The Service Fabric runtime versions available for this cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureActiveDirectory": {
        "description": "The settings to enable AAD authentication on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateCommonNames": {
        "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateThumbprints": {
        "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterCodeVersion": {
        "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSize": {
        "description": "The cluster size",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataIngestionUri": {
        "description": "The cluster data ingestion URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnosticsStorageAccountConfig": {
        "description": "The storage account information for storing Service Fabric diagnostic logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDiskEncryption": {
        "description": "A boolean value that indicates if the cluster's disks are encrypted.",
        "required": false,
        "type": "boolean",
        "update_causes": "unknown"
      },
      "enablePurge": {
        "description": "A boolean value that indicates if the purge operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableStreamingIngest": {
        "description": "A boolean value that indicates if the streaming ingest is enabled.",
        "required": false,
        "type": "boolean",
        "update_causes": "unknown"
      },
      "eventStoreServiceEnabled": {
        "description": "Indicates if the event store service is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fabricSettings": {
        "description": "The list of custom fabric settings to configure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpApplicationGatewayCertificate": {
        "description": "Microsoft.ServiceFabric/clusters: The server certificate used by reverse proxy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultProperties": {
        "description": "The key vault properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementEndpoint": {
        "description": "The http management endpoint of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextLink": {
        "description": "The link used to get the next page of recommendations.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeTypes": {
        "description": "The list of node types in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedAutoscale": {
        "description": "A class that contains the optimized auto scale definition.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioned state of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "reliabilityLevel": {
        "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "The state of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "trustedExternalTenants": {
        "description": "The cluster's external tenants.",
        "required": false,
        "type": "array",
        "update_causes": "unknown"
      },
      "upgradeDescription": {
        "description": "Describes the policy used when upgrading the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeMode": {
        "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n\n  - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.\n  - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The cluster URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkConfiguration": {
        "description": "A class that contains virtual network definition.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "vmImage": {
        "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vmImage",
      "httpApplicationGatewayCertificate",
      "azureActiveDirectory",
      "reliabilityLevel",
      "nodeTypes",
      "managementEndpoint",
      "certificate",
      "clientCertificateThumbprints",
      "clientCertificateCommonNames",
      "fabricSettings",
      "upgradeDescription",
      "diagnosticsStorageAccountConfig",
      "clusterCodeVersion",
      "reverseProxyCertificate",
      "upgradeMode",
      "addOnFeatures",
      "availableClusterVersions",
      "clusterState",
      "certificateCommonNames",
      "reverseProxyCertificateCommonNames",
      "state",
      "provisioningState",
      "uri",
      "dataIngestionUri",
      "trustedExternalTenants",
      "eventStoreServiceEnabled",
      "optimizedAutoscale",
      "enableDiskEncryption",
      "enableStreamingIngest",
      "virtualNetworkConfiguration",
      "keyVaultProperties",
      "nextLink",
      "clusterSize",
      "applicationTypeVersionsCleanupPolicy",
      "enablePurge"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "sku"
    ]
  },
  "Microsoft.Kusto/clusters/AttachedDatabaseConfigurations": {
    "api_version": "2020-02-15",
    "full_properties": {
      "clusterResourceId": {
        "description": "The resource id of the cluster where the databases you would like to attach reside.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databaseName": {
        "description": "The name of the database which you would like to attach, use * if you want to follow all current and future databases.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultPrincipalsModificationKind": {
        "description": "The default principals modification kind",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "databaseName",
      "clusterResourceId",
      "defaultPrincipalsModificationKind"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Kusto/clusters/dataConnections": {
    "api_version": "2020-02-15",
    "full_properties": {
      "kind": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "properties": {
        "description": "Geneva (DGS) data connection properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "properties",
      "kind"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Kusto/clusters/databases": {
    "api_version": "2020-02-15",
    "full_properties": {
      "autoPauseDelay": {
        "description": "Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "catalogCollation": {
        "description": "Collation of the metadata catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "charset": {
        "description": "The charset of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "collation": {
        "description": "The collation of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "edition": {
        "description": "The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticPoolId": {
        "description": "The resource identifier of the elastic pool containing this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "elasticPoolName": {
        "description": "The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriod": {
        "description": "The time the data should be kept in cache for fast queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriodInDays": {
        "description": "The number of days of data that should be kept in cache for fast queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type to apply for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "longTermRetentionBackupResourceId": {
        "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "The max size of the database expressed in bytes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minCapacity": {
        "description": "Minimal capacity that database will always have allocated, if not paused",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readReplicaCount": {
        "description": "The number of readonly secondary replicas associated with the database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readScale": {
        "description": "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "The resource identifier of the recoverable database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointId": {
        "description": "The resource identifier of the recovery point associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointResourceId": {
        "description": "Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveId": {
        "description": "The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveName": {
        "description": "The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. \r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restorableDroppedDatabaseId": {
        "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampleName": {
        "description": "The name of the sample schema to apply when creating this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeletePeriod": {
        "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "softDeletePeriodInDays": {
        "description": "The number of days data should be kept before it stops being accessible to queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "sourceDatabaseDeletionDate": {
        "description": "Specifies the time that the database was deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "The resource identifier of the source database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountType": {
        "description": "The storage account type used to store backups for this database. Currently the only supported option is GRS (GeoRedundantStorage).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "createMode",
      "edition",
      "elasticPoolName",
      "maxSizeBytes",
      "readScale",
      "recoveryServicesRecoveryPointResourceId",
      "requestedServiceObjectiveId",
      "requestedServiceObjectiveName",
      "restorePointInTime",
      "sampleName",
      "sourceDatabaseDeletionDate",
      "sourceDatabaseId",
      "zoneRedundant",
      "softDeletePeriodInDays",
      "autoPauseDelay",
      "catalogCollation",
      "elasticPoolId",
      "licenseType",
      "longTermRetentionBackupResourceId",
      "minCapacity",
      "readReplicaCount",
      "recoverableDatabaseId",
      "recoveryServicesRecoveryPointId",
      "restorableDroppedDatabaseId",
      "charset",
      "hotCachePeriodInDays",
      "softDeletePeriod",
      "hotCachePeriod",
      "storageAccountType"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Kusto/clusters/databases/dataConnections": {
    "api_version": "2020-02-15",
    "full_properties": {
      "kind": {
        "description": "Kind of the endpoint for the data connection",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "properties": {
        "description": "Event hub data connection properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "kind",
      "properties"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Kusto/clusters/databases/principalAssignments": {
    "api_version": "2020-02-15",
    "full_properties": {
      "principalId": {
        "description": "The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "principalType": {
        "description": "Principal type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "role": {
        "description": "Database principal role.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "The tenant id of the principal",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "principalId",
      "role",
      "tenantId",
      "principalType"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Kusto/clusters/principalAssignments": {
    "api_version": "2020-02-15",
    "full_properties": {
      "principalId": {
        "description": "The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "principalType": {
        "description": "Principal type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "role": {
        "description": "Cluster principal role.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "The tenant id of the principal",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "principalId",
      "role",
      "tenantId",
      "principalType"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.LabServices/labaccounts": {
    "api_version": "2018-10-15",
    "full_properties": {
      "enabledRegionSelection": {
        "description": "Represents if region selection is enabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabledRegionSelection",
      "provisioningState",
      "uniqueIdentifier"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LabServices/labaccounts/galleryimages": {
    "api_version": "2018-10-15",
    "full_properties": {
      "description": {
        "description": "The description of this gallery Image Definition resource. This property is updatable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "disallowed": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endOfLifeDate": {
        "description": "The end of life date of the gallery Image Definition. This property can be used for decommissioning purposes. This property is updatable.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "eula": {
        "description": "The Eula agreement for the gallery Image Definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hyperVGeneration": {
        "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identifier": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "Indicates whether this gallery image is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isOverride": {
        "description": "Indicates whether this gallery has been overridden for this lab account",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isPlanAuthorized": {
        "description": "Indicates if the plan has been authorized for programmatic deployment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osState": {
        "description": "This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privacyStatementUri": {
        "description": "The privacy statement uri.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "purchasePlan": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recommended": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "releaseNoteUri": {
        "description": "The release note uri.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "eula",
      "privacyStatementUri",
      "releaseNoteUri",
      "osType",
      "osState",
      "endOfLifeDate",
      "identifier",
      "recommended",
      "disallowed",
      "purchasePlan",
      "isEnabled",
      "isOverride",
      "isPlanAuthorized",
      "provisioningState",
      "uniqueIdentifier",
      "hyperVGeneration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LabServices/labaccounts/labs": {
    "api_version": "2018-10-15",
    "full_properties": {
      "announcement": {
        "description": "Properties of a lab's announcement banner",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "artifactsStorageAccount": {
        "description": "The artifact storage account of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdDate": {
        "description": "The creation date of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultStorageAccount": {
        "description": "The lab's default storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultVirtualNetworkId": {
        "description": "The default virtual network identifier of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "environmentPermission": {
        "description": "The access rights to be granted to the user when provisioning an environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "extendedProperties": {
        "description": "Extended properties of the lab used for experimental features",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "labStorageType": {
        "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mandatoryArtifactsResourceIdsLinux": {
        "description": "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mandatoryArtifactsResourceIdsWindows": {
        "description": "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxUsersInLab": {
        "description": "Maximum number of users allowed in the lab.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "premiumDataDisks": {
        "description": "The setting to enable usage of premium data disks.\r\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\r\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccounts": {
        "description": "The storage accounts of the lab.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "support": {
        "description": "Properties of a lab's support banner",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "usageQuota": {
        "description": "Maximum duration a user can use an environment for in the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userAccessMode": {
        "description": "Lab user access mode (open to all vs. restricted to those listed on the lab).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vaultName": {
        "description": "The name of the key vault of the lab.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "artifactsStorageAccount",
      "createdDate",
      "defaultStorageAccount",
      "defaultVirtualNetworkId",
      "labStorageType",
      "provisioningState",
      "storageAccounts",
      "vaultName",
      "premiumDataDisks",
      "uniqueIdentifier",
      "announcement",
      "environmentPermission",
      "extendedProperties",
      "mandatoryArtifactsResourceIdsLinux",
      "mandatoryArtifactsResourceIdsWindows",
      "support",
      "maxUsersInLab",
      "usageQuota",
      "userAccessMode"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LabServices/labaccounts/labs/environmentsettings": {
    "api_version": "2018-10-15",
    "full_properties": {
      "configurationState": {
        "description": "Describes the user's progress in configuring their environment setting.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Describes the environment and its resource settings",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceSettings": {
        "description": "Represents resource specific settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "title": {
        "description": "Brief title describing the environment and its resource settings",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "configurationState",
      "description",
      "provisioningState",
      "resourceSettings",
      "title",
      "uniqueIdentifier"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LabServices/labaccounts/labs/environmentsettings/environments": {
    "api_version": "2018-10-15",
    "full_properties": {
      "armTemplateDisplayName": {
        "description": "The display name of the Azure Resource Manager template that produced the environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deploymentProperties": {
        "description": "Properties of an environment deployment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceSets": {
        "description": "Represents a VM and the setting Id it was created for.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "armTemplateDisplayName",
      "deploymentProperties",
      "provisioningState",
      "uniqueIdentifier",
      "resourceSets"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.LabServices/labaccounts/labs/users": {
    "api_version": "2018-10-15",
    "full_properties": {
      "encryptedPassword": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identity": {
        "description": "Identity attributes of a lab user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning status of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPassword": {
        "description": "Password used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPasswordHash": {
        "description": "Password hash used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingPasswordHashSalt": {
        "description": "Password hash salt used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingUserName": {
        "description": "Username used for publishing.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scmUri": {
        "description": "Url of SCM site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secretStore": {
        "description": "Properties of a user's secret store.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareAccessRights": {
        "description": "List of shares that the user has rights on. This field should not be specified during user creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uniqueIdentifier": {
        "description": "The unique immutable identifier of a resource (Guid).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userType": {
        "description": "Type of the user.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "identity",
      "provisioningState",
      "secretStore",
      "uniqueIdentifier",
      "publishingPassword",
      "publishingPasswordHash",
      "publishingPasswordHashSalt",
      "publishingUserName",
      "scmUri",
      "encryptedPassword",
      "shareAccessRights",
      "userType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Logic/integrationAccounts": {
    "api_version": "2016-06-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "type",
      "apiVersion"
    ]
  },
  "Microsoft.Logic/integrationAccounts/agreements": {
    "api_version": "2016-06-01",
    "full_properties": {
      "agreementType": {
        "description": "The agreement type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "content": {
        "description": "The content.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "guestIdentity": {
        "description": "The guest identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "guestPartner": {
        "description": "The guest partner.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostIdentity": {
        "description": "The host identity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostPartner": {
        "description": "The host partner.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hostPartner",
      "guestPartner",
      "hostIdentity",
      "guestIdentity",
      "agreementType",
      "content",
      "metadata"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Logic/integrationAccounts/assemblies": {
    "api_version": "2016-06-01",
    "full_properties": {
      "assemblyName": {
        "description": "The map type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "assemblyVersion": {
        "description": "The map type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "content": {
        "description": "The content.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "contentLink": {
        "description": "The content link properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contentType": {
        "description": "The contentType.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "assemblyName",
      "assemblyVersion",
      "content",
      "contentLink",
      "contentType",
      "metadata"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Logic/integrationAccounts/batchConfigurations": {
    "api_version": "2016-06-01",
    "full_properties": {
      "batchGroupName": {
        "description": "The batch group name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "releaseCriteria": {
        "description": "The batch release criteria.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "batchGroupName",
      "releaseCriteria",
      "metadata"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Logic/integrationAccounts/certificates": {
    "api_version": "2016-06-01",
    "full_properties": {
      "key": {
        "description": "The key properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicCertificate": {
        "description": "The public certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publicCertificate",
      "key"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Logic/integrationAccounts/maps": {
    "api_version": "2016-06-01",
    "full_properties": {
      "content": {
        "description": "The content.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "contentLink": {
        "description": "The content link properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contentType": {
        "description": "The contentType.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "mapType": {
        "description": "The map type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "mapType",
      "content",
      "contentLink",
      "contentType"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Logic/integrationAccounts/partners": {
    "api_version": "2016-06-01",
    "full_properties": {
      "content": {
        "description": "The content.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partnerType": {
        "description": "The partner type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "partnerType",
      "metadata",
      "content"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Logic/integrationAccounts/schemas": {
    "api_version": "2016-06-01",
    "full_properties": {
      "content": {
        "description": "The content.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "contentLink": {
        "description": "The content link properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "contentType": {
        "description": "The contentType.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "documentName": {
        "description": "The document name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schemaType": {
        "description": "The schema type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetNamespace": {
        "description": "The target anmespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "schemaType",
      "targetNamespace",
      "documentName",
      "content",
      "contentLink",
      "contentType",
      "metadata"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Logic/workflows": {
    "api_version": "2017-07-01",
    "full_properties": {
      "definition": {
        "description": "The definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "integrationAccount": {
        "description": "The integration account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "The parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The sku.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "The state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "state",
      "sku",
      "definition",
      "parameters",
      "integrationAccount"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.MachineLearning/commitmentPlans": {
    "api_version": "2016-05-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "type"
    ]
  },
  "Microsoft.MachineLearning/webServices": {
    "api_version": "2017-01-01",
    "full_properties": {
      "assets": {
        "description": "Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "commitmentPlan": {
        "description": "Information about the machine learning commitment plan associated with the web service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the web service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnostics": {
        "description": "Diagnostics settings for an Azure ML web service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exampleRequest": {
        "description": "Sample input data for the service's input(s).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exposeSampleData": {
        "description": "When set to true, sample data is included in the web service's swagger definition. The default value is true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "input": {
        "description": "The swagger 2.0 schema describing the service's inputs or outputs. See Swagger specification: http://swagger.io/specification/",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keys": {
        "description": "Access keys for the web service calls.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "machineLearningWorkspace": {
        "description": "Information about the machine learning workspace containing the experiment that is source for the web service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "output": {
        "description": "The swagger 2.0 schema describing the service's inputs or outputs. See Swagger specification: http://swagger.io/specification/",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "payloadsInBlobStorage": {
        "description": "When set to true, indicates that the payload size is larger than 3 MB. Otherwise false. If the payload size exceed 3 MB, the payload is stored in a blob and the PayloadsLocation parameter contains the URI of the blob. Otherwise, this will be set to false and Assets, Input, Output, Package, Parameters, ExampleRequest are inline. The Payload sizes is determined by adding the size of the Assets, Input, Output, Package, Parameters, and the ExampleRequest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "payloadsLocation": {
        "description": "Describes the access location for a blob.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readOnly": {
        "description": "When set to true, indicates that the web service is read-only and can no longer be updated or patched, only removed. Default, is false. Note: Once set to true, you cannot change its value.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "realtimeConfiguration": {
        "description": "Holds the available configuration options for an Azure ML web service endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "Access information for a storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "title": {
        "description": "The title of the web service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "assets",
      "commitmentPlan",
      "description",
      "diagnostics",
      "exampleRequest",
      "exposeSampleData",
      "input",
      "keys",
      "machineLearningWorkspace",
      "output",
      "parameters",
      "readOnly",
      "realtimeConfiguration",
      "storageAccount",
      "title",
      "payloadsInBlobStorage",
      "payloadsLocation"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearning/workspaces": {
    "api_version": "2019-10-01",
    "full_properties": {
      "allowPublicAccessWhenBehindVnet": {
        "description": "The flag to indicate whether to allow public access when behind VNet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationInsights": {
        "description": "ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The workspace provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "batchaiWorkspace": {
        "description": "ARM id of the Batch AI workspace associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectivityEndpoints": {
        "description": "Connectivity endpoints",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerRegistry": {
        "description": "ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDateTime": {
        "description": "The date and time stamp when the workspace was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultDataLakeStorage": {
        "description": "Details of the data lake storage account associated with the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "discoveryUrl": {
        "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This name in mutable",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hbiWorkspace": {
        "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "imageBuildCompute": {
        "description": "The compute name for image build",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultIdentifierId": {
        "description": "The key vault identifier used for encrypted workspaces.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetwork": {
        "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ownerEmail": {
        "description": "The email id of the owner for this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Custom Parameters used for Cluster Creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections to the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForIngestion": {
        "description": "The network access type for accessing Log Analytics ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForQuery": {
        "description": "The network access type for accessing Log Analytics query.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionInDays": {
        "description": "The workspace data retention in days. -1 means Unlimited retention for the Unlimited Sku. 730 days is the maximum allowed for all other Skus. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedPrivateLinkResources": {
        "description": "The list of shared private link resources in this workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU (tier) of a workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlAdministratorLogin": {
        "description": "Login for workspace SQL active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlAdministratorLoginPassword": {
        "description": "SQL administrator login password",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "updatedBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userStorageAccountId": {
        "description": "The fully qualified arm id of the storage account associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkProfile": {
        "description": "Virtual Network Profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "retentionInDays",
      "sku",
      "keyVaultIdentifierId",
      "ownerEmail",
      "userStorageAccountId",
      "description",
      "friendlyName",
      "applicationInsights",
      "batchaiWorkspace",
      "containerRegistry",
      "discoveryUrl",
      "keyVault",
      "storageAccount",
      "authorizations",
      "createdBy",
      "createdDateTime",
      "managedResourceGroupId",
      "parameters",
      "uiDefinitionUri",
      "updatedBy",
      "connectivityEndpoints",
      "defaultDataLakeStorage",
      "managedVirtualNetwork",
      "privateEndpointConnections",
      "sqlAdministratorLogin",
      "sqlAdministratorLoginPassword",
      "virtualNetworkProfile",
      "encryption",
      "hbiWorkspace",
      "publicNetworkAccessForIngestion",
      "publicNetworkAccessForQuery",
      "allowPublicAccessWhenBehindVnet",
      "imageBuildCompute",
      "sharedPrivateLinkResources"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningCompute/operationalizationClusters": {
    "api_version": "2017-08-01-preview",
    "full_properties": {
      "appInsights": {
        "description": "Properties of App Insights.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterType": {
        "description": "The cluster type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerRegistry": {
        "description": "Properties of Azure Container Registry.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerService": {
        "description": "Information about the container service backing the cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "globalServiceConfiguration": {
        "description": "Global configuration for services in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "Properties of Storage Account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appInsights",
      "clusterType",
      "containerRegistry",
      "containerService",
      "description",
      "globalServiceConfiguration",
      "storageAccount"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningExperimentation/accounts": {
    "api_version": "2017-05-01-preview",
    "full_properties": {
      "activeDirectories": {
        "description": "Active Directories",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "The fully qualified arm id of the user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "seats": {
        "description": "The no of users/seats who can access this team account. This property defines the charge on the team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "The properties of a storage account for a machine learning team account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vsoAccountId": {
        "description": "The fully qualified arm id of the vso account to be used for this team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "keyVaultId",
      "seats",
      "storageAccount",
      "vsoAccountId",
      "activeDirectories"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningExperimentation/accounts/workspaces": {
    "api_version": "2017-05-01-preview",
    "full_properties": {
      "allowPublicAccessWhenBehindVnet": {
        "description": "The flag to indicate whether to allow public access when behind VNet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationInsights": {
        "description": "ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The workspace provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "batchaiWorkspace": {
        "description": "ARM id of the Batch AI workspace associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectivityEndpoints": {
        "description": "Connectivity endpoints",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerRegistry": {
        "description": "ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDateTime": {
        "description": "The date and time stamp when the workspace was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultDataLakeStorage": {
        "description": "Details of the data lake storage account associated with the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "discoveryUrl": {
        "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This name in mutable",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hbiWorkspace": {
        "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "imageBuildCompute": {
        "description": "The compute name for image build",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultIdentifierId": {
        "description": "The key vault identifier used for encrypted workspaces.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetwork": {
        "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ownerEmail": {
        "description": "The email id of the owner for this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Custom Parameters used for Cluster Creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections to the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForIngestion": {
        "description": "The network access type for accessing Log Analytics ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForQuery": {
        "description": "The network access type for accessing Log Analytics query.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionInDays": {
        "description": "The workspace data retention in days. -1 means Unlimited retention for the Unlimited Sku. 730 days is the maximum allowed for all other Skus. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedPrivateLinkResources": {
        "description": "The list of shared private link resources in this workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU (tier) of a workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlAdministratorLogin": {
        "description": "Login for workspace SQL active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlAdministratorLoginPassword": {
        "description": "SQL administrator login password",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "updatedBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userStorageAccountId": {
        "description": "The fully qualified arm id of the storage account associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkProfile": {
        "description": "Virtual Network Profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "retentionInDays",
      "sku",
      "keyVaultIdentifierId",
      "ownerEmail",
      "userStorageAccountId",
      "description",
      "friendlyName",
      "applicationInsights",
      "batchaiWorkspace",
      "containerRegistry",
      "discoveryUrl",
      "keyVault",
      "storageAccount",
      "authorizations",
      "createdBy",
      "createdDateTime",
      "managedResourceGroupId",
      "parameters",
      "uiDefinitionUri",
      "updatedBy",
      "connectivityEndpoints",
      "defaultDataLakeStorage",
      "managedVirtualNetwork",
      "privateEndpointConnections",
      "sqlAdministratorLogin",
      "sqlAdministratorLoginPassword",
      "virtualNetworkProfile",
      "encryption",
      "hbiWorkspace",
      "publicNetworkAccessForIngestion",
      "publicNetworkAccessForQuery",
      "allowPublicAccessWhenBehindVnet",
      "imageBuildCompute",
      "sharedPrivateLinkResources"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningExperimentation/accounts/workspaces/projects": {
    "api_version": "2017-05-01-preview",
    "full_properties": {
      "assessmentSolutionId": {
        "description": "Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceId": {
        "description": "The ARM id of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceLocation": {
        "description": "Location of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databasesInfo": {
        "description": "List of DatabaseInfo",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "gitrepo": {
        "description": "The reference to git repo for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "projectStatus": {
        "description": "Assessment project status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceConnectionInfo": {
        "description": "Information for connecting to source",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourcePlatform": {
        "description": "Source platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetConnectionInfo": {
        "description": "Information for connecting to target",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetPlatform": {
        "description": "Target platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "gitrepo",
      "sourcePlatform",
      "targetPlatform",
      "sourceConnectionInfo",
      "targetConnectionInfo",
      "databasesInfo",
      "customerWorkspaceId",
      "customerWorkspaceLocation",
      "provisioningState",
      "assessmentSolutionId",
      "projectStatus"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces": {
    "api_version": "2020-04-01",
    "full_properties": {
      "allowPublicAccessWhenBehindVnet": {
        "description": "The flag to indicate whether to allow public access when behind VNet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationInsights": {
        "description": "ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The workspace provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "batchaiWorkspace": {
        "description": "ARM id of the Batch AI workspace associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectivityEndpoints": {
        "description": "Connectivity endpoints",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerRegistry": {
        "description": "ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDateTime": {
        "description": "The date and time stamp when the workspace was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultDataLakeStorage": {
        "description": "Details of the data lake storage account associated with the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "discoveryUrl": {
        "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This name in mutable",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hbiWorkspace": {
        "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "imageBuildCompute": {
        "description": "The compute name for image build",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultIdentifierId": {
        "description": "The key vault identifier used for encrypted workspaces.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetwork": {
        "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ownerEmail": {
        "description": "The email id of the owner for this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Custom Parameters used for Cluster Creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections to the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForIngestion": {
        "description": "The network access type for accessing Log Analytics ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForQuery": {
        "description": "The network access type for accessing Log Analytics query.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionInDays": {
        "description": "The workspace data retention in days. -1 means Unlimited retention for the Unlimited Sku. 730 days is the maximum allowed for all other Skus. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedPrivateLinkResources": {
        "description": "The list of shared private link resources in this workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU (tier) of a workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlAdministratorLogin": {
        "description": "Login for workspace SQL active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlAdministratorLoginPassword": {
        "description": "SQL administrator login password",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "updatedBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userStorageAccountId": {
        "description": "The fully qualified arm id of the storage account associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkProfile": {
        "description": "Virtual Network Profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "retentionInDays",
      "sku",
      "keyVaultIdentifierId",
      "ownerEmail",
      "userStorageAccountId",
      "description",
      "friendlyName",
      "applicationInsights",
      "batchaiWorkspace",
      "containerRegistry",
      "discoveryUrl",
      "keyVault",
      "storageAccount",
      "authorizations",
      "createdBy",
      "createdDateTime",
      "managedResourceGroupId",
      "parameters",
      "uiDefinitionUri",
      "updatedBy",
      "connectivityEndpoints",
      "defaultDataLakeStorage",
      "managedVirtualNetwork",
      "privateEndpointConnections",
      "sqlAdministratorLogin",
      "sqlAdministratorLoginPassword",
      "virtualNetworkProfile",
      "encryption",
      "hbiWorkspace",
      "publicNetworkAccessForIngestion",
      "publicNetworkAccessForQuery",
      "allowPublicAccessWhenBehindVnet",
      "imageBuildCompute",
      "sharedPrivateLinkResources"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/computes": {
    "api_version": "2020-04-01",
    "full_properties": {
      "computeLocation": {
        "description": "Location for the underlying compute",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the Machine Learning compute.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "ARM resource id of the underlying compute",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "computeLocation",
      "description",
      "resourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections": {
    "api_version": "2020-04-01",
    "full_properties": {
      "groupIds": {
        "description": "GroupIds from the private link service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Maintenance/maintenanceConfigurations": {
    "api_version": "2020-04-01",
    "full_properties": {
      "extensionProperties": {
        "description": "Gets or sets extensionProperties of the maintenanceConfiguration. This is for future use only and would be a set of key value pairs for additional information e.g. whether to follow SDP etc.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maintenanceScope": {
        "description": "Gets or sets maintenanceScope of the configuration. It represent the impact area of the maintenance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "namespace": {
        "description": "Gets or sets namespace of the resource e.g. Microsoft.Maintenance or Microsoft.Sql",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "extensionProperties",
      "maintenanceScope",
      "namespace"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ManagedIdentity/userAssignedIdentities": {
    "api_version": "2018-11-30",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location"
    ]
  },
  "Microsoft.ManagedNetwork/managedNetworks": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "scope": {
        "description": "Scope of a Managed Network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "scope"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ManagedNetwork/managedNetworks/managedNetworkGroups": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "managementGroups": {
        "description": "The collection of management groups covered by the Managed Network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnets": {
        "description": "The collection of  subnets covered by the Managed Network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subscriptions": {
        "description": "The collection of subscriptions covered by the Managed Network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworks": {
        "description": "The collection of virtual nets covered by the Managed Network",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "managementGroups",
      "subnets",
      "subscriptions",
      "virtualNetworks"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ManagedNetwork/managedNetworks/managedNetworkPeeringPolicies": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "hub": {
        "description": "Generic pointer to a resource",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mesh": {
        "description": "Gets or sets the mesh group IDs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "spokes": {
        "description": "Gets or sets the spokes group IDs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "Gets or sets the connectivity type of a network structure policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hub",
      "mesh",
      "spokes",
      "type"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ManagedServices/registrationAssignments": {
    "api_version": "2019-06-01",
    "full_properties": {
      "registrationDefinitionId": {
        "description": "Fully qualified path of the registration definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "registrationDefinitionId"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.ManagedServices/registrationDefinitions": {
    "api_version": "2019-06-01",
    "full_properties": {
      "authorizations": {
        "description": "Authorization tuple containing principal id of the user/security group or service principal and id of the build-in role.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description of the registration definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedByTenantId": {
        "description": "Id of the managedBy tenant.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "registrationDefinitionName": {
        "description": "Name of the registration definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "authorizations",
      "registrationDefinitionName",
      "managedByTenantId"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Maps/accounts": {
    "api_version": "2020-02-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "sku",
      "type"
    ]
  },
  "Microsoft.Maps/accounts/privateAtlases": {
    "api_version": "2020-02-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "type"
    ]
  },
  "Microsoft.Media/mediaServices": {
    "api_version": "2018-07-01",
    "full_properties": {
      "storageAccounts": {
        "description": "The storage accounts for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "storageAccounts"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Media/mediaServices/accountFilters": {
    "api_version": "2018-07-01",
    "full_properties": {
      "firstQuality": {
        "description": "The first quality.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "presentationTimeRange": {
        "description": "The presentation time range.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tracks": {
        "description": "The tracks selection conditions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "presentationTimeRange",
      "firstQuality",
      "tracks"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Media/mediaServices/assets": {
    "api_version": "2018-07-01",
    "full_properties": {
      "alternateId": {
        "description": "The alternate ID of the Asset.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "container": {
        "description": "The name of the asset blob container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The Asset description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountName": {
        "description": "The name of the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "alternateId",
      "description",
      "container",
      "storageAccountName"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Media/mediaServices/assets/assetFilters": {
    "api_version": "2018-07-01",
    "full_properties": {
      "firstQuality": {
        "description": "The first quality.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "presentationTimeRange": {
        "description": "The presentation time range.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tracks": {
        "description": "The tracks selection conditions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "presentationTimeRange",
      "firstQuality",
      "tracks"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Media/mediaServices/contentKeyPolicies": {
    "api_version": "2018-07-01",
    "full_properties": {
      "description": {
        "description": "A description for the Policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "options": {
        "description": "The Key Policy options.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "options"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Media/mediaServices/liveEvents": {
    "api_version": "2018-07-01",
    "full_properties": {
      "crossSiteAccessPolicies": {
        "description": "The Live Event access policies.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The Live Event description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encoding": {
        "description": "The Live Event encoding.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "input": {
        "description": "The Live Event input.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "preview": {
        "description": "The Live Event preview.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "streamOptions": {
        "description": "The options to use for the LiveEvent.  This value is specified at creation time and cannot be updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vanityUrl": {
        "description": "Specifies whether to use a vanity url with the Live Event.  This value is specified at creation time and cannot be updated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "input",
      "preview",
      "encoding",
      "crossSiteAccessPolicies",
      "vanityUrl",
      "streamOptions"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Media/mediaServices/liveEvents/liveOutputs": {
    "api_version": "2018-07-01",
    "full_properties": {
      "archiveWindowLength": {
        "description": "ISO 8601 timespan duration of the archive window length. This is duration that customer want to retain the recorded content.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "assetName": {
        "description": "The asset name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the Live Output.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hls": {
        "description": "The HLS configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "manifestName": {
        "description": "The manifest file name.  If not provided, the service will generate one automatically.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "outputSnapTime": {
        "description": "The output snapshot time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "assetName",
      "archiveWindowLength",
      "manifestName",
      "hls",
      "outputSnapTime"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Media/mediaServices/streamingEndpoints": {
    "api_version": "2018-07-01",
    "full_properties": {
      "accessControl": {
        "description": "The access control definition of the StreamingEndpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilitySetName": {
        "description": "The name of the AvailabilitySet used with this StreamingEndpoint for high availability streaming.  This value can only be set at creation time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cdnEnabled": {
        "description": "The CDN enabled flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cdnProfile": {
        "description": "The CDN profile name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cdnProvider": {
        "description": "The CDN provider name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "crossSiteAccessPolicies": {
        "description": "The StreamingEndpoint access policies.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customHostNames": {
        "description": "The custom host names of the StreamingEndpoint",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The StreamingEndpoint description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxCacheAge": {
        "description": "Max cache age",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleUnits": {
        "description": "The number of scale units.  Use the Scale operation to adjust this value.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "scaleUnits",
      "availabilitySetName",
      "accessControl",
      "maxCacheAge",
      "customHostNames",
      "cdnEnabled",
      "cdnProvider",
      "cdnProfile",
      "crossSiteAccessPolicies"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Media/mediaServices/streamingLocators": {
    "api_version": "2018-07-01",
    "full_properties": {
      "alternativeMediaId": {
        "description": "Alternative Media ID of this Streaming Locator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "assetName": {
        "description": "Asset Name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "contentKeys": {
        "description": "The ContentKeys used by this Streaming Locator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultContentKeyPolicyName": {
        "description": "Name of the default ContentKeyPolicy used by this Streaming Locator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endTime": {
        "description": "The end time of the Streaming Locator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "The start time of the Streaming Locator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "streamingLocatorId": {
        "description": "The StreamingLocatorId of the Streaming Locator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "streamingPolicyName": {
        "description": "Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "assetName",
      "startTime",
      "endTime",
      "streamingLocatorId",
      "streamingPolicyName",
      "defaultContentKeyPolicyName",
      "contentKeys",
      "alternativeMediaId"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Media/mediaServices/streamingPolicies": {
    "api_version": "2018-07-01",
    "full_properties": {
      "commonEncryptionCbcs": {
        "description": "Configuration of CommonEncryptionCbcs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "commonEncryptionCenc": {
        "description": "Configuration of CommonEncryptionCenc",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultContentKeyPolicyName": {
        "description": "Default ContentKey used by current Streaming Policy",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "envelopeEncryption": {
        "description": "Configuration of EnvelopeEncryption",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "noEncryption": {
        "description": "Configurations of NoEncryption",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "defaultContentKeyPolicyName",
      "envelopeEncryption",
      "commonEncryptionCenc",
      "commonEncryptionCbcs",
      "noEncryption"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Media/mediaServices/transforms": {
    "api_version": "2018-07-01",
    "full_properties": {
      "description": {
        "description": "An optional verbose description of the Transform.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "outputs": {
        "description": "An array of one or more TransformOutputs that the Transform should generate.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "outputs"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Media/mediaServices/transforms/jobs": {
    "api_version": "2018-07-01",
    "full_properties": {
      "action": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "correlationData": {
        "description": "Customer provided correlation data that will be returned in Job and JobOutput state events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryInfo": {
        "description": "Additional delivery info.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryType": {
        "description": "Delivery type of Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Optional customer supplied description of the Job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Job details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "input": {
        "description": "The inputs for the Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputs": {
        "description": "The outputs for the Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recurrence": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedule": {
        "description": "Scheduling properties of a job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Gets or sets the job start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Gets or set the job state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "recurrence",
      "startTime",
      "state",
      "description",
      "schedule",
      "details",
      "input",
      "outputs",
      "priority",
      "correlationData",
      "deliveryInfo",
      "deliveryType"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Migrate/assessmentProjects": {
    "api_version": "2019-10-01",
    "full_properties": {
      "assessmentSolutionId": {
        "description": "Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceId": {
        "description": "The ARM id of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceLocation": {
        "description": "Location of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databasesInfo": {
        "description": "List of DatabaseInfo",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "gitrepo": {
        "description": "The reference to git repo for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "projectStatus": {
        "description": "Assessment project status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceConnectionInfo": {
        "description": "Information for connecting to source",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourcePlatform": {
        "description": "Source platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetConnectionInfo": {
        "description": "Information for connecting to target",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetPlatform": {
        "description": "Target platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "gitrepo",
      "sourcePlatform",
      "targetPlatform",
      "sourceConnectionInfo",
      "targetConnectionInfo",
      "databasesInfo",
      "customerWorkspaceId",
      "customerWorkspaceLocation",
      "provisioningState",
      "assessmentSolutionId",
      "projectStatus"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/assessmentProjects/groups": {
    "api_version": "2019-10-01",
    "full_properties": {
      "machines": {
        "description": "List of machine names that are part of this group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "machines"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/assessmentProjects/groups/assessments": {
    "api_version": "2019-10-01",
    "full_properties": {
      "azureDiskType": {
        "description": "Storage type selected for this disk.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureHybridUseBenefit": {
        "description": "AHUB discount on windows virtual machines.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureLocation": {
        "description": "Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureOfferCode": {
        "description": "Offer code according to which cost estimation is done.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azurePricingTier": {
        "description": "Pricing tier for Size evaluation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureStorageRedundancy": {
        "description": "Storage Redundancy type offered by Azure.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureVmFamilies": {
        "description": "List of azure VM families.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "currency": {
        "description": "Currency to report prices in.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "discountPercentage": {
        "description": "Custom discount percentage to be applied on final costs. Can be in the range [0, 100].",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "percentile": {
        "description": "Percentile of performance data used to recommend Azure size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reservedInstance": {
        "description": "Azure reserved instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scalingFactor": {
        "description": "Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sizingCriterion": {
        "description": "Assessment sizing criterion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stage": {
        "description": "User configurable setting that describes the status of the assessment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeRange": {
        "description": "Time range of performance data used to recommend a size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmUptime": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureHybridUseBenefit",
      "azureLocation",
      "azureOfferCode",
      "azurePricingTier",
      "azureStorageRedundancy",
      "currency",
      "discountPercentage",
      "percentile",
      "scalingFactor",
      "sizingCriterion",
      "stage",
      "timeRange",
      "azureDiskType",
      "azureVmFamilies",
      "reservedInstance",
      "vmUptime"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/assessmentProjects/hypervcollectors": {
    "api_version": "2019-10-01",
    "full_properties": {
      "agentProperties": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "discoverySiteId": {
        "description": "The ARM id of the discovery service site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agentProperties",
      "discoverySiteId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/assessmentProjects/vmwarecollectors": {
    "api_version": "2019-10-01",
    "full_properties": {
      "agentProperties": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "discoverySiteId": {
        "description": "The ARM id of the discovery service site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agentProperties",
      "discoverySiteId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/migrateProjects": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "provisioningState": {
        "description": "Provisioning state of the migrate project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "registeredTools": {
        "description": "Gets or sets the list of tools registered with the migrate project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "registeredTools"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/migrateProjects/solutions": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "cleanupState": {
        "description": "Gets or sets the cleanup state of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containedResources": {
        "description": "The azure resources that will be contained within the solutions. They will be locked and gets deleted automatically when the solution is deleted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "details": {
        "description": "Class representing the details of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "goal": {
        "description": "Gets or sets the goal of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purpose": {
        "description": "Gets or sets the purpose of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "referencedResources": {
        "description": "The resources that will be referenced from this solution. Deleting any of those solution out of band will break the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Gets or sets the current status of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "summary": {
        "description": "The solution summary class.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tool": {
        "description": "Gets or sets the tool being used in the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceResourceId": {
        "description": "The azure resourceId for the workspace where the solution will be deployed/enabled.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "workspaceResourceId",
      "containedResources",
      "referencedResources",
      "cleanupState",
      "details",
      "goal",
      "purpose",
      "status",
      "summary",
      "tool"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/projects": {
    "api_version": "2018-02-02",
    "full_properties": {
      "assessmentSolutionId": {
        "description": "Assessment solution ARM id tracked by Microsoft.Migrate/migrateProjects.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceId": {
        "description": "The ARM id of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "customerWorkspaceLocation": {
        "description": "Location of service map workspace created by customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databasesInfo": {
        "description": "List of DatabaseInfo",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "gitrepo": {
        "description": "The reference to git repo for this project.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "projectStatus": {
        "description": "Assessment project status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceConnectionInfo": {
        "description": "Information for connecting to source",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourcePlatform": {
        "description": "Source platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetConnectionInfo": {
        "description": "Information for connecting to target",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetPlatform": {
        "description": "Target platform for the project.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "gitrepo",
      "sourcePlatform",
      "targetPlatform",
      "sourceConnectionInfo",
      "targetConnectionInfo",
      "databasesInfo",
      "customerWorkspaceId",
      "customerWorkspaceLocation",
      "provisioningState",
      "assessmentSolutionId",
      "projectStatus"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/projects/groups": {
    "api_version": "2018-02-02",
    "full_properties": {
      "machines": {
        "description": "List of machine names that are part of this group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "machines"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Migrate/projects/groups/assessments": {
    "api_version": "2018-02-02",
    "full_properties": {
      "azureDiskType": {
        "description": "Storage type selected for this disk.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureHybridUseBenefit": {
        "description": "AHUB discount on windows virtual machines.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureLocation": {
        "description": "Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureOfferCode": {
        "description": "Offer code according to which cost estimation is done.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azurePricingTier": {
        "description": "Pricing tier for Size evaluation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureStorageRedundancy": {
        "description": "Storage Redundancy type offered by Azure.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureVmFamilies": {
        "description": "List of azure VM families.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "currency": {
        "description": "Currency to report prices in.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "discountPercentage": {
        "description": "Custom discount percentage to be applied on final costs. Can be in the range [0, 100].",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "percentile": {
        "description": "Percentile of performance data used to recommend Azure size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reservedInstance": {
        "description": "Azure reserved instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scalingFactor": {
        "description": "Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sizingCriterion": {
        "description": "Assessment sizing criterion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stage": {
        "description": "User configurable setting that describes the status of the assessment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeRange": {
        "description": "Time range of performance data used to recommend a size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmUptime": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureHybridUseBenefit",
      "azureLocation",
      "azureOfferCode",
      "azurePricingTier",
      "azureStorageRedundancy",
      "currency",
      "discountPercentage",
      "percentile",
      "scalingFactor",
      "sizingCriterion",
      "stage",
      "timeRange",
      "azureDiskType",
      "azureVmFamilies",
      "reservedInstance",
      "vmUptime"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NetApp/netAppAccounts": {
    "api_version": "2019-11-01",
    "full_properties": {
      "activeDirectories": {
        "description": "Active Directories",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultId": {
        "description": "The fully qualified arm id of the user key vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "seats": {
        "description": "The no of users/seats who can access this team account. This property defines the charge on the team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "The properties of a storage account for a machine learning team account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vsoAccountId": {
        "description": "The fully qualified arm id of the vso account to be used for this team account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "friendlyName",
      "keyVaultId",
      "seats",
      "storageAccount",
      "vsoAccountId",
      "activeDirectories"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NetApp/netAppAccounts/capacityPools": {
    "api_version": "2019-11-01",
    "full_properties": {
      "applicationLicenses": {
        "description": "The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationPackages": {
        "description": "Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificates": {
        "description": "For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deploymentConfiguration": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "interNodeCommunication": {
        "description": "This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxTasksPerNode": {
        "description": "The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The Batch service does not assign any meaning to metadata; it is solely for the use of user code.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mountConfiguration": {
        "description": "This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkConfiguration": {
        "description": "The network configuration for a pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scaleSettings": {
        "description": "Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceLevel": {
        "description": "The service level of the file system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "size": {
        "description": "Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTask": {
        "description": "In some cases the start task may be re-run even though the node was not rebooted. Due to this, start tasks should be idempotent and exit gracefully if the setup they're performing has already been done. Special care should be taken to avoid start tasks which create breakaway process or install/launch services from the start task working directory, as this will block Batch from being able to re-run the start task.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "taskSchedulingPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userAccounts": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmSize": {
        "description": "For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "serviceLevel",
      "size",
      "applicationLicenses",
      "applicationPackages",
      "certificates",
      "deploymentConfiguration",
      "displayName",
      "interNodeCommunication",
      "maxTasksPerNode",
      "metadata",
      "networkConfiguration",
      "scaleSettings",
      "startTask",
      "taskSchedulingPolicy",
      "userAccounts",
      "vmSize",
      "mountConfiguration"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NetApp/netAppAccounts/capacityPools/volumes": {
    "api_version": "2019-11-01",
    "full_properties": {
      "accessControlRecordIds": {
        "description": "The IDs of the access control records, associated with the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationToken": {
        "description": "A unique file path for the volume. Used when creating mount targets",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataProtection": {
        "description": "DataProtection type volumes include an object containing details of the replication",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportPolicy": {
        "description": "Set of export policy rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isRestoring": {
        "description": "Restoring",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "The monitoring status of the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mountTargets": {
        "description": "List of mount targets",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protocolTypes": {
        "description": "Set of protocol types",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceLevel": {
        "description": "The service level of the file system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sizeInBytes": {
        "description": "The size of the volume in bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snapshotId": {
        "description": "UUID v4 or resource identifier used to identify the Snapshot.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetId": {
        "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "usageThreshold": {
        "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeStatus": {
        "description": "The volume status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeType": {
        "description": "What type of volume is this",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessControlRecordIds",
      "monitoringStatus",
      "sizeInBytes",
      "volumeStatus",
      "volumeType",
      "creationToken",
      "exportPolicy",
      "serviceLevel",
      "subnetId",
      "usageThreshold",
      "mountTargets",
      "protocolTypes",
      "snapshotId",
      "dataProtection",
      "isRestoring"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots": {
    "api_version": "2019-11-01",
    "full_properties": {
      "creationData": {
        "description": "Disk source information. CreationData information cannot be changed after the disk has been created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diskSizeGB": {
        "description": "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryption": {
        "description": "Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettings": {
        "description": "Encryption settings for disk or snapshot",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettingsCollection": {
        "description": "Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fileSystemId": {
        "description": "UUID v4 used to identify the FileSystem",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hyperVGeneration": {
        "description": "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "incremental": {
        "description": "Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The Operating System type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "fileSystemId",
      "osType",
      "creationData",
      "diskSizeGB",
      "encryptionSettings",
      "hyperVGeneration",
      "encryptionSettingsCollection",
      "incremental",
      "encryption"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies": {
    "api_version": "2020-04-01",
    "full_properties": {
      "customRules": {
        "description": "The custom rules inside the policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedRules": {
        "description": "Describes the managedRules structure.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policySettings": {
        "description": "The PolicySettings for policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policySettings",
      "customRules",
      "managedRules"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/ExpressRoutePorts": {
    "api_version": "2020-04-01",
    "full_properties": {
      "bandwidthInGbps": {
        "description": "Bandwidth of procured ports in Gbps.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encapsulation": {
        "description": "Encapsulation method on physical ports.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "links": {
        "description": "The set of physical links of the ExpressRoutePort resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringLocation": {
        "description": "The name of the peering location that the ExpressRoutePort is mapped to physically.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource GUID property of the ExpressRoutePort resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "peeringLocation",
      "bandwidthInGbps",
      "encapsulation",
      "links",
      "resourceGuid"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/FrontDoorWebApplicationFirewallPolicies": {
    "api_version": "2019-10-01",
    "full_properties": {
      "customRules": {
        "description": "Defines contents of custom rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedRules": {
        "description": "Defines the list of managed rule sets for the policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policySettings": {
        "description": "Defines top-level WebApplicationFirewallPolicy configuration settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customRules",
      "managedRules",
      "policySettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/IpAllocations": {
    "api_version": "2020-04-01",
    "full_properties": {
      "allocationTags": {
        "description": "IpAllocation tags.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipamAllocationId": {
        "description": "The IPAM allocation ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "prefix": {
        "description": "The address prefix for the IpAllocation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "prefixLength": {
        "description": "The address prefix length for the IpAllocation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "prefixType": {
        "description": "The address prefix Type for the IpAllocation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "type": {
        "description": "The type for the IpAllocation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "type",
      "prefix",
      "prefixLength",
      "prefixType",
      "ipamAllocationId",
      "allocationTags"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/NetworkExperimentProfiles": {
    "api_version": "2019-11-01",
    "full_properties": {
      "dnsConfig": {
        "description": "The DNS settings of the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledState": {
        "description": "The state of the Experiment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpoints": {
        "description": "The list of endpoints in the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxReturn": {
        "description": "Maximum number of endpoints to be returned for MultiValue routing type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitorConfig": {
        "description": "The endpoint monitoring settings of the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "profileStatus": {
        "description": "The status of the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trafficRoutingMethod": {
        "description": "The traffic routing method of the Traffic Manager profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trafficViewEnrollmentStatus": {
        "description": "Indicates whether Traffic View is 'Enabled' or 'Disabled' for the Traffic Manager profile. Null, indicates 'Disabled'. Enabling this feature will increase the cost of the Traffic Manage profile.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "profileStatus",
      "trafficRoutingMethod",
      "dnsConfig",
      "monitorConfig",
      "endpoints",
      "trafficViewEnrollmentStatus",
      "maxReturn",
      "enabledState",
      "resourceState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/NetworkExperimentProfiles/Experiments": {
    "api_version": "2019-11-01",
    "full_properties": {
      "description": {
        "description": "The description of the details or intents of the Experiment",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabledState": {
        "description": "The state of the Experiment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpointA": {
        "description": "Defines the endpoint properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpointB": {
        "description": "Defines the endpoint properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "enabledState",
      "endpointA",
      "endpointB",
      "resourceState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/applicationGateways": {
    "api_version": "2020-04-01",
    "full_properties": {
      "authenticationCertificates": {
        "description": "Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoscaleConfiguration": {
        "description": "Autoscale Configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backendAddressPools": {
        "description": "Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backendHttpSettingsCollection": {
        "description": "Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customErrorConfigurations": {
        "description": "Custom error configurations of the application gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableFips": {
        "description": "Whether FIPS is enabled on the application gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableHttp2": {
        "description": "Whether HTTP2 is enabled on the application gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "firewallPolicy": {
        "description": "Reference to the FirewallPolicy resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forceFirewallPolicyAssociation": {
        "description": "If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontendIPConfigurations": {
        "description": "Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontendPorts": {
        "description": "Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewayIPConfigurations": {
        "description": "Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpListeners": {
        "description": "Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "probes": {
        "description": "Probes of the application gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "redirectConfigurations": {
        "description": "Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestRoutingRules": {
        "description": "Request routing rules of the application gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "Resource GUID property of the application gateway resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "rewriteRuleSets": {
        "description": "Rewrite rules for the application gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "SKU of the application gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sslCertificates": {
        "description": "SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sslPolicy": {
        "description": "SSL policy of the application gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trustedRootCertificates": {
        "description": "Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "urlPathMaps": {
        "description": "URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "webApplicationFirewallConfiguration": {
        "description": "Web application firewall configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "sku",
      "gatewayIPConfigurations",
      "sslCertificates",
      "frontendIPConfigurations",
      "frontendPorts",
      "backendAddressPools",
      "backendHttpSettingsCollection",
      "httpListeners",
      "requestRoutingRules",
      "resourceGuid",
      "provisioningState",
      "probes",
      "urlPathMaps",
      "sslPolicy",
      "authenticationCertificates",
      "redirectConfigurations",
      "webApplicationFirewallConfiguration",
      "enableHttp2",
      "enableFips",
      "autoscaleConfiguration",
      "trustedRootCertificates",
      "customErrorConfigurations",
      "rewriteRuleSets",
      "firewallPolicy",
      "forceFirewallPolicyAssociation"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/applicationSecurityGroups": {
    "api_version": "2020-04-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/azureFirewalls": {
    "api_version": "2020-04-01",
    "full_properties": {
      "additionalProperties": {
        "description": "The additional properties used to further config this azure firewall.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationRuleCollections": {
        "description": "Collection of application rule collections used by Azure Firewall.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "firewallPolicy": {
        "description": "The firewallPolicy associated with this azure firewall.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipConfigurations": {
        "description": "IP configuration of the Azure Firewall resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementIpConfiguration": {
        "description": "IP configuration of the Azure Firewall used for management traffic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "natRuleCollections": {
        "description": "Collection of NAT rule collections used by Azure Firewall.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkRuleCollections": {
        "description": "Collection of network rule collections used by Azure Firewall.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The Azure Firewall Resource SKU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "threatIntelMode": {
        "description": "The operation mode for Threat Intelligence.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualHub": {
        "description": "The virtualHub to which the firewall belongs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationRuleCollections",
      "networkRuleCollections",
      "ipConfigurations",
      "provisioningState",
      "natRuleCollections",
      "threatIntelMode",
      "virtualHub",
      "firewallPolicy",
      "sku",
      "additionalProperties",
      "managementIpConfiguration"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/bastionHosts": {
    "api_version": "2020-04-01",
    "full_properties": {
      "dnsName": {
        "description": "FQDN for the endpoint on which bastion host is accessible.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipConfigurations": {
        "description": "IP configuration of the Bastion Host resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ipConfigurations",
      "dnsName"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/connections": {
    "api_version": "2020-04-01",
    "full_properties": {
      "authorizationKey": {
        "description": "The authorizationKey.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectionProtocol": {
        "description": "Connection protocol used for this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionStatus": {
        "description": "Virtual network Gateway connection status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionType": {
        "description": "Gateway connection type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dpdTimeoutSeconds": {
        "description": "The dead peer detection timeout of this connection in seconds.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "egressBytesTransferred": {
        "description": "The Egress Bytes Transferred in this connection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableBgp": {
        "description": "EnableBgp flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expressRouteGatewayBypass": {
        "description": "Bypass ExpressRoute Gateway for data forwarding.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ingressBytesTransferred": {
        "description": "The Ingress Bytes Transferred in this connection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipsecPolicies": {
        "description": "The IPSec Policies to be considered by this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "localNetworkGateway2": {
        "description": "The reference to local network gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peer": {
        "description": "The reference to peerings resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Gets or sets Provisioning state of the VirtualNetworkGatewayConnection resource Updating/Deleting/Failed",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource GUID property of the VirtualNetworkGatewayConnection resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "routingWeight": {
        "description": "The routing weight.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedKey": {
        "description": "The IPSec shared key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "trafficSelectorPolicies": {
        "description": "The Traffic Selector Policies to be considered by this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "useLocalAzureIpAddress": {
        "description": "Use private local Azure IP for the connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "usePolicyBasedTrafficSelectors": {
        "description": "Enable policy-based traffic selectors.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkGateway1": {
        "description": "The reference to virtual network gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkGateway2": {
        "description": "The reference to virtual network gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "virtualNetworkGateway1",
      "virtualNetworkGateway2",
      "localNetworkGateway2",
      "connectionType",
      "routingWeight",
      "sharedKey",
      "connectionStatus",
      "egressBytesTransferred",
      "ingressBytesTransferred",
      "peer",
      "resourceGuid",
      "provisioningState",
      "authorizationKey",
      "enableBgp",
      "usePolicyBasedTrafficSelectors",
      "ipsecPolicies",
      "expressRouteGatewayBypass",
      "connectionProtocol",
      "trafficSelectorPolicies",
      "useLocalAzureIpAddress",
      "dpdTimeoutSeconds"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/connections/sharedkey": {
    "api_version": "2019-12-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type",
      "value"
    ]
  },
  "Microsoft.Network/ddosCustomPolicies": {
    "api_version": "2020-04-01",
    "full_properties": {
      "protocolCustomSettings": {
        "description": "The protocol-specific DDoS policy customization parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "protocolCustomSettings"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/ddosProtectionPlans": {
    "api_version": "2020-04-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones": {
    "api_version": "2018-05-01",
    "full_properties": {
      "maxNumberOfRecordSets": {
        "description": "Gets or sets the maximum number of record sets that can be created in this zone.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "numberOfRecordSets": {
        "description": "Gets or sets the current number of record sets in this zone.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "registrationVirtualNetworks": {
        "description": "A list of references to virtual networks that register hostnames in this DNS zone. This is a only when ZoneType is Private.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resolutionVirtualNetworks": {
        "description": "A list of references to virtual networks that resolve records in this DNS zone. This is a only when ZoneType is Private.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneType": {
        "description": "The type of this DNS zone (Public or Private).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "maxNumberOfRecordSets",
      "numberOfRecordSets",
      "zoneType",
      "registrationVirtualNetworks",
      "resolutionVirtualNetworks"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/A": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/AAAA": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/CAA": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/CNAME": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/MX": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/NS": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/PTR": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/SOA": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/SRV": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnsZones/TXT": {
    "api_version": "2018-05-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnszones": {
    "api_version": "2016-04-01",
    "full_properties": {
      "maxNumberOfRecordSets": {
        "description": "Gets or sets the maximum number of record sets that can be created in this zone.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "numberOfRecordSets": {
        "description": "Gets or sets the current number of record sets in this zone.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "registrationVirtualNetworks": {
        "description": "A list of references to virtual networks that register hostnames in this DNS zone. This is a only when ZoneType is Private.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resolutionVirtualNetworks": {
        "description": "A list of references to virtual networks that resolve records in this DNS zone. This is a only when ZoneType is Private.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneType": {
        "description": "The type of this DNS zone (Public or Private).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "maxNumberOfRecordSets",
      "numberOfRecordSets",
      "zoneType",
      "registrationVirtualNetworks",
      "resolutionVirtualNetworks"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnszones/A": {
    "api_version": "2016-04-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnszones/AAAA": {
    "api_version": "2016-04-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnszones/CNAME": {
    "api_version": "2016-04-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnszones/MX": {
    "api_version": "2016-04-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnszones/NS": {
    "api_version": "2016-04-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnszones/PTR": {
    "api_version": "2016-04-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnszones/SOA": {
    "api_version": "2016-04-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnszones/SRV": {
    "api_version": "2016-04-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/dnszones/TXT": {
    "api_version": "2016-04-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/expressRouteCircuits": {
    "api_version": "2020-04-01",
    "full_properties": {
      "allowClassicOperations": {
        "description": "Allow classic operations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowGlobalReach": {
        "description": "Flag to enable Global Reach on the circuit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The list of authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "bandwidthInGbps": {
        "description": "The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "circuitProvisioningState": {
        "description": "The CircuitProvisioningState state of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "expressRoutePort": {
        "description": "The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewayManagerEtag": {
        "description": "The GatewayManager Etag.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "globalReachEnabled": {
        "description": "Flag denoting Global reach status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peerings": {
        "description": "The list of peerings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceKey": {
        "description": "The ServiceKey.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceProviderNotes": {
        "description": "The ServiceProviderNotes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceProviderProperties": {
        "description": "The ServiceProviderProperties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceProviderProvisioningState": {
        "description": "The ServiceProviderProvisioningState state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "circuitProvisioningState",
      "serviceProviderProvisioningState",
      "authorizations",
      "peerings",
      "serviceKey",
      "serviceProviderNotes",
      "serviceProviderProperties",
      "provisioningState",
      "allowClassicOperations",
      "gatewayManagerEtag",
      "allowGlobalReach",
      "expressRoutePort",
      "bandwidthInGbps",
      "globalReachEnabled"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/expressRouteCircuits/authorizations": {
    "api_version": "2020-04-01",
    "full_properties": {
      "authorizationKey": {
        "description": "The authorization key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizationUseStatus": {
        "description": "AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authorizationKey",
      "authorizationUseStatus",
      "provisioningState"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/expressRouteCircuits/peerings": {
    "api_version": "2020-04-01",
    "full_properties": {
      "azureASN": {
        "description": "The Azure ASN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connections": {
        "description": "The list of circuit connections associated with Azure Private Peering for this circuit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expressRouteConnection": {
        "description": "The ExpressRoute connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewayManagerEtag": {
        "description": "The GatewayManager Etag.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipv6PeeringConfig": {
        "description": "The IPv6 peering configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastModifiedBy": {
        "description": "Gets whether the provider or the customer last modified the peering.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "microsoftPeeringConfig": {
        "description": "The Microsoft peering configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peerASN": {
        "description": "The peer ASN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringType": {
        "description": "The peering type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "primaryAzurePort": {
        "description": "The primary port.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "primaryPeerAddressPrefix": {
        "description": "The primary address prefix.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "routeFilter": {
        "description": "The reference to the RouteFilter resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secondaryAzurePort": {
        "description": "The secondary port.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secondaryPeerAddressPrefix": {
        "description": "The secondary address prefix.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sharedKey": {
        "description": "The shared key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "The peering state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stats": {
        "description": "The peering stats of express route circuit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vlanId": {
        "description": "The VLAN ID.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "peeringType",
      "state",
      "azureASN",
      "peerASN",
      "primaryPeerAddressPrefix",
      "secondaryPeerAddressPrefix",
      "primaryAzurePort",
      "secondaryAzurePort",
      "sharedKey",
      "vlanId",
      "microsoftPeeringConfig",
      "stats",
      "provisioningState",
      "gatewayManagerEtag",
      "lastModifiedBy",
      "routeFilter",
      "ipv6PeeringConfig",
      "connections",
      "expressRouteConnection"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/expressRouteCircuits/peerings/connections": {
    "api_version": "2020-04-01",
    "full_properties": {
      "addressPrefix": {
        "description": "/29 IP address space to carve out Customer addresses for tunnels.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizationKey": {
        "description": "The authorization key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "circuitConnectionStatus": {
        "description": "Express Route Circuit connection state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expressRouteCircuitPeering": {
        "description": "Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipv6CircuitConnectionConfig": {
        "description": "IPv6 Address PrefixProperties of the express route circuit connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peerExpressRouteCircuitPeering": {
        "description": "Reference to Express Route Circuit Private Peering Resource of the peered circuit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "expressRouteCircuitPeering",
      "peerExpressRouteCircuitPeering",
      "addressPrefix",
      "authorizationKey",
      "circuitConnectionStatus",
      "ipv6CircuitConnectionConfig"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/expressRouteCrossConnections": {
    "api_version": "2020-04-01",
    "full_properties": {
      "bandwidthInMbps": {
        "description": "The circuit bandwidth In Mbps.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expressRouteCircuit": {
        "description": "The ExpressRouteCircuit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringLocation": {
        "description": "The peering location of the ExpressRoute circuit.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "peerings": {
        "description": "The list of peerings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceProviderNotes": {
        "description": "Additional read only notes set by the connectivity provider.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceProviderProvisioningState": {
        "description": "The provisioning state of the circuit in the connectivity provider system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "serviceProviderProvisioningState",
      "serviceProviderNotes",
      "peerings",
      "peeringLocation",
      "bandwidthInMbps",
      "expressRouteCircuit"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/expressRouteCrossConnections/peerings": {
    "api_version": "2020-04-01",
    "full_properties": {
      "gatewayManagerEtag": {
        "description": "The GatewayManager Etag.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipv6PeeringConfig": {
        "description": "The IPv6 peering configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastModifiedBy": {
        "description": "Gets whether the provider or the customer last modified the peering.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "microsoftPeeringConfig": {
        "description": "The Microsoft peering configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peerASN": {
        "description": "The peer ASN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringType": {
        "description": "The peering type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "primaryPeerAddressPrefix": {
        "description": "The primary address prefix.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secondaryPeerAddressPrefix": {
        "description": "The secondary address prefix.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sharedKey": {
        "description": "The shared key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "The peering state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vlanId": {
        "description": "The VLAN ID.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "peeringType",
      "state",
      "peerASN",
      "primaryPeerAddressPrefix",
      "secondaryPeerAddressPrefix",
      "sharedKey",
      "vlanId",
      "microsoftPeeringConfig",
      "lastModifiedBy",
      "ipv6PeeringConfig",
      "gatewayManagerEtag"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/expressRouteGateways": {
    "api_version": "2020-04-01",
    "full_properties": {
      "autoScaleConfiguration": {
        "description": "Configuration for auto scaling.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualHub": {
        "description": "The Virtual Hub where the ExpressRoute gateway is or will be deployed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoScaleConfiguration",
      "virtualHub",
      "provisioningState"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/expressRouteGateways/expressRouteConnections": {
    "api_version": "2020-04-01",
    "full_properties": {
      "authorizationKey": {
        "description": "Authorization key to establish the connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableInternetSecurity": {
        "description": "Enable internet security.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expressRouteCircuitPeering": {
        "description": "The ExpressRoute circuit peering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingConfiguration": {
        "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingWeight": {
        "description": "The routing weight associated to the connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "expressRouteCircuitPeering",
      "authorizationKey",
      "routingWeight",
      "provisioningState",
      "enableInternetSecurity",
      "routingConfiguration"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/firewallPolicies": {
    "api_version": "2020-04-01",
    "full_properties": {
      "basePolicy": {
        "description": "The parent firewall policy from which rules are inherited.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "intrusionSystemMode": {
        "description": "The operation mode for Intrusion system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "threatIntelMode": {
        "description": "The operation mode for Threat Intelligence.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "threatIntelWhitelist": {
        "description": "ThreatIntel Whitelist for Firewall Policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "transportSecurity": {
        "description": "TLS Configuration definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "basePolicy",
      "threatIntelMode",
      "intrusionSystemMode",
      "threatIntelWhitelist",
      "transportSecurity"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/firewallPolicies/ruleGroups": {
    "api_version": "2020-04-01",
    "full_properties": {
      "priority": {
        "description": "Priority of the Firewall Policy Rule Group resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rules": {
        "description": "Group of Firewall Policy rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "priority",
      "rules"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/frontDoors": {
    "api_version": "2020-05-01",
    "full_properties": {
      "backendPools": {
        "description": "Backend pools available to routing rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backendPoolsSettings": {
        "description": "Settings that apply to all backend pools.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabledState": {
        "description": "Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "A friendly name for the frontDoor",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "frontendEndpoints": {
        "description": "Frontend endpoints available to routing rules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "healthProbeSettings": {
        "description": "Health probe settings associated with this Front Door instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancingSettings": {
        "description": "Load balancing settings associated with this Front Door instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status of the Front Door.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingRules": {
        "description": "Routing rules associated with this Front Door.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "friendlyName",
      "routingRules",
      "loadBalancingSettings",
      "healthProbeSettings",
      "backendPools",
      "frontendEndpoints",
      "enabledState",
      "resourceState",
      "backendPoolsSettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/frontDoors/backendPools": {
    "api_version": "2018-08-01",
    "full_properties": {
      "backends": {
        "description": "The set of backends for this pool",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "healthProbeSettings": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancingSettings": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backends",
      "loadBalancingSettings",
      "healthProbeSettings",
      "resourceState"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/frontDoors/healthProbeSettings": {
    "api_version": "2018-08-01",
    "full_properties": {
      "enabledState": {
        "description": "Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "healthProbeMethod": {
        "description": "Configures which HTTP method to use to probe the backends defined under backendPools.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "intervalInSeconds": {
        "description": "The number of seconds between health probes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "path": {
        "description": "The path to use for the health probe. Default is /",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protocol": {
        "description": "Protocol scheme to use for this probe.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "path",
      "protocol",
      "intervalInSeconds",
      "resourceState",
      "enabledState",
      "healthProbeMethod"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/frontDoors/loadBalancingSettings": {
    "api_version": "2018-08-01",
    "full_properties": {
      "additionalLatencyMilliseconds": {
        "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sampleSize": {
        "description": "The number of samples to consider for load balancing decisions",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "successfulSamplesRequired": {
        "description": "The number of samples within the sample period that must succeed",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "sampleSize",
      "successfulSamplesRequired",
      "additionalLatencyMilliseconds",
      "resourceState"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/frontDoors/routingRules": {
    "api_version": "2018-08-01",
    "full_properties": {
      "acceptedProtocols": {
        "description": "Protocol schemes to match for this rule",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backendPool": {
        "description": "A reference to the BackendPool which this rule routes to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cacheConfiguration": {
        "description": "The caching configuration associated with this rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customForwardingPath": {
        "description": "A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enabledState": {
        "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forwardingProtocol": {
        "description": "Protocol this rule will use when forwarding traffic to backends.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontendEndpoints": {
        "description": "Frontend endpoints associated with this rule",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "patternsToMatch": {
        "description": "The route patterns of the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routeConfiguration": {
        "description": "Base class for all types of Route.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rulesEngine": {
        "description": "Reference to another subresource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "frontendEndpoints",
      "acceptedProtocols",
      "patternsToMatch",
      "customForwardingPath",
      "forwardingProtocol",
      "cacheConfiguration",
      "backendPool",
      "enabledState",
      "resourceState",
      "routeConfiguration",
      "rulesEngine"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/frontDoors/rulesEngines": {
    "api_version": "2020-05-01",
    "full_properties": {
      "resourceState": {
        "description": "Resource status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rules": {
        "description": "A list of rules that define a particular Rules Engine Configuration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resourceState",
      "rules"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Network/interfaceEndpoints": {
    "api_version": "2019-02-01",
    "full_properties": {
      "endpointService": {
        "description": "A reference to the service being brought into the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fqdn": {
        "description": "A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "The ID of the subnet from which the private IP will be allocated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "fqdn",
      "endpointService",
      "subnet"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/ipGroups": {
    "api_version": "2020-04-01",
    "full_properties": {
      "ipAddresses": {
        "description": "IpAddresses/IpAddressPrefixes in the IpGroups resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ipAddresses"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/loadBalancers": {
    "api_version": "2020-04-01",
    "full_properties": {
      "backendAddressPools": {
        "description": "Microsoft.Network/loadBalancers: Backend address pools",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontendIPConfigurations": {
        "description": "Microsoft.Network/loadBalancers: Frontend IP configurations",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "inboundNatPools": {
        "description": "Microsoft.Network/loadBalancers: Inbound NAT pools",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inboundNatRules": {
        "description": "Microsoft.Network/loadBalancers: Inbound NAT rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancingRules": {
        "description": "Microsoft.Network/loadBalancers: Load balancing rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outboundNatRules": {
        "description": "Microsoft.Network/loadBalancers: Outbound NAT rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "probes": {
        "description": "Microsoft.Network/loadBalancers: Probes",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "frontendIPConfigurations",
      "backendAddressPools",
      "loadBalancingRules",
      "probes",
      "inboundNatRules",
      "inboundNatPools",
      "outboundNatRules"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/loadBalancers/backendAddressPools": {
    "api_version": "2020-04-01",
    "full_properties": {
      "backendIPConfigurations": {
        "description": "Gets collection of references to IPs defined in NICs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancerBackendAddresses": {
        "description": "An array of backend addresses.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancingRules": {
        "description": "Gets Load Balancing rules that use this Backend Address Pool",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outboundNatRule": {
        "description": "Gets outbound rules that use this Backend Address Pool",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backendIPConfigurations",
      "loadBalancingRules",
      "outboundNatRule",
      "provisioningState",
      "loadBalancerBackendAddresses"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/loadBalancers/inboundNatRules": {
    "api_version": "2020-04-01",
    "full_properties": {
      "backendIPConfiguration": {
        "description": "Gets or sets a reference to a private ip address defined on a NetworkInterface of a VM. Traffic sent to frontendPort of each of the frontendIPConfigurations is forwarded to the backed IP",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backendPort": {
        "description": "The port used for the internal endpoint. Acceptable values range from 1 to 65535.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableFloatingIP": {
        "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableTcpReset": {
        "description": "Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontendIPConfiguration": {
        "description": "A reference to frontend IP addresses.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontendPort": {
        "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "idleTimeoutInMinutes": {
        "description": "The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protocol": {
        "description": "The reference to the transport protocol used by the load balancing rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "frontendIPConfiguration",
      "backendIPConfiguration",
      "protocol",
      "frontendPort",
      "backendPort",
      "idleTimeoutInMinutes",
      "enableFloatingIP",
      "provisioningState",
      "enableTcpReset"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/localNetworkGateways": {
    "api_version": "2020-04-01",
    "full_properties": {
      "bgpSettings": {
        "description": "Local network gateway's BGP speaker settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fqdn": {
        "description": "FQDN of local network gateway.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "gatewayIpAddress": {
        "description": "IP address of local network gateway.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "localNetworkAddressSpace": {
        "description": "Local network site address space.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Gets or sets Provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource GUID property of the LocalNetworkGateway resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "localNetworkAddressSpace",
      "gatewayIpAddress",
      "resourceGuid",
      "provisioningState",
      "bgpSettings",
      "fqdn"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/natGateways": {
    "api_version": "2020-04-01",
    "full_properties": {
      "idleTimeoutInMinutes": {
        "description": "The idle timeout of the nat gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the NatGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicIpAddresses": {
        "description": "An array of public ip addresses associated with the nat gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIpPrefixes": {
        "description": "An array of public ip prefixes associated with the nat gateway resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource GUID property of the nat gateway resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "idleTimeoutInMinutes",
      "publicIpAddresses",
      "publicIpPrefixes",
      "resourceGuid",
      "provisioningState"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/networkInterfaces": {
    "api_version": "2020-04-01",
    "full_properties": {
      "dnsSettings": {
        "description": "Microsoft.Network/networkInterfaces: DNS settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableIPForwarding": {
        "description": "Microsoft.Network/networkInterfaces: Enable IP forwarding",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipConfigurations": {
        "description": "Microsoft.Network/networkInterfaces: IP configurations",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "networkSecurityGroup": {
        "description": "Microsoft.Network/networkInterfaces: Network security group",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enableIPForwarding",
      "networkSecurityGroup",
      "ipConfigurations",
      "dnsSettings"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/networkInterfaces/tapConfigurations": {
    "api_version": "2020-04-01",
    "full_properties": {
      "virtualNetworkTap": {
        "description": "The reference to the Virtual Network Tap resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "virtualNetworkTap"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/networkProfiles": {
    "api_version": "2020-04-01",
    "full_properties": {
      "containerNetworkInterfaceConfigurations": {
        "description": "List of chid container network interface configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerNetworkInterfaces": {
        "description": "List of child container network interfaces.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "containerNetworkInterfaces",
      "containerNetworkInterfaceConfigurations"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/networkSecurityGroups": {
    "api_version": "2020-04-01",
    "full_properties": {
      "securityRules": {
        "description": "Microsoft.Network/networkSecurityGroups: Security rules",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "securityRules"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/networkSecurityGroups/securityRules": {
    "api_version": "2020-04-01",
    "full_properties": {
      "access": {
        "description": "The network traffic is allowed or denied.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "A description for this rule. Restricted to 140 chars.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "destinationAddressPrefix": {
        "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "destinationAddressPrefixes": {
        "description": "The destination address prefixes. CIDR or destination IP ranges.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destinationApplicationSecurityGroups": {
        "description": "The application security group specified as destination.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destinationPortRange": {
        "description": "The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "destinationPortRanges": {
        "description": "The destination port ranges.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "direction": {
        "description": "The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protocol": {
        "description": "Network protocol this rule applies to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceAddressPrefix": {
        "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceAddressPrefixes": {
        "description": "The CIDR or source IP ranges.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceApplicationSecurityGroups": {
        "description": "The application security group specified as source.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourcePortRange": {
        "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourcePortRanges": {
        "description": "The source port ranges.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "protocol",
      "sourcePortRange",
      "destinationPortRange",
      "sourceAddressPrefix",
      "destinationAddressPrefix",
      "access",
      "priority",
      "direction",
      "provisioningState",
      "sourceAddressPrefixes",
      "destinationAddressPrefixes",
      "sourcePortRanges",
      "destinationPortRanges",
      "sourceApplicationSecurityGroups",
      "destinationApplicationSecurityGroups"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/networkVirtualAppliances": {
    "api_version": "2020-04-01",
    "full_properties": {
      "bootStrapConfigurationBlob": {
        "description": "BootStrapConfigurationBlob storage URLs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cloudInitConfigurationBlob": {
        "description": "CloudInitConfigurationBlob storage URLs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualApplianceAsn": {
        "description": "VirtualAppliance ASN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualHub": {
        "description": "The Virtual Hub where Network Virtual Appliance is being deployed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "bootStrapConfigurationBlob",
      "cloudInitConfigurationBlob",
      "virtualApplianceAsn",
      "virtualHub"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/networkWatchers": {
    "api_version": "2020-04-01",
    "full_properties": {
      "provisioningState": {
        "description": "The provisioning state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/networkWatchers/connectionMonitors": {
    "api_version": "2020-04-01",
    "full_properties": {
      "autoStart": {
        "description": "Determines if the connection monitor will start automatically once created.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destination": {
        "description": "Describes the destination of connection monitor.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endpoints": {
        "description": "List of connection monitor endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitoringIntervalInSeconds": {
        "description": "Monitoring interval in seconds.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notes": {
        "description": "Optional notes to be associated with the connection monitor.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "outputs": {
        "description": "List of connection monitor outputs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Describes the source of connection monitor.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "testConfigurations": {
        "description": "List of connection monitor test configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "testGroups": {
        "description": "List of connection monitor test groups.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "source",
      "destination",
      "autoStart",
      "monitoringIntervalInSeconds",
      "endpoints",
      "testConfigurations",
      "testGroups",
      "outputs",
      "notes"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/networkWatchers/flowLogs": {
    "api_version": "2020-04-01",
    "full_properties": {
      "enabled": {
        "description": "Flag to enable/disable flow logging.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "flowAnalyticsConfiguration": {
        "description": "Parameters that define the configuration of traffic analytics.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "format": {
        "description": "Parameters that define the flow log format.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionPolicy": {
        "description": "Parameters that define the retention policy for flow log.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageId": {
        "description": "ID of the storage account which is used to store the flow log.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetResourceId": {
        "description": "ID of network security group to which flow log will be applied.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "targetResourceId",
      "storageId",
      "enabled",
      "retentionPolicy",
      "format",
      "flowAnalyticsConfiguration"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/networkWatchers/packetCaptures": {
    "api_version": "2020-04-01",
    "full_properties": {
      "bytesToCapturePerPacket": {
        "description": "Number of bytes captured per packet, the remaining bytes are truncated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filters": {
        "description": "A list of packet capture filters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageLocation": {
        "description": "The storage location for a packet capture session.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "target": {
        "description": "The ID of the targeted resource, only VM is currently supported.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timeLimitInSeconds": {
        "description": "Maximum duration of the capture session in seconds.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "totalBytesPerSession": {
        "description": "Maximum size of the capture output.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "target",
      "bytesToCapturePerPacket",
      "totalBytesPerSession",
      "timeLimitInSeconds",
      "storageLocation",
      "filters"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/p2svpnGateways": {
    "api_version": "2020-04-01",
    "full_properties": {
      "customDnsServers": {
        "description": "List of all customer specified DNS servers IP addresses.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customRoutes": {
        "description": "The reference of the address space resource which represents the custom routes specified by the customer for P2SVpnGateway and P2S VpnClient.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "p2SConnectionConfigurations": {
        "description": "List of all p2s connection configurations of the gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "p2SVpnServerConfiguration": {
        "description": "The P2SVpnServerConfiguration to which the p2sVpnGateway is attached to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "p2sConnectionConfigurations": {
        "description": "List of all p2s connection configurations of the gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualHub": {
        "description": "The VirtualHub to which the gateway belongs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnClientAddressPool": {
        "description": "The reference of the address space resource which represents Address space for P2S VpnClient.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnGatewayScaleUnit": {
        "description": "The scale unit for this p2s vpn gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnServerConfiguration": {
        "description": "The VpnServerConfiguration to which the p2sVpnGateway is attached to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "virtualHub",
      "provisioningState",
      "vpnGatewayScaleUnit",
      "p2SVpnServerConfiguration",
      "vpnClientAddressPool",
      "customRoutes",
      "p2sConnectionConfigurations",
      "vpnServerConfiguration",
      "p2SConnectionConfigurations",
      "customDnsServers"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones": {
    "api_version": "2018-09-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/A": {
    "api_version": "2018-09-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/AAAA": {
    "api_version": "2018-09-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/CNAME": {
    "api_version": "2018-09-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/MX": {
    "api_version": "2018-09-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/PTR": {
    "api_version": "2018-09-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/SOA": {
    "api_version": "2018-09-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/SRV": {
    "api_version": "2018-09-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/TXT": {
    "api_version": "2018-09-01",
    "full_properties": {
      "AAAARecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ARecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "CNAMERecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "MXRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "NSRecords": {
        "description": "The list of NS records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "PTRRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SOARecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "SRVRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TTL": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "TXTRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aRecords": {
        "description": "The list of A records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "aaaaRecords": {
        "description": "The list of AAAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "caaRecords": {
        "description": "The list of CAA records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cnameRecord": {
        "description": "The CNAME record in the  record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The metadata attached to the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mxRecords": {
        "description": "The list of MX records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ptrRecords": {
        "description": "The list of PTR records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "soaRecord": {
        "description": "The SOA record in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "srvRecords": {
        "description": "The list of SRV records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetResource": {
        "description": "A reference to an azure resource from where the dns resource value is taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ttl": {
        "description": "The TTL (time-to-live) of the records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "txtRecords": {
        "description": "The list of TXT records in the record set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "TTL",
      "ARecords",
      "AAAARecords",
      "MXRecords",
      "NSRecords",
      "PTRRecords",
      "SRVRecords",
      "TXTRecords",
      "CNAMERecord",
      "SOARecord",
      "metadata",
      "caaRecords",
      "targetResource",
      "ttl",
      "aRecords",
      "aaaaRecords",
      "cnameRecord",
      "mxRecords",
      "ptrRecords",
      "soaRecord",
      "srvRecords",
      "txtRecords"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateDnsZones/virtualNetworkLinks": {
    "api_version": "2018-09-01",
    "full_properties": {
      "registrationEnabled": {
        "description": "Is auto-registration of virtual machine records in the virtual network in the Private DNS zone enabled?",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetwork": {
        "description": "The reference to the virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "virtualNetwork",
      "registrationEnabled"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateEndpoints": {
    "api_version": "2020-04-01",
    "full_properties": {
      "customDnsConfigs": {
        "description": "An array of custom dns configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "manualPrivateLinkServiceConnections": {
        "description": "A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnections": {
        "description": "A grouping of information about the connection to the remote resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "The ID of the subnet from which the private IP will be allocated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "subnet",
      "privateLinkServiceConnections",
      "manualPrivateLinkServiceConnections",
      "customDnsConfigs"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/privateEndpoints/privateDnsZoneGroups": {
    "api_version": "2020-04-01",
    "full_properties": {
      "privateDnsZoneConfigs": {
        "description": "A collection of private dns zone configurations of the private dns zone group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "privateDnsZoneConfigs"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/privateLinkServices": {
    "api_version": "2020-04-01",
    "full_properties": {
      "autoApproval": {
        "description": "The auto-approval list of the private link service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableProxyProtocol": {
        "description": "Whether the private link service is enabled for proxy protocol or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fqdns": {
        "description": "The list of Fqdn.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipConfigurations": {
        "description": "An array of private link service IP configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancerFrontendIpConfigurations": {
        "description": "An array of references to the load balancer IP configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "visibility": {
        "description": "The visibility list of the private link service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "loadBalancerFrontendIpConfigurations",
      "ipConfigurations",
      "visibility",
      "autoApproval",
      "fqdns",
      "enableProxyProtocol"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/privateLinkServices/privateEndpointConnections": {
    "api_version": "2020-04-01",
    "full_properties": {
      "groupIds": {
        "description": "GroupIds from the private link service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/publicIPAddresses": {
    "api_version": "2020-04-01",
    "full_properties": {
      "dnsSettings": {
        "description": "Microsoft.Network/publicIPAddresses: DNS settings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "idleTimeoutInMinutes": {
        "description": "Microsoft.Network/publicIPAddresses: Idle timeout in minutes",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIPAllocationMethod": {
        "description": "Microsoft.Network/publicIPAddresses: Public IP allocation method",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publicIPAllocationMethod",
      "idleTimeoutInMinutes",
      "dnsSettings"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/publicIPPrefixes": {
    "api_version": "2020-04-01",
    "full_properties": {
      "ipPrefix": {
        "description": "The allocated Prefix",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipTags": {
        "description": "The list of tags associated with the public IP prefix.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "prefixLength": {
        "description": "The Length of the Public IP Prefix.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the Public IP prefix resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicIPAddressVersion": {
        "description": "The public IP address version.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicIPAddresses": {
        "description": "The list of all referenced PublicIPAddresses",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource GUID property of the public IP prefix resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "publicIPAddressVersion",
      "ipTags",
      "prefixLength",
      "ipPrefix",
      "publicIPAddresses",
      "resourceGuid",
      "provisioningState"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/routeFilters": {
    "api_version": "2020-04-01",
    "full_properties": {
      "peerings": {
        "description": "A collection of references to express route circuit peerings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rules": {
        "description": "Collection of RouteFilterRules contained within a route filter.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rules",
      "peerings"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/routeFilters/routeFilterRules": {
    "api_version": "2020-04-01",
    "full_properties": {
      "access": {
        "description": "The access type of the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "communities": {
        "description": "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routeFilterRuleType": {
        "description": "The rule type of the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "access",
      "routeFilterRuleType",
      "communities"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/routeTables": {
    "api_version": "2020-04-01",
    "full_properties": {
      "routes": {
        "description": "Microsoft.Network/routeTables: Routes",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "routes"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/routeTables/routes": {
    "api_version": "2020-04-01",
    "full_properties": {
      "addressPrefix": {
        "description": "The destination CIDR to which the route applies.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextHopIpAddress": {
        "description": "The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextHopType": {
        "description": "The type of Azure hop the packet should be sent to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "addressPrefix",
      "nextHopType",
      "nextHopIpAddress",
      "provisioningState"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/securityPartnerProviders": {
    "api_version": "2020-04-01",
    "full_properties": {
      "securityProviderName": {
        "description": "The security provider name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualHub": {
        "description": "The virtualHub to which the Security Partner Provider belongs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "securityProviderName",
      "virtualHub"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/serviceEndpointPolicies": {
    "api_version": "2020-04-01",
    "full_properties": {
      "provisioningState": {
        "description": "The provisioning state of the service endpoint policy. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource GUID property of the service endpoint policy resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceEndpointPolicyDefinitions": {
        "description": "A collection of service endpoint policy definitions of the service endpoint policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "serviceEndpointPolicyDefinitions",
      "resourceGuid",
      "provisioningState"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions": {
    "api_version": "2020-04-01",
    "full_properties": {
      "description": {
        "description": "A description for this rule. Restricted to 140 chars.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the service end point policy definition. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "service": {
        "description": "Service endpoint name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceResources": {
        "description": "A list of service resources.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "service",
      "serviceResources",
      "provisioningState"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/trafficManagerProfiles": {
    "api_version": "2018-04-01",
    "full_properties": {
      "dnsConfig": {
        "description": "DNS configuration settings for the profile",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "endpoints": {
        "description": "The endpoints over which this profile will route traffic",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitorConfig": {
        "description": "Microsoft.Network/trafficManagerProfiles Configuration for monitoring (probing) of endpoints in this profile",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "profileStatus": {
        "description": "The status of the profile (Enabled/Disabled)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "trafficRoutingMethod": {
        "description": "The traffic routing method (Performance/Priority/Weighted/Geographic)",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "profileStatus",
      "trafficRoutingMethod",
      "dnsConfig",
      "monitorConfig",
      "endpoints"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/virtualHubs": {
    "api_version": "2020-04-01",
    "full_properties": {
      "addressPrefix": {
        "description": "Address-prefix for this VirtualHub.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azureFirewall": {
        "description": "The azureFirewall associated with this VirtualHub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "expressRouteGateway": {
        "description": "The expressRouteGateway associated with this VirtualHub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hubVirtualNetworkConnections": {
        "description": "list of all vnet connections with this VirtualHub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "p2SVpnGateway": {
        "description": "The P2SVpnGateway associated with this VirtualHub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routeTable": {
        "description": "The routeTable associated with this virtual hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityPartnerProvider": {
        "description": "The securityPartnerProvider associated with this VirtualHub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProviderName": {
        "description": "The Security Provider name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The sku of this VirtualHub.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualHubRouteTableV2s": {
        "description": "List of all virtual hub route table v2s associated with this VirtualHub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkConnections": {
        "description": "List of all vnet connections with this VirtualHub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualWan": {
        "description": "The VirtualWAN to which the VirtualHub belongs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnGateway": {
        "description": "The VpnGateway associated with this VirtualHub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "virtualWan",
      "hubVirtualNetworkConnections",
      "addressPrefix",
      "provisioningState",
      "vpnGateway",
      "p2SVpnGateway",
      "expressRouteGateway",
      "virtualNetworkConnections",
      "routeTable",
      "azureFirewall",
      "securityProviderName",
      "virtualHubRouteTableV2s",
      "sku",
      "securityPartnerProvider"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/virtualHubs/hubRouteTables": {
    "api_version": "2020-04-01",
    "full_properties": {
      "labels": {
        "description": "List of labels associated with this route table.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routes": {
        "description": "List of all routes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "routes",
      "labels"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/virtualHubs/routeTables": {
    "api_version": "2020-04-01",
    "full_properties": {
      "attachedConnections": {
        "description": "List of all connections attached to this route table v2.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routes": {
        "description": "List of all routes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "routes",
      "attachedConnections"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/virtualNetworkGateways": {
    "api_version": "2020-04-01",
    "full_properties": {
      "activeActive": {
        "description": "ActiveActive flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "bgpSettings": {
        "description": "Virtual network gateway's BGP speaker settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customRoutes": {
        "description": "The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableBgp": {
        "description": "Whether BGP is enabled for this virtual network gateway or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDnsForwarding": {
        "description": "Whether dns forwarding is enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePrivateIpAddress": {
        "description": "Whether private IP needs to be enabled on this gateway for connections or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewayDefaultSite": {
        "description": "The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gatewayType": {
        "description": "The type of this virtual network gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipConfigurations": {
        "description": "IP configurations for virtual network gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Gets or sets Provisioning state of the VirtualNetworkGateway resource Updating/Deleting/Failed",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "radiusSecret": {
        "description": "The radius secret property of the VirtualNetworkGateway resource for vpn client connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "radiusServer": {
        "description": "The radius server address property of the VirtualNetworkGateway resource for vpn client connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceGuid": {
        "description": "The resource GUID property of the VirtualNetworkGateway resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnClientConfiguration": {
        "description": "The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnGatewayGeneration": {
        "description": "The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnType": {
        "description": "The type of this virtual network gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ipConfigurations",
      "gatewayType",
      "vpnType",
      "enableBgp",
      "gatewayDefaultSite",
      "resourceGuid",
      "provisioningState",
      "sku",
      "vpnClientConfiguration",
      "bgpSettings",
      "activeActive",
      "radiusServer",
      "radiusSecret",
      "customRoutes",
      "vpnGatewayGeneration",
      "enableDnsForwarding",
      "enablePrivateIpAddress"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/virtualNetworkTaps": {
    "api_version": "2020-04-01",
    "full_properties": {
      "destinationLoadBalancerFrontEndIPConfiguration": {
        "description": "The reference to the private IP address on the internal Load Balancer that will receive the tap.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destinationNetworkInterfaceIPConfiguration": {
        "description": "The reference to the private IP Address of the collector nic that will receive the tap.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "destinationPort": {
        "description": "The VXLAN destination port that will receive the tapped traffic.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "destinationNetworkInterfaceIPConfiguration",
      "destinationLoadBalancerFrontEndIPConfiguration",
      "destinationPort"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/virtualNetworks": {
    "api_version": "2020-04-01",
    "full_properties": {
      "addressSpace": {
        "description": "Microsoft.Network/virtualNetworks: Address space",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "dhcpOptions": {
        "description": "Microsoft.Network/virtualNetworks: DHCP options",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnets": {
        "description": "Microsoft.Network/virtualNetworks: Subnets",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkPeerings": {
        "description": "Microsoft.Network/virtualNetworks: Virtual Network Peerings",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "addressSpace",
      "dhcpOptions",
      "subnets",
      "virtualNetworkPeerings"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/virtualNetworks/subnets": {
    "api_version": "2020-04-01",
    "full_properties": {
      "addressPrefix": {
        "description": "The address prefix for the subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "addressPrefixes": {
        "description": "List of address prefixes for the subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "delegations": {
        "description": "An array of references to the delegations on the subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipAllocations": {
        "description": "Array of IpAllocation which reference this subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipConfigurations": {
        "description": "Gets array of references to the network interface IP configurations using subnet",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "natGateway": {
        "description": "Nat gateway associated with this subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkSecurityGroup": {
        "description": "The reference to the NetworkSecurityGroup resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateAccessServices": {
        "description": "An array of private access services values.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointNetworkPolicies": {
        "description": "Enable or Disable apply network policies on private end point in the subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkServiceNetworkPolicies": {
        "description": "Enable or Disable apply network policies on private link service in the subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceNavigationLinks": {
        "description": "Gets an array of references to the external resources using subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routeTable": {
        "description": "The reference to the RouteTable resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceAssociationLinks": {
        "description": "Gets an array of references to services injecting into this subnet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceEndpointPolicies": {
        "description": "An array of service endpoint policies.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceEndpoints": {
        "description": "An array of service endpoints.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "addressPrefix",
      "networkSecurityGroup",
      "routeTable",
      "ipConfigurations",
      "provisioningState",
      "privateAccessServices",
      "resourceNavigationLinks",
      "serviceEndpoints",
      "serviceEndpointPolicies",
      "addressPrefixes",
      "serviceAssociationLinks",
      "delegations",
      "natGateway",
      "privateEndpointNetworkPolicies",
      "privateLinkServiceNetworkPolicies",
      "ipAllocations"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/virtualNetworks/virtualNetworkPeerings": {
    "api_version": "2020-04-01",
    "full_properties": {
      "allowForwardedTraffic": {
        "description": "Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowGatewayTransit": {
        "description": "If gateway links can be used in remote virtual networking to link to this virtual network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowVirtualNetworkAccess": {
        "description": "Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringState": {
        "description": "The status of the virtual network peering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "remoteAddressSpace": {
        "description": "The reference to the remote virtual network address space.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "remoteVirtualNetwork": {
        "description": "The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "useRemoteGateways": {
        "description": "If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allowVirtualNetworkAccess",
      "allowForwardedTraffic",
      "allowGatewayTransit",
      "useRemoteGateways",
      "remoteVirtualNetwork",
      "peeringState",
      "provisioningState",
      "remoteAddressSpace"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/virtualRouters": {
    "api_version": "2020-04-01",
    "full_properties": {
      "hostedGateway": {
        "description": "The Gateway on which VirtualRouter is hosted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostedSubnet": {
        "description": "The Subnet on which VirtualRouter is hosted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualRouterAsn": {
        "description": "VirtualRouter ASN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualRouterIps": {
        "description": "VirtualRouter IPs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "virtualRouterAsn",
      "virtualRouterIps",
      "hostedSubnet",
      "hostedGateway"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/virtualRouters/peerings": {
    "api_version": "2020-04-01",
    "full_properties": {
      "peerAsn": {
        "description": "Peer ASN.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peerIp": {
        "description": "Peer IP.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "peerAsn",
      "peerIp"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/virtualWans": {
    "api_version": "2020-04-01",
    "full_properties": {
      "allowBranchToBranchTraffic": {
        "description": "True if branch to branch traffic is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "allowVnetToVnetTraffic": {
        "description": "True if Vnet to Vnet traffic is allowed.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disableVpnEncryption": {
        "description": "Vpn encryption to be disabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "office365LocalBreakoutCategory": {
        "description": "The office local breakout category.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "p2SVpnServerConfigurations": {
        "description": "List of all P2SVpnServerConfigurations associated with the virtual wan.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securityProviderName": {
        "description": "The Security Provider name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "type": {
        "description": "The type of the VirtualWAN.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disableVpnEncryption",
      "provisioningState",
      "securityProviderName",
      "allowBranchToBranchTraffic",
      "allowVnetToVnetTraffic",
      "office365LocalBreakoutCategory",
      "p2SVpnServerConfigurations",
      "type"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/virtualWans/p2sVpnServerConfigurations": {
    "api_version": "2019-07-01",
    "full_properties": {
      "etag": {
        "description": "A unique read-only string that changes whenever the resource is updated.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "The name of the P2SVpnServerConfiguration that is unique within a VirtualWan in a resource group. This name can be used to access the resource along with Paren VirtualWan resource name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "p2SVpnServerConfigRadiusClientRootCertificates": {
        "description": "Radius client root certificate of P2SVpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "p2SVpnServerConfigRadiusServerRootCertificates": {
        "description": "Radius Server root certificate of P2SVpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "p2SVpnServerConfigVpnClientRevokedCertificates": {
        "description": "VPN client revoked certificate of P2SVpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "p2SVpnServerConfigVpnClientRootCertificates": {
        "description": "VPN client root certificate of P2SVpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "radiusServerAddress": {
        "description": "The radius server address property of the P2SVpnServerConfiguration resource for point to site client connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "radiusServerSecret": {
        "description": "The radius secret property of the P2SVpnServerConfiguration resource for point to site client connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vpnClientIpsecPolicies": {
        "description": "VpnClientIpsecPolicies for P2SVpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnProtocols": {
        "description": "VPN protocols for the P2SVpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "name",
      "vpnProtocols",
      "p2SVpnServerConfigVpnClientRootCertificates",
      "p2SVpnServerConfigVpnClientRevokedCertificates",
      "p2SVpnServerConfigRadiusServerRootCertificates",
      "p2SVpnServerConfigRadiusClientRootCertificates",
      "vpnClientIpsecPolicies",
      "radiusServerAddress",
      "radiusServerSecret",
      "etag"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/vpnGateways": {
    "api_version": "2020-04-01",
    "full_properties": {
      "bgpSettings": {
        "description": "Local network gateway's BGP speaker settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connections": {
        "description": "List of all vpn connections to the gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policies": {
        "description": "The policies applied to this vpn gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualHub": {
        "description": "The VirtualHub to which the gateway belongs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnGatewayScaleUnit": {
        "description": "The scale unit for this vpn gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "virtualHub",
      "connections",
      "bgpSettings",
      "provisioningState",
      "policies",
      "vpnGatewayScaleUnit"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/vpnGateways/vpnConnections": {
    "api_version": "2020-04-01",
    "full_properties": {
      "connectionBandwidth": {
        "description": "Expected bandwidth in MBPS.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionStatus": {
        "description": "The connection status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dpdTimeoutSeconds": {
        "description": "The dead peer detection timeout for a vpn connection in seconds.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableBgp": {
        "description": "EnableBgp flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableInternetSecurity": {
        "description": "Enable internet security.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableRateLimiting": {
        "description": "EnableBgp flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipsecPolicies": {
        "description": "The IPSec Policies to be considered by this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "remoteVpnSite": {
        "description": "Id of the connected vpn site.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingConfiguration": {
        "description": "The Routing Configuration indicating the associated and propagated route tables on this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "routingWeight": {
        "description": "Routing weight for vpn connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedKey": {
        "description": "SharedKey for the vpn connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "useLocalAzureIpAddress": {
        "description": "Use local azure ip to initiate connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "usePolicyBasedTrafficSelectors": {
        "description": "Enable policy-based traffic selectors.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnConnectionProtocolType": {
        "description": "Connection protocol used for this connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnLinkConnections": {
        "description": "List of all vpn site link connections to the gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "remoteVpnSite",
      "routingWeight",
      "connectionStatus",
      "sharedKey",
      "enableBgp",
      "ipsecPolicies",
      "provisioningState",
      "vpnConnectionProtocolType",
      "connectionBandwidth",
      "enableRateLimiting",
      "enableInternetSecurity",
      "useLocalAzureIpAddress",
      "usePolicyBasedTrafficSelectors",
      "vpnLinkConnections",
      "dpdTimeoutSeconds",
      "routingConfiguration"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Network/vpnServerConfigurations": {
    "api_version": "2020-04-01",
    "full_properties": {
      "aadAuthenticationParameters": {
        "description": "The set of aad vpn authentication parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "The name of the VpnServerConfiguration that is unique within a resource group.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "radiusClientRootCertificates": {
        "description": "Radius client root certificate of VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "radiusServerAddress": {
        "description": "The radius server address property of the VpnServerConfiguration resource for point to site client connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "radiusServerRootCertificates": {
        "description": "Radius Server root certificate of VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "radiusServerSecret": {
        "description": "The radius secret property of the VpnServerConfiguration resource for point to site client connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "radiusServers": {
        "description": "Multiple Radius Server configuration for VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnAuthenticationTypes": {
        "description": "VPN authentication types for the VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnClientIpsecPolicies": {
        "description": "VpnClientIpsecPolicies for VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnClientRevokedCertificates": {
        "description": "VPN client revoked certificate of VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnClientRootCertificates": {
        "description": "VPN client root certificate of VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnProtocols": {
        "description": "VPN protocols for the VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnServerConfigRadiusClientRootCertificates": {
        "description": "Radius client root certificate of VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnServerConfigRadiusServerRootCertificates": {
        "description": "Radius Server root certificate of VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnServerConfigVpnClientRevokedCertificates": {
        "description": "VPN client revoked certificate of VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnServerConfigVpnClientRootCertificates": {
        "description": "VPN client root certificate of VpnServerConfiguration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "name",
      "vpnProtocols",
      "vpnAuthenticationTypes",
      "vpnServerConfigVpnClientRootCertificates",
      "vpnServerConfigVpnClientRevokedCertificates",
      "vpnServerConfigRadiusServerRootCertificates",
      "vpnServerConfigRadiusClientRootCertificates",
      "vpnClientIpsecPolicies",
      "radiusServerAddress",
      "radiusServerSecret",
      "aadAuthenticationParameters",
      "vpnClientRootCertificates",
      "vpnClientRevokedCertificates",
      "radiusServerRootCertificates",
      "radiusClientRootCertificates",
      "radiusServers"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.Network/vpnSites": {
    "api_version": "2020-04-01",
    "full_properties": {
      "addressSpace": {
        "description": "The AddressSpace that contains an array of IP address ranges.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "bgpProperties": {
        "description": "The set of bgp properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deviceProperties": {
        "description": "The device properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipAddress": {
        "description": "The ip-address for the vpn-site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isSecuritySite": {
        "description": "IsSecuritySite flag.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "siteKey": {
        "description": "The key for vpn-site that can be used for connections.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualWAN": {
        "description": "The VirtualWAN to which the vpnSite belongs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualWan": {
        "description": "The VirtualWAN to which the vpnSite belongs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vpnSiteLinks": {
        "description": "List of all vpn site links.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "virtualWAN",
      "deviceProperties",
      "ipAddress",
      "siteKey",
      "addressSpace",
      "bgpProperties",
      "provisioningState",
      "virtualWan",
      "isSecuritySite",
      "vpnSiteLinks"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "Microsoft.NotificationHubs/namespaces": {
    "api_version": "2017-04-01",
    "full_properties": {
      "name": {
        "description": "Microsoft.NotificationHubs/namespaces: The name of the namespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "namespaceType": {
        "description": "Microsoft.NotificationHubs/namespaces: The type of the namespace",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "name",
      "namespaceType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.NotificationHubs/namespaces/AuthorizationRules": {
    "api_version": "2015-04-01",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.NotificationHubs/namespaces/NotificationHubs/authorizationRules": {
    "api_version": "2015-04-01",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.NotificationHubs/namespaces/notificationHubs": {
    "api_version": "2015-04-01",
    "full_properties": {
      "AdmCredential": {
        "description": "Microsoft.NotificationHubs/namespaces/notificationHubs: ADM credentials for a Notification Hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "BaiduCredential": {
        "description": "Microsoft.NotificationHubs/namespaces/notificationHubs: Baidu credentials for a Notification Hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apnsCredential": {
        "description": "Microsoft.NotificationHubs/namespaces/notificationHubs: APNS credentials for a Notification Hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authorizationRules": {
        "description": "Microsoft.NotificationHubs/namespaces/notificationHubs: Authorization Rules for a Notification Hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "gcmCredential": {
        "description": "Microsoft.NotificationHubs/namespaces/notificationHubs: GCM credentials for a Notification Hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mpnsCredential": {
        "description": "Microsoft.NotificationHubs/namespaces/notificationHubs: MPNS credentials for a Notification Hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "wnsCredential": {
        "description": "Microsoft.NotificationHubs/namespaces/notificationHubs: WNS credentials for a Notification Hub.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "wnsCredential",
      "apnsCredential",
      "gcmCredential",
      "mpnsCredential",
      "AdmCredential",
      "BaiduCredential",
      "authorizationRules"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.NotificationHubs/namespaces/notificationHubs/AuthorizationRules": {
    "api_version": "2017-04-01",
    "full_properties": {
      "claimType": {
        "description": "The type of the claim.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "claimValue": {
        "description": "The value of the claim.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdTime": {
        "description": "The time at which the authorization rule was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyName": {
        "description": "The name of the key that was used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "modifiedTime": {
        "description": "The most recent time the rule was updated.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "primaryKey": {
        "description": "The primary key that was used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "revision": {
        "description": "The revision number for the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "secondaryKey": {
        "description": "The secondary key that was used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights",
      "claimType",
      "claimValue",
      "createdTime",
      "keyName",
      "modifiedTime",
      "primaryKey",
      "revision",
      "secondaryKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/clusters": {
    "api_version": "2020-03-01-preview",
    "full_properties": {
      "addOnFeatures": {
        "description": "The list of add-on features to enable in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationTypeVersionsCleanupPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availableClusterVersions": {
        "description": "The Service Fabric runtime versions available for this cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureActiveDirectory": {
        "description": "The settings to enable AAD authentication on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateCommonNames": {
        "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateThumbprints": {
        "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterCodeVersion": {
        "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSize": {
        "description": "The cluster size",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataIngestionUri": {
        "description": "The cluster data ingestion URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnosticsStorageAccountConfig": {
        "description": "The storage account information for storing Service Fabric diagnostic logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDiskEncryption": {
        "description": "A boolean value that indicates if the cluster's disks are encrypted.",
        "required": false,
        "type": "boolean",
        "update_causes": "unknown"
      },
      "enablePurge": {
        "description": "A boolean value that indicates if the purge operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableStreamingIngest": {
        "description": "A boolean value that indicates if the streaming ingest is enabled.",
        "required": false,
        "type": "boolean",
        "update_causes": "unknown"
      },
      "eventStoreServiceEnabled": {
        "description": "Indicates if the event store service is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fabricSettings": {
        "description": "The list of custom fabric settings to configure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpApplicationGatewayCertificate": {
        "description": "Microsoft.ServiceFabric/clusters: The server certificate used by reverse proxy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultProperties": {
        "description": "The key vault properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementEndpoint": {
        "description": "The http management endpoint of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextLink": {
        "description": "The link used to get the next page of recommendations.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeTypes": {
        "description": "The list of node types in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedAutoscale": {
        "description": "A class that contains the optimized auto scale definition.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioned state of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "reliabilityLevel": {
        "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "The state of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "trustedExternalTenants": {
        "description": "The cluster's external tenants.",
        "required": false,
        "type": "array",
        "update_causes": "unknown"
      },
      "upgradeDescription": {
        "description": "Describes the policy used when upgrading the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeMode": {
        "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n\n  - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.\n  - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The cluster URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkConfiguration": {
        "description": "A class that contains virtual network definition.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "vmImage": {
        "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vmImage",
      "httpApplicationGatewayCertificate",
      "azureActiveDirectory",
      "reliabilityLevel",
      "nodeTypes",
      "managementEndpoint",
      "certificate",
      "clientCertificateThumbprints",
      "clientCertificateCommonNames",
      "fabricSettings",
      "upgradeDescription",
      "diagnosticsStorageAccountConfig",
      "clusterCodeVersion",
      "reverseProxyCertificate",
      "upgradeMode",
      "addOnFeatures",
      "availableClusterVersions",
      "clusterState",
      "certificateCommonNames",
      "reverseProxyCertificateCommonNames",
      "state",
      "provisioningState",
      "uri",
      "dataIngestionUri",
      "trustedExternalTenants",
      "eventStoreServiceEnabled",
      "optimizedAutoscale",
      "enableDiskEncryption",
      "enableStreamingIngest",
      "virtualNetworkConfiguration",
      "keyVaultProperties",
      "nextLink",
      "clusterSize",
      "applicationTypeVersionsCleanupPolicy",
      "enablePurge"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/workspaces": {
    "api_version": "2020-03-01-preview",
    "full_properties": {
      "allowPublicAccessWhenBehindVnet": {
        "description": "The flag to indicate whether to allow public access when behind VNet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationInsights": {
        "description": "ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The workspace provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "batchaiWorkspace": {
        "description": "ARM id of the Batch AI workspace associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectivityEndpoints": {
        "description": "Connectivity endpoints",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerRegistry": {
        "description": "ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDateTime": {
        "description": "The date and time stamp when the workspace was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultDataLakeStorage": {
        "description": "Details of the data lake storage account associated with the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "discoveryUrl": {
        "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This name in mutable",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hbiWorkspace": {
        "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "imageBuildCompute": {
        "description": "The compute name for image build",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultIdentifierId": {
        "description": "The key vault identifier used for encrypted workspaces.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetwork": {
        "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ownerEmail": {
        "description": "The email id of the owner for this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Custom Parameters used for Cluster Creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections to the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForIngestion": {
        "description": "The network access type for accessing Log Analytics ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForQuery": {
        "description": "The network access type for accessing Log Analytics query.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionInDays": {
        "description": "The workspace data retention in days. -1 means Unlimited retention for the Unlimited Sku. 730 days is the maximum allowed for all other Skus. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedPrivateLinkResources": {
        "description": "The list of shared private link resources in this workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU (tier) of a workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlAdministratorLogin": {
        "description": "Login for workspace SQL active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlAdministratorLoginPassword": {
        "description": "SQL administrator login password",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "updatedBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userStorageAccountId": {
        "description": "The fully qualified arm id of the storage account associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkProfile": {
        "description": "Virtual Network Profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "retentionInDays",
      "sku",
      "keyVaultIdentifierId",
      "ownerEmail",
      "userStorageAccountId",
      "description",
      "friendlyName",
      "applicationInsights",
      "batchaiWorkspace",
      "containerRegistry",
      "discoveryUrl",
      "keyVault",
      "storageAccount",
      "authorizations",
      "createdBy",
      "createdDateTime",
      "managedResourceGroupId",
      "parameters",
      "uiDefinitionUri",
      "updatedBy",
      "connectivityEndpoints",
      "defaultDataLakeStorage",
      "managedVirtualNetwork",
      "privateEndpointConnections",
      "sqlAdministratorLogin",
      "sqlAdministratorLoginPassword",
      "virtualNetworkProfile",
      "encryption",
      "hbiWorkspace",
      "publicNetworkAccessForIngestion",
      "publicNetworkAccessForQuery",
      "allowPublicAccessWhenBehindVnet",
      "imageBuildCompute",
      "sharedPrivateLinkResources"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/workspaces/dataExports": {
    "api_version": "2020-03-01-preview",
    "full_properties": {
      "allTables": {
        "description": "When ‘true’, all workspace's tables are exported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDate": {
        "description": "The latest data export rule modification time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataExportId": {
        "description": "The data export rule ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "destination": {
        "description": "Destination properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enable": {
        "description": "Active when enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastModifiedDate": {
        "description": "Date and time when the export was last modified.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tableNames": {
        "description": "An array of tables to export, for example: [“Heartbeat, SecurityEvent”].",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "allTables",
      "createdDate",
      "dataExportId",
      "destination",
      "enable",
      "lastModifiedDate",
      "tableNames"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/workspaces/dataSources": {
    "api_version": "2020-03-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "kind",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/workspaces/linkedServices": {
    "api_version": "2020-03-01-preview",
    "full_properties": {
      "provisioningState": {
        "description": "The provisioning state of the linked service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceId": {
        "description": "The resource id of the resource that will be linked to the workspace. This should be used for linking resources which require read access",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "writeAccessResourceId": {
        "description": "The resource id of the resource that will be linked to the workspace. This should be used for linking resources which require write access",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "resourceId",
      "writeAccessResourceId",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/workspaces/linkedStorageAccounts": {
    "api_version": "2020-03-01-preview",
    "full_properties": {
      "storageAccountIds": {
        "description": "Linked storage accounts resources ids.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "storageAccountIds"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/workspaces/savedSearches": {
    "api_version": "2020-03-01-preview",
    "full_properties": {
      "category": {
        "description": "The category of the saved search. This helps the user to find a saved search faster. ",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "Saved search display name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "query": {
        "description": "The query expression for the saved search. Please see https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-search-reference for reference.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tags": {
        "description": "The tags attached to the saved search.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "The version number of the query language. The current version is 2 and is the default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "category",
      "displayName",
      "query",
      "tags",
      "version"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationalInsights/workspaces/storageInsightConfigs": {
    "api_version": "2020-03-01-preview",
    "full_properties": {
      "containers": {
        "description": "The names of the blob containers that the workspace should read",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "Describes a storage account connection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tables": {
        "description": "The names of the Azure tables that the workspace should read",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "containers",
      "storageAccount",
      "tables"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.OperationsManagement/ManagementConfigurations": {
    "api_version": "2015-11-01-preview",
    "full_properties": {
      "applicationId": {
        "description": "The applicationId of the appliance for this Management.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Parameters to run the ARM template",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parentResourceType": {
        "description": "The type of the parent resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "template": {
        "description": "The Json object containing the ARM template to deploy",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "applicationId",
      "parentResourceType",
      "parameters",
      "template"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.OperationsManagement/solutions": {
    "api_version": "2015-11-01-preview",
    "full_properties": {
      "cleanupState": {
        "description": "Gets or sets the cleanup state of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containedResources": {
        "description": "The azure resources that will be contained within the solutions. They will be locked and gets deleted automatically when the solution is deleted.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "details": {
        "description": "Class representing the details of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "goal": {
        "description": "Gets or sets the goal of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "purpose": {
        "description": "Gets or sets the purpose of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "referencedResources": {
        "description": "The resources that will be referenced from this solution. Deleting any of those solution out of band will break the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Gets or sets the current status of the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "summary": {
        "description": "The solution summary class.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tool": {
        "description": "Gets or sets the tool being used in the solution.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workspaceResourceId": {
        "description": "The azure resourceId for the workspace where the solution will be deployed/enabled.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "workspaceResourceId",
      "containedResources",
      "referencedResources",
      "cleanupState",
      "details",
      "goal",
      "purpose",
      "status",
      "summary",
      "tool"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Peering/peeringServices": {
    "api_version": "2020-01-01-preview",
    "full_properties": {
      "peeringServiceLocation": {
        "description": "The PeeringServiceLocation of the Customer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "peeringServiceProvider": {
        "description": "The MAPS Provider Name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "peeringServiceLocation",
      "peeringServiceProvider"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Peering/peeringServices/prefixes": {
    "api_version": "2020-01-01-preview",
    "full_properties": {
      "learnedType": {
        "description": "The prefix learned type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringServicePrefixKey": {
        "description": "The peering service prefix key",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "prefix": {
        "description": "The prefix from which your traffic originates.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "prefixValidationState": {
        "description": "The prefix validation state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "learnedType",
      "prefix",
      "prefixValidationState",
      "peeringServicePrefixKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Peering/peerings": {
    "api_version": "2020-01-01-preview",
    "full_properties": {
      "direct": {
        "description": "The properties that define a direct peering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exchange": {
        "description": "The properties that define an exchange peering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "peeringLocation": {
        "description": "The location of the peering.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "direct",
      "exchange",
      "peeringLocation"
    ],
    "required": [
      "apiVersion",
      "kind",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.Peering/peerings/registeredAsns": {
    "api_version": "2020-01-01-preview",
    "full_properties": {
      "asn": {
        "description": "The customer's ASN from which traffic originates.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "asn"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Peering/peerings/registeredPrefixes": {
    "api_version": "2020-01-01-preview",
    "full_properties": {
      "prefix": {
        "description": "The customer's prefix from which traffic originates.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "prefix"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.PolicyInsights/remediations": {
    "api_version": "2019-07-01",
    "full_properties": {
      "deploymentStatus": {
        "description": "The deployment status summary for all deployments created by the remediation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filters": {
        "description": "The filters that will be applied to determine which resources to remediate.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "policyAssignmentId": {
        "description": "The resource ID of the policy assignment that should be remediated.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policyDefinitionReferenceId": {
        "description": "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceDiscoveryMode": {
        "description": "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "deploymentStatus",
      "filters",
      "policyAssignmentId",
      "policyDefinitionReferenceId",
      "resourceDiscoveryMode"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Portal/dashboards": {
    "api_version": "2019-01-01-preview",
    "full_properties": {
      "lenses": {
        "description": "The dashboard lenses.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "The dashboard metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "lenses",
      "metadata"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.PowerBI/workspaceCollections": {
    "api_version": "2016-01-29",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.PowerBIDedicated/capacities": {
    "api_version": "2017-10-01",
    "full_properties": {
      "administration": {
        "description": "An array of administrator user identities",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administration"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "sku",
      "type"
    ]
  },
  "Microsoft.RecoveryServices/vaults": {
    "api_version": "2018-01-10",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "type",
      "apiVersion",
      "sku",
      "location",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/backupFabrics/backupProtectionIntent": {
    "api_version": "2017-07-01",
    "full_properties": {
      "backupManagementType": {
        "description": "Type of backup management for the backed up item.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "itemId": {
        "description": "ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policyId": {
        "description": "ID of the backup policy with which this item is backed up.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protectionIntentItemType": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protectionState": {
        "description": "Backup state of this backup item.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceResourceId": {
        "description": "ARM ID of the resource to be backed up.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backupManagementType",
      "sourceResourceId",
      "itemId",
      "policyId",
      "protectionState",
      "protectionIntentItemType"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers": {
    "api_version": "2016-12-01",
    "full_properties": {
      "backupManagementType": {
        "description": "Type of backup management for the container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerType": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly name of the container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "healthStatus": {
        "description": "Status of health of the container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "registrationStatus": {
        "description": "Status of registration of the container with the Recovery Services Vault.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "friendlyName",
      "backupManagementType",
      "registrationStatus",
      "healthStatus",
      "containerType"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems": {
    "api_version": "2016-12-01",
    "full_properties": {
      "backupManagementType": {
        "description": "Type of backup management for the backed up item.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "backupSetName": {
        "description": "Name of the backup set the backup item belongs to",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "containerName": {
        "description": "Unique name of container",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "lastRecoveryPoint": {
        "description": "Timestamp when the last (latest) backup copy was created for this backup item.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "policyId": {
        "description": "ID of the backup policy with which this item is backed up.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protectedItemType": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceResourceId": {
        "description": "ARM ID of the resource to be backed up.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "workloadType": {
        "description": "Type of workload this item represents.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backupManagementType",
      "workloadType",
      "containerName",
      "sourceResourceId",
      "policyId",
      "lastRecoveryPoint",
      "backupSetName",
      "createMode",
      "protectedItemType"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/backupPolicies": {
    "api_version": "2016-12-01",
    "full_properties": {
      "backupManagementType": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protectedItemsCount": {
        "description": "Number of items associated with this policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "protectedItemsCount",
      "backupManagementType"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/backupstorageconfig": {
    "api_version": "2016-12-01",
    "full_properties": {
      "storageModelType": {
        "description": "Storage type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageType": {
        "description": "Storage type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageTypeState": {
        "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "storageModelType",
      "storageType",
      "storageTypeState"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/certificates": {
    "api_version": "2016-06-01",
    "full_properties": {
      "authType": {
        "description": "Specify the Authentication type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "Gets or sets the base64 encoded certificate raw data string",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authType",
      "certificate"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/extendedInformation": {
    "api_version": "2016-06-01",
    "full_properties": {
      "algorithm": {
        "description": "Algorithm for Vault ExtendedInfo",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptionKey": {
        "description": "Encryption key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptionKeyThumbprint": {
        "description": "Encryption key thumbprint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "integrityKey": {
        "description": "Integrity key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "integrityKey",
      "encryptionKey",
      "encryptionKeyThumbprint",
      "algorithm"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationAlertSettings": {
    "api_version": "2018-01-10",
    "full_properties": {
      "customEmailAddresses": {
        "description": "The custom email address for sending emails.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "locale": {
        "description": "The locale for the email notification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sendToOwners": {
        "description": "A value indicating whether to send email to subscription administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "sendToOwners",
      "customEmailAddresses",
      "locale"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics": {
    "api_version": "2018-01-10",
    "full_properties": {
      "customDetails": {
        "description": "Fabric provider specific creation input.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customDetails"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationNetworks/replicationNetworkMappings": {
    "api_version": "2018-01-10",
    "full_properties": {
      "fabricSpecificDetails": {
        "description": "Fabric specific input properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recoveryFabricName": {
        "description": "Recovery fabric Name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryNetworkId": {
        "description": "Recovery network Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "recoveryFabricName",
      "recoveryNetworkId",
      "fabricSpecificDetails"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers": {
    "api_version": "2018-01-10",
    "full_properties": {
      "providerSpecificInput": {
        "description": "Provider specific inputs for container creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "providerSpecificInput"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationMigrationItems": {
    "api_version": "2018-01-10",
    "full_properties": {
      "policyId": {
        "description": "The policy Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "providerSpecificDetails": {
        "description": "The provider specific details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policyId",
      "providerSpecificDetails"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectedItems": {
    "api_version": "2018-01-10",
    "full_properties": {
      "policyId": {
        "description": "The Policy Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "protectableItemId": {
        "description": "The protectable item Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "providerSpecificDetails": {
        "description": "The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policyId",
      "protectableItemId",
      "providerSpecificDetails"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings": {
    "api_version": "2018-01-10",
    "full_properties": {
      "policyId": {
        "description": "Applicable policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "providerSpecificInput": {
        "description": "Provider specific input for pairing.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetProtectionContainerId": {
        "description": "The target unique protection container name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "targetProtectionContainerId",
      "policyId",
      "providerSpecificInput"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationRecoveryServicesProviders": {
    "api_version": "2018-01-10",
    "full_properties": {
      "authenticationIdentityInput": {
        "description": "The identity provider input for DRA authentication.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "machineName": {
        "description": "The name of the machine where the provider is getting added.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceAccessIdentityInput": {
        "description": "The identity provider input for resource access.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "machineName",
      "authenticationIdentityInput",
      "resourceAccessIdentityInput"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationStorageClassifications/replicationStorageClassificationMappings": {
    "api_version": "2018-01-10",
    "full_properties": {
      "targetStorageClassificationId": {
        "description": "The ID of the storage object.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "targetStorageClassificationId"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationvCenters": {
    "api_version": "2018-01-10",
    "full_properties": {
      "friendlyName": {
        "description": "The friendly name of the vCenter.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipAddress": {
        "description": "The IP address of the vCenter to be discovered.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "port": {
        "description": "The port number for discovery.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "processServerId": {
        "description": "The process server Id from where the discovery is orchestrated.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "runAsAccountId": {
        "description": "The account Id which has privileges to discover the vCenter.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "friendlyName",
      "ipAddress",
      "processServerId",
      "port",
      "runAsAccountId"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationPolicies": {
    "api_version": "2018-01-10",
    "full_properties": {
      "providerSpecificInput": {
        "description": "The ReplicationProviderSettings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "providerSpecificInput"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.RecoveryServices/vaults/replicationRecoveryPlans": {
    "api_version": "2018-01-10",
    "full_properties": {
      "failoverDeploymentModel": {
        "description": "The failover deployment model.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "groups": {
        "description": "The recovery plan groups.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "primaryFabricId": {
        "description": "The primary fabric Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryFabricId": {
        "description": "The recovery fabric Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "primaryFabricId",
      "recoveryFabricId",
      "failoverDeploymentModel",
      "groups"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Relay/namespaces": {
    "api_version": "2018-01-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/AuthorizationRules": {
    "api_version": "2016-07-01",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/HybridConnections": {
    "api_version": "2016-07-01",
    "full_properties": {
      "hostname": {
        "description": "The hostname of the endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "port": {
        "description": "The port of the endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "relayArmUri": {
        "description": "The ARM URI to the Service Bus relay.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "relayName": {
        "description": "The name of the Service Bus relay.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requiresClientAuthorization": {
        "description": "Returns true if client authorization is needed for this hybrid connection; otherwise, false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sendKeyName": {
        "description": "The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sendKeyValue": {
        "description": "The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned\nnormally, use the POST /listKeys API instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceBusNamespace": {
        "description": "The name of the Service Bus namespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceBusSuffix": {
        "description": "The suffix for the service bus endpoint. By default this is .servicebus.windows.net",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userMetadata": {
        "description": "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "requiresClientAuthorization",
      "userMetadata",
      "hostname",
      "port",
      "relayArmUri",
      "relayName",
      "sendKeyName",
      "sendKeyValue",
      "serviceBusNamespace",
      "serviceBusSuffix"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/HybridConnections/authorizationRules": {
    "api_version": "2016-07-01",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/WcfRelays": {
    "api_version": "2016-07-01",
    "full_properties": {
      "relayType": {
        "description": "WCF relay type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresClientAuthorization": {
        "description": "Returns true if client authorization is needed for this relay; otherwise, false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresTransportSecurity": {
        "description": "Returns true if transport security is needed for this relay; otherwise, false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userMetadata": {
        "description": "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "relayType",
      "requiresClientAuthorization",
      "requiresTransportSecurity",
      "userMetadata"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/WcfRelays/authorizationRules": {
    "api_version": "2016-07-01",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/authorizationRules": {
    "api_version": "2017-04-01",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/hybridConnections": {
    "api_version": "2017-04-01",
    "full_properties": {
      "hostname": {
        "description": "The hostname of the endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "port": {
        "description": "The port of the endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "relayArmUri": {
        "description": "The ARM URI to the Service Bus relay.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "relayName": {
        "description": "The name of the Service Bus relay.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requiresClientAuthorization": {
        "description": "Returns true if client authorization is needed for this hybrid connection; otherwise, false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sendKeyName": {
        "description": "The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sendKeyValue": {
        "description": "The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned\nnormally, use the POST /listKeys API instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceBusNamespace": {
        "description": "The name of the Service Bus namespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceBusSuffix": {
        "description": "The suffix for the service bus endpoint. By default this is .servicebus.windows.net",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userMetadata": {
        "description": "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "requiresClientAuthorization",
      "userMetadata",
      "hostname",
      "port",
      "relayArmUri",
      "relayName",
      "sendKeyName",
      "sendKeyValue",
      "serviceBusNamespace",
      "serviceBusSuffix"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/hybridConnections/authorizationRules": {
    "api_version": "2017-04-01",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/privateEndpointConnections": {
    "api_version": "2018-01-01-preview",
    "full_properties": {
      "groupIds": {
        "description": "GroupIds from the private link service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/wcfRelays": {
    "api_version": "2017-04-01",
    "full_properties": {
      "relayType": {
        "description": "WCF relay type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresClientAuthorization": {
        "description": "Returns true if client authorization is needed for this relay; otherwise, false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresTransportSecurity": {
        "description": "Returns true if transport security is needed for this relay; otherwise, false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userMetadata": {
        "description": "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "relayType",
      "requiresClientAuthorization",
      "requiresTransportSecurity",
      "userMetadata"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Relay/namespaces/wcfRelays/authorizationRules": {
    "api_version": "2017-04-01",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ResourceGraph/queries": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "description": {
        "description": "The description of a graph query.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "query": {
        "description": "KQL query that will be graph.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "query"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Resources/deploymentScripts": {
    "api_version": "2019-10-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "identity",
      "location",
      "name",
      "type"
    ]
  },
  "Microsoft.Resources/deployments": {
    "api_version": "2019-10-01",
    "full_properties": {
      "expressionEvaluationOptions": {
        "description": "Template expression evaluation options'",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mode": {
        "description": "Deployment mode",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Deployment parameters",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parametersLink": {
        "description": "Deployment parameters link",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "template": {
        "description": "Deployment template",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "templateLink": {
        "description": "Deployment template link",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "expressionEvaluationOptions",
      "mode",
      "templateLink",
      "template",
      "parametersLink",
      "parameters"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Resources/links": {
    "api_version": "2015-01-01",
    "full_properties": {
      "notes": {
        "description": "Notes for this link",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetId": {
        "description": "Target resource id to link to",
        "required": true,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "targetId",
      "notes"
    ],
    "required": [
      "type",
      "apiVersion",
      "name",
      "properties"
    ]
  },
  "Microsoft.Scheduler/jobCollections": {
    "api_version": "2016-03-01",
    "full_properties": {
      "quota": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Gets or sets the state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "quota",
      "sku",
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Scheduler/jobCollections/jobs": {
    "api_version": "2016-03-01",
    "full_properties": {
      "action": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "correlationData": {
        "description": "Customer provided correlation data that will be returned in Job and JobOutput state events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryInfo": {
        "description": "Additional delivery info.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryType": {
        "description": "Delivery type of Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Optional customer supplied description of the Job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Job details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "input": {
        "description": "The inputs for the Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputs": {
        "description": "The outputs for the Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recurrence": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedule": {
        "description": "Scheduling properties of a job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Gets or sets the job start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Gets or set the job state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "recurrence",
      "startTime",
      "state",
      "description",
      "schedule",
      "details",
      "input",
      "outputs",
      "priority",
      "correlationData",
      "deliveryInfo",
      "deliveryType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Search/searchServices": {
    "api_version": "2020-03-13",
    "full_properties": {
      "hostingMode": {
        "description": "Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkRuleSet": {
        "description": "Network specific rules that determine how the Azure Cognitive Search service may be reached.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partitionCount": {
        "description": "The number of partitions in the Search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "replicaCount": {
        "description": "The number of replicas in the Search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Defines the SKU of an Azure Search Service, which determines price tier and capacity limits.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "partitionCount",
      "replicaCount",
      "sku",
      "hostingMode",
      "networkRuleSet",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Search/searchServices/privateEndpointConnections": {
    "api_version": "2020-03-13",
    "full_properties": {
      "groupIds": {
        "description": "GroupIds from the private link service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Search/searchServices/sharedPrivateLinkResources": {
    "api_version": "2020-03-13",
    "full_properties": {
      "groupId": {
        "description": "The group id from the provider of resource the shared private link resource is for.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "privateLinkResourceId": {
        "description": "The resource id of the resource the shared private link resource is for.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestMessage": {
        "description": "The request message for requesting approval of the shared private link resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupId",
      "privateLinkResourceId",
      "requestMessage",
      "status"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Security/advancedThreatProtectionSettings": {
    "api_version": "2018-06-01",
    "full_properties": {
      "isEnabled": {
        "description": "Indicates whether Advanced Threat Protection is enabled.",
        "required": false,
        "type": "boolean",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "isEnabled"
    ],
    "required": [
      "name",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Security/autoProvisioningSettings": {
    "api_version": "2018-06-01",
    "full_properties": {
      "autoProvision": {
        "description": "Describes what kind of security agent provisioning action to take",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoProvision"
    ],
    "required": [
      "name",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Security/informationProtectionPolicies": {
    "api_version": "2018-06-01",
    "full_properties": {
      "informationTypes": {
        "description": "The sensitivity information types.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "labels": {
        "description": "Dictionary of sensitivity labels.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "lastModifiedUtc": {
        "description": "Describes the last UTC time the policy was modified.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "lastModifiedUtc",
      "labels",
      "informationTypes"
    ],
    "required": [
      "name",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Security/locations/jitNetworkAccessPolicies": {
    "api_version": "2015-06-01-preview",
    "full_properties": {
      "provisioningState": {
        "description": "Gets the provisioning state of the Just-in-Time policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requests": {
        "description": null,
        "required": false,
        "type": "array",
        "update_causes": "unknown"
      },
      "virtualMachines": {
        "description": "Configurations for Microsoft.Compute/virtualMachines resource type.",
        "required": false,
        "type": "array",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "virtualMachines",
      "requests",
      "provisioningState"
    ],
    "required": [
      "name",
      "apiVersion",
      "kind",
      "properties"
    ]
  },
  "Microsoft.Security/pricings": {
    "api_version": "2018-06-01",
    "full_properties": {
      "pricingTier": {
        "description": "Pricing tier type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "pricingTier"
    ],
    "required": [
      "name",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Security/securityContacts": {
    "api_version": "2018-06-01",
    "full_properties": {
      "alertNotifications": {
        "description": "Whether to send security alerts notifications to the security contact",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "alertsToAdmins": {
        "description": "Whether to send security alerts notifications to subscription admins",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "email": {
        "description": "The email of this security contact",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "phone": {
        "description": "The phone number of this security contact",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "email",
      "phone",
      "alertNotifications",
      "alertsToAdmins"
    ],
    "required": [
      "name",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Security/settings": {
    "api_version": "2018-06-01",
    "full_properties": {
      "kind": {
        "description": "the kind of the settings string (DataExportSetting)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "kind"
    ],
    "required": [
      "name",
      "kind",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Security/workspaceSettings": {
    "api_version": "2018-06-01",
    "full_properties": {
      "scope": {
        "description": "All the VMs in this scope will send their security data to the mentioned workspace unless overridden by a setting with more specific scope",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "workspaceId": {
        "description": "The full Azure ID of the workspace to save the data in",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "workspaceId",
      "scope"
    ],
    "required": [
      "name",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.ServiceBus/namespaces": {
    "api_version": "2018-01-01-preview",
    "full_properties": {
      "encryption": {
        "description": "Properties to configure Encryption",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identity": {
        "description": "Properties to configure Identity for Bring your Own Keys",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "encryption",
      "identity",
      "zoneRedundant"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/AuthorizationRules": {
    "api_version": "2017-04-01",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/disasterRecoveryConfigs": {
    "api_version": "2017-04-01",
    "full_properties": {
      "alternateName": {
        "description": "Primary/Secondary eventhub namespace name, which is part of GEO DR pairing",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partnerNamespace": {
        "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "alternateName",
      "partnerNamespace"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/ipfilterrules": {
    "api_version": "2018-01-01-preview",
    "full_properties": {
      "action": {
        "description": "The IP Filter Action.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filterName": {
        "description": "IP Filter name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ipMask": {
        "description": "IP Mask",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "filterName",
      "ipMask"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/migrationConfigurations": {
    "api_version": "2017-04-01",
    "full_properties": {
      "postMigrationName": {
        "description": "Name to access Standard Namespace after migration",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetNamespace": {
        "description": "Existing premium Namespace ARM Id name which has no entities, will be used for migration",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "postMigrationName",
      "targetNamespace"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/networkRuleSets": {
    "api_version": "2017-04-01",
    "full_properties": {
      "defaultAction": {
        "description": "Default Action for Network Rule Set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipRules": {
        "description": "List of IpRules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkRules": {
        "description": "List VirtualNetwork Rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "defaultAction",
      "ipRules",
      "virtualNetworkRules"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/networkrulesets": {
    "api_version": "2018-01-01-preview",
    "full_properties": {
      "defaultAction": {
        "description": "Default Action for Network Rule Set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipRules": {
        "description": "List of IpRules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkRules": {
        "description": "List VirtualNetwork Rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "defaultAction",
      "ipRules",
      "virtualNetworkRules"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/queues": {
    "api_version": "2017-04-01",
    "full_properties": {
      "autoDeleteOnIdle": {
        "description": "ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deadLetteringOnMessageExpiration": {
        "description": "A value that indicates whether this queue has dead letter support when a message expires.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultMessageTimeToLive": {
        "description": "ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "duplicateDetectionHistoryTimeWindow": {
        "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableBatchedOperations": {
        "description": "Value that indicates whether server-side batched operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableExpress": {
        "description": "A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePartitioning": {
        "description": "A value that indicates whether the queue is to be partitioned across multiple message brokers.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forwardDeadLetteredMessagesTo": {
        "description": "Queue/Topic name to forward the Dead Letter message",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "forwardTo": {
        "description": "Queue/Topic name to forward the messages",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lockDuration": {
        "description": "ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxDeliveryCount": {
        "description": "The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxSizeInMegabytes": {
        "description": "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresDuplicateDetection": {
        "description": "A value indicating if this queue requires duplicate detection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresSession": {
        "description": "A value that indicates whether the queue supports the concept of sessions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Enumerates the possible values for the status of a messaging entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoDeleteOnIdle",
      "deadLetteringOnMessageExpiration",
      "defaultMessageTimeToLive",
      "duplicateDetectionHistoryTimeWindow",
      "enableBatchedOperations",
      "enableExpress",
      "enablePartitioning",
      "forwardDeadLetteredMessagesTo",
      "forwardTo",
      "lockDuration",
      "maxDeliveryCount",
      "maxSizeInMegabytes",
      "requiresDuplicateDetection",
      "requiresSession",
      "status"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/queues/authorizationRules": {
    "api_version": "2017-04-01",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/topics": {
    "api_version": "2017-04-01",
    "full_properties": {
      "autoDeleteOnIdle": {
        "description": "ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultMessageTimeToLive": {
        "description": "ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "duplicateDetectionHistoryTimeWindow": {
        "description": "ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableBatchedOperations": {
        "description": "Value that indicates whether server-side batched operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableExpress": {
        "description": "Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enablePartitioning": {
        "description": "Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxSizeInMegabytes": {
        "description": "Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresDuplicateDetection": {
        "description": "Value indicating if this topic requires duplicate detection.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Enumerates the possible values for the status of a messaging entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportOrdering": {
        "description": "Value that indicates whether the topic supports ordering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoDeleteOnIdle",
      "defaultMessageTimeToLive",
      "duplicateDetectionHistoryTimeWindow",
      "enableBatchedOperations",
      "enableExpress",
      "enablePartitioning",
      "maxSizeInMegabytes",
      "requiresDuplicateDetection",
      "status",
      "supportOrdering"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/topics/authorizationRules": {
    "api_version": "2017-04-01",
    "full_properties": {
      "rights": {
        "description": "The rights associated with the rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "rights"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/topics/subscriptions": {
    "api_version": "2017-04-01",
    "full_properties": {
      "autoDeleteOnIdle": {
        "description": "ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deadLetteringOnFilterEvaluationExceptions": {
        "description": "Value that indicates whether a subscription has dead letter support on filter evaluation exceptions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deadLetteringOnMessageExpiration": {
        "description": "Value that indicates whether a subscription has dead letter support when a message expires.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultMessageTimeToLive": {
        "description": "ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "duplicateDetectionHistoryTimeWindow": {
        "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableBatchedOperations": {
        "description": "Value that indicates whether server-side batched operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "forwardDeadLetteredMessagesTo": {
        "description": "Queue/Topic name to forward the Dead Letter message",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "forwardTo": {
        "description": "Queue/Topic name to forward the messages",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lockDuration": {
        "description": "ISO 8061 lock duration timespan for the subscription. The default value is 1 minute.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxDeliveryCount": {
        "description": "Number of maximum deliveries.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requiresSession": {
        "description": "Value indicating if a subscription supports the concept of sessions.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "status": {
        "description": "Enumerates the possible values for the status of a messaging entity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoDeleteOnIdle",
      "deadLetteringOnFilterEvaluationExceptions",
      "deadLetteringOnMessageExpiration",
      "defaultMessageTimeToLive",
      "duplicateDetectionHistoryTimeWindow",
      "enableBatchedOperations",
      "forwardDeadLetteredMessagesTo",
      "forwardTo",
      "lockDuration",
      "maxDeliveryCount",
      "requiresSession",
      "status"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules": {
    "api_version": "2017-04-01",
    "full_properties": {
      "action": {
        "description": "Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "correlationFilter": {
        "description": "Represents the correlation filter expression.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "filterType": {
        "description": "Filter type that is evaluated against a BrokeredMessage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlFilter": {
        "description": "Represents a filter which is a composition of an expression and an action that is executed in the pub/sub pipeline.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "correlationFilter",
      "filterType",
      "sqlFilter"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceBus/namespaces/virtualnetworkrules": {
    "api_version": "2018-01-01-preview",
    "full_properties": {
      "ignoreMissingVnetServiceEndpoint": {
        "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetId": {
        "description": "The ARM resource id of the virtual network subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ignoreMissingVnetServiceEndpoint",
      "virtualNetworkSubnetId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabric/clusters": {
    "api_version": "2020-03-01",
    "full_properties": {
      "addOnFeatures": {
        "description": "The list of add-on features to enable in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationTypeVersionsCleanupPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availableClusterVersions": {
        "description": "The Service Fabric runtime versions available for this cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureActiveDirectory": {
        "description": "The settings to enable AAD authentication on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateCommonNames": {
        "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateThumbprints": {
        "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterCodeVersion": {
        "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSize": {
        "description": "The cluster size",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataIngestionUri": {
        "description": "The cluster data ingestion URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnosticsStorageAccountConfig": {
        "description": "The storage account information for storing Service Fabric diagnostic logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDiskEncryption": {
        "description": "A boolean value that indicates if the cluster's disks are encrypted.",
        "required": false,
        "type": "boolean",
        "update_causes": "unknown"
      },
      "enablePurge": {
        "description": "A boolean value that indicates if the purge operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableStreamingIngest": {
        "description": "A boolean value that indicates if the streaming ingest is enabled.",
        "required": false,
        "type": "boolean",
        "update_causes": "unknown"
      },
      "eventStoreServiceEnabled": {
        "description": "Indicates if the event store service is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fabricSettings": {
        "description": "The list of custom fabric settings to configure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpApplicationGatewayCertificate": {
        "description": "Microsoft.ServiceFabric/clusters: The server certificate used by reverse proxy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultProperties": {
        "description": "The key vault properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementEndpoint": {
        "description": "The http management endpoint of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextLink": {
        "description": "The link used to get the next page of recommendations.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeTypes": {
        "description": "The list of node types in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedAutoscale": {
        "description": "A class that contains the optimized auto scale definition.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioned state of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "reliabilityLevel": {
        "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "The state of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "trustedExternalTenants": {
        "description": "The cluster's external tenants.",
        "required": false,
        "type": "array",
        "update_causes": "unknown"
      },
      "upgradeDescription": {
        "description": "Describes the policy used when upgrading the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeMode": {
        "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n\n  - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.\n  - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The cluster URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkConfiguration": {
        "description": "A class that contains virtual network definition.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "vmImage": {
        "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vmImage",
      "httpApplicationGatewayCertificate",
      "azureActiveDirectory",
      "reliabilityLevel",
      "nodeTypes",
      "managementEndpoint",
      "certificate",
      "clientCertificateThumbprints",
      "clientCertificateCommonNames",
      "fabricSettings",
      "upgradeDescription",
      "diagnosticsStorageAccountConfig",
      "clusterCodeVersion",
      "reverseProxyCertificate",
      "upgradeMode",
      "addOnFeatures",
      "availableClusterVersions",
      "clusterState",
      "certificateCommonNames",
      "reverseProxyCertificateCommonNames",
      "state",
      "provisioningState",
      "uri",
      "dataIngestionUri",
      "trustedExternalTenants",
      "eventStoreServiceEnabled",
      "optimizedAutoscale",
      "enableDiskEncryption",
      "enableStreamingIngest",
      "virtualNetworkConfiguration",
      "keyVaultProperties",
      "nextLink",
      "clusterSize",
      "applicationTypeVersionsCleanupPolicy",
      "enablePurge"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabric/clusters/applicationTypes": {
    "api_version": "2020-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabric/clusters/applicationTypes/versions": {
    "api_version": "2020-03-01",
    "full_properties": {
      "appPackageUrl": {
        "description": "The URL to the application package",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appPackageUrl"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabric/clusters/applications": {
    "api_version": "2020-03-01",
    "full_properties": {
      "debugParams": {
        "description": "Internal - used by Visual Studio to setup the debugging session on the local development environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "User readable description of the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnostics": {
        "description": "Describes the diagnostics options available",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedIdentities": {
        "description": "List of user assigned identities for the application, each mapped to a friendly name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maximumNodes": {
        "description": "The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metrics": {
        "description": "List of application capacity metric description.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimumNodes": {
        "description": "The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "removeApplicationCapacity": {
        "description": "Remove the current application capacity settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "services": {
        "description": "Describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "typeName": {
        "description": "The application type name as defined in the application manifest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "typeVersion": {
        "description": "The version of the application type as defined in the application manifest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradePolicy": {
        "description": "Describes the policy for a monitored application upgrade.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "maximumNodes",
      "metrics",
      "minimumNodes",
      "parameters",
      "removeApplicationCapacity",
      "typeName",
      "typeVersion",
      "upgradePolicy",
      "debugParams",
      "description",
      "diagnostics",
      "services",
      "managedIdentities"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabric/clusters/applications/services": {
    "api_version": "2020-03-01",
    "full_properties": {
      "autoScalingPolicies": {
        "description": "Auto scaling policies",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "codePackages": {
        "description": "Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "correlationScheme": {
        "description": "A list that describes the correlation of the service with other services.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultMoveCost": {
        "description": "Specifies the move cost for the service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "User readable description of the service.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnostics": {
        "description": "Reference to sinks in DiagnosticsDescription.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "healthState": {
        "description": "The health state of a resource such as Application, Service, or Network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkRefs": {
        "description": "The names of the private networks that this service needs to be part of.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "The operation system required by the code in service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partitionDescription": {
        "description": "Describes how the service is partitioned.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "placementConstraints": {
        "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "replicaCount": {
        "description": "The number of replicas of the service to create. Defaults to 1 if not specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceDnsName": {
        "description": "Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceLoadMetrics": {
        "description": "The service load metrics is given as an array of ServiceLoadMetricDescription objects.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "servicePackageActivationMode": {
        "description": "The activation Mode of the service package.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "servicePlacementPolicies": {
        "description": "A list that describes the correlation of the service with other services.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceTypeName": {
        "description": "The name of the service type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetLocation": {
        "description": "The Azure location to which the resources in the service belong to or should be deployed to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "targetSubscriptionId": {
        "description": "The subscription to which the resources in the service belong to or should be deployed to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "correlationScheme",
      "defaultMoveCost",
      "partitionDescription",
      "placementConstraints",
      "serviceLoadMetrics",
      "servicePlacementPolicies",
      "serviceTypeName",
      "codePackages",
      "description",
      "diagnostics",
      "healthState",
      "networkRefs",
      "osType",
      "replicaCount",
      "targetLocation",
      "targetSubscriptionId",
      "autoScalingPolicies",
      "servicePackageActivationMode",
      "serviceDnsName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabricMesh/applications": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "debugParams": {
        "description": "Internal - used by Visual Studio to setup the debugging session on the local development environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "User readable description of the application.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnostics": {
        "description": "Describes the diagnostics options available",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedIdentities": {
        "description": "List of user assigned identities for the application, each mapped to a friendly name.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maximumNodes": {
        "description": "The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metrics": {
        "description": "List of application capacity metric description.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimumNodes": {
        "description": "The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "removeApplicationCapacity": {
        "description": "Remove the current application capacity settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "services": {
        "description": "Describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "typeName": {
        "description": "The application type name as defined in the application manifest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "typeVersion": {
        "description": "The version of the application type as defined in the application manifest.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradePolicy": {
        "description": "Describes the policy for a monitored application upgrade.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "maximumNodes",
      "metrics",
      "minimumNodes",
      "parameters",
      "removeApplicationCapacity",
      "typeName",
      "typeVersion",
      "upgradePolicy",
      "debugParams",
      "description",
      "diagnostics",
      "services",
      "managedIdentities"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabricMesh/gateways": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "description": {
        "description": "User readable description of the gateway.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "destinationNetwork": {
        "description": "Describes a network reference in a service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "http": {
        "description": "Configuration for http connectivity for this gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sourceNetwork": {
        "description": "Describes a network reference in a service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tcp": {
        "description": "Configuration for tcp connectivity for this gateway.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "destinationNetwork",
      "http",
      "sourceNetwork",
      "tcp"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabricMesh/networks": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "addressPrefix": {
        "description": "the address prefix for this network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "User readable description of the network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ingressConfig": {
        "description": "Describes public connectivity configuration for the network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "addressPrefix",
      "description",
      "ingressConfig"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabricMesh/secrets": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "contentType": {
        "description": "The type of the content stored in the secret value. The value of this property is opaque to Service Fabric. Once set, the value of this property cannot be changed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "User readable description of the secret.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "contentType",
      "description"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabricMesh/secrets/values": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "value": {
        "description": "The actual value of the secret.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "value"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.ServiceFabricMesh/volumes": {
    "api_version": "2018-09-01-preview",
    "full_properties": {
      "azureFileParameters": {
        "description": "This type describes a volume provided by an Azure Files file share.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "User readable description of the volume.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "provider": {
        "description": "Provider of the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureFileParameters",
      "description",
      "provider"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SignalRService/SignalR": {
    "api_version": "2018-03-01-preview",
    "full_properties": {
      "cors": {
        "description": "Cross-Origin Resource Sharing (CORS) settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "features": {
        "description": "List of SignalR featureFlags. e.g. ServiceMode.\r\n\r\nFeatureFlags that are not included in the parameters for the update operation will not be modified.\r\nAnd the response will only include featureFlags that are explicitly set. \r\nWhen a featureFlag is not explicitly set, SignalR service will use its globally default value. \r\nBut keep in mind, the default value doesn't mean \"false\". It varies in terms of different FeatureFlags.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostNamePrefix": {
        "description": "Prefix for the hostName of the SignalR service. Retained for future use.\r\nThe hostname will be of format: &lt;hostNamePrefix&gt;.service.signalr.net.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hostNamePrefix",
      "cors",
      "features"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SignalRService/signalR": {
    "api_version": "2018-10-01",
    "full_properties": {
      "cors": {
        "description": "Cross-Origin Resource Sharing (CORS) settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "features": {
        "description": "List of SignalR featureFlags. e.g. ServiceMode.\r\n\r\nFeatureFlags that are not included in the parameters for the update operation will not be modified.\r\nAnd the response will only include featureFlags that are explicitly set. \r\nWhen a featureFlag is not explicitly set, SignalR service will use its globally default value. \r\nBut keep in mind, the default value doesn't mean \"false\". It varies in terms of different FeatureFlags.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostNamePrefix": {
        "description": "Prefix for the hostName of the SignalR service. Retained for future use.\r\nThe hostname will be of format: &lt;hostNamePrefix&gt;.service.signalr.net.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hostNamePrefix",
      "cors",
      "features"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Solutions/applianceDefinitions": {
    "api_version": "2016-09-01-preview",
    "full_properties": {
      "artifacts": {
        "description": "The collection of appliance artifacts. The portal will use the files specified as artifacts to construct the user experience of creating an appliance from an appliance definition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The appliance provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The appliance definition description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The appliance definition display name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lockLevel": {
        "description": "The appliance lock level.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "packageFileUri": {
        "description": "The appliance definition package file Uri.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "lockLevel",
      "displayName",
      "authorizations",
      "artifacts",
      "description",
      "packageFileUri"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Solutions/appliances": {
    "api_version": "2016-09-01-preview",
    "full_properties": {
      "applianceDefinitionId": {
        "description": "The fully qualified path of appliance definition Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Name and value pairs that define the appliance parameters. It can be a JObject or a well formed JSON string.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "managedResourceGroupId",
      "applianceDefinitionId",
      "parameters",
      "uiDefinitionUri"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Sql/instancePools": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "licenseType": {
        "description": "The license type. Possible values are 'LicenseIncluded' (price for SQL license is included) and 'BasePrice' (without SQL license price).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetId": {
        "description": "Resource ID of the subnet to place this instance pool in.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vCores": {
        "description": "Count of vCores belonging to this instance pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "licenseType",
      "subnetId",
      "vCores"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/locations/instanceFailoverGroups": {
    "api_version": "2017-10-01-preview",
    "full_properties": {
      "managedInstancePairs": {
        "description": "List of managed instance pairs in the failover group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partnerRegions": {
        "description": "Partner region information for the failover group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readOnlyEndpoint": {
        "description": "Read-only endpoint of the failover group instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readWriteEndpoint": {
        "description": "Read-write endpoint of the failover group instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "managedInstancePairs",
      "partnerRegions",
      "readOnlyEndpoint",
      "readWriteEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "administratorLogin": {
        "description": "Administrator username for the managed instance. Can only be specified when the managed instance is being created (and is required for creation).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "administratorLoginPassword": {
        "description": "The administrator login password (required for managed instance creation).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "collation": {
        "description": "Collation of the managed instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dnsZonePartner": {
        "description": "The resource id of another managed instance whose DNS zone this managed instance will share after creation.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "instancePoolId": {
        "description": "The Id of the instance pool this managed server belongs to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type. Possible values are 'LicenseIncluded' (regular price inclusive of a new SQL license) and 'BasePrice' (discounted AHB price for bringing your own SQL licenses).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedInstanceCreateMode": {
        "description": "Specifies the mode of database creation.\r\n\r\nDefault: Regular instance creation.\r\n\r\nRestore: Creates an instance by restoring a set of backups to specific point in time. RestorePointInTime and SourceManagedInstanceId must be specified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minimalTlsVersion": {
        "description": "Minimal TLS version. Allowed values: 'None', '1.0', '1.1', '1.2'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "proxyOverride": {
        "description": "Connection type used for connecting to the instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicDataEndpointEnabled": {
        "description": "Whether or not the public data endpoint is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceManagedInstanceId": {
        "description": "The resource identifier of the source managed instance associated with create operation of this instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageSizeInGB": {
        "description": "Storage size in GB. Minimum value: 32. Maximum value: 8192. Increments of 32 GB allowed only.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetId": {
        "description": "Subnet resource ID for the managed instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "timezoneId": {
        "description": "Id of the timezone. Allowed values are timezones supported by Windows.\r\nWindows keeps details on supported timezones, including the id, in registry under\r\nKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones.\r\nYou can get those registry values via SQL Server by querying SELECT name AS timezone_id FROM sys.time_zone_info.\r\nList of Ids can also be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.\r\nAn example of valid timezone id is \"Pacific Standard Time\" or \"W. Europe Standard Time\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vCores": {
        "description": "The number of vCores. Allowed values: 8, 16, 24, 32, 40, 64, 80.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorLogin",
      "administratorLoginPassword",
      "collation",
      "dnsZonePartner",
      "instancePoolId",
      "licenseType",
      "managedInstanceCreateMode",
      "minimalTlsVersion",
      "proxyOverride",
      "publicDataEndpointEnabled",
      "restorePointInTime",
      "sourceManagedInstanceId",
      "storageSizeInGB",
      "subnetId",
      "timezoneId",
      "vCores"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/administrators": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "administratorType": {
        "description": "Type of the managed instance administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "login": {
        "description": "Login name of the managed instance administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sid": {
        "description": "SID (object ID) of the managed instance administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "Tenant ID of the managed instance administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorType",
      "login",
      "sid",
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/databases": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "catalogCollation": {
        "description": "Collation of the metadata catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "collation": {
        "description": "Collation of the managed database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Managed database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be specified. Recovery: Creates a database by restoring a geo-replicated backup. RecoverableDatabaseId must be specified as the recoverable database resource ID to restore.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "longTermRetentionBackupResourceId": {
        "description": "The name of the Long Term Retention backup to be used for restore of this managed database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "The resource identifier of the recoverable database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorableDroppedDatabaseId": {
        "description": "The restorable dropped database resource id to restore when creating this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "The resource identifier of the source database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerSasToken": {
        "description": "Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the storage container sas token.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerUri": {
        "description": "Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the uri of the storage container where backups for this restore are stored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "catalogCollation",
      "collation",
      "createMode",
      "longTermRetentionBackupResourceId",
      "recoverableDatabaseId",
      "restorableDroppedDatabaseId",
      "restorePointInTime",
      "sourceDatabaseId",
      "storageContainerSasToken",
      "storageContainerUri"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/databases/backupLongTermRetentionPolicies": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "monthlyRetention": {
        "description": "The monthly retention policy for an LTR backup in an ISO 8601 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "weekOfYear": {
        "description": "The week of year to take the yearly backup in an ISO 8601 format.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weeklyRetention": {
        "description": "The weekly retention policy for an LTR backup in an ISO 8601 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "yearlyRetention": {
        "description": "The yearly retention policy for an LTR backup in an ISO 8601 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "monthlyRetention",
      "weeklyRetention",
      "weekOfYear",
      "yearlyRetention"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/databases/backupShortTermRetentionPolicies": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "retentionDays": {
        "description": "The backup retention period in days. This is how many days Point-in-Time Restore will be supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "retentionDays"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/databases/schemas/tables/columns/sensitivityLabels": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "informationType": {
        "description": "The information type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "informationTypeId": {
        "description": "The information type ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labelId": {
        "description": "The label ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labelName": {
        "description": "The label name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "rank": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "informationType",
      "informationTypeId",
      "labelId",
      "labelName",
      "rank"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/databases/securityAlertPolicies": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/databases/vulnerabilityAssessments": {
    "api_version": "2017-10-01-preview",
    "full_properties": {
      "recurringScans": {
        "description": "Properties of a Vulnerability Assessment recurring scans.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerPath": {
        "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerSasKey": {
        "description": "A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "recurringScans",
      "storageAccountAccessKey",
      "storageContainerPath",
      "storageContainerSasKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/databases/vulnerabilityAssessments/rules/baselines": {
    "api_version": "2017-10-01-preview",
    "full_properties": {
      "baselineResults": {
        "description": "The rule baseline result",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "baselineResults"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/encryptionProtector": {
    "api_version": "2017-10-01-preview",
    "full_properties": {
      "serverKeyName": {
        "description": "The name of the managed instance key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverKeyType": {
        "description": "The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "serverKeyName",
      "serverKeyType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/keys": {
    "api_version": "2017-10-01-preview",
    "full_properties": {
      "serverKeyType": {
        "description": "The key type like 'ServiceManaged', 'AzureKeyVault'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The URI of the key. If the ServerKeyType is AzureKeyVault, then the URI is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "serverKeyType",
      "uri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/restorableDroppedDatabases/backupShortTermRetentionPolicies": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "retentionDays": {
        "description": "The backup retention period in days. This is how many days Point-in-Time Restore will be supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "retentionDays"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/securityAlertPolicies": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/managedInstances/vulnerabilityAssessments": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "recurringScans": {
        "description": "Properties of a Vulnerability Assessment recurring scans.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerPath": {
        "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerSasKey": {
        "description": "A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "recurringScans",
      "storageAccountAccessKey",
      "storageContainerPath",
      "storageContainerSasKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "administratorLogin": {
        "description": "Administrator username for the server. Once created it cannot be changed.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "administratorLoginPassword": {
        "description": "The administrator login password (required for server creation).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minimalTlsVersion": {
        "description": "Minimal TLS version. Allowed values: '1.0', '1.1', '1.2'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicNetworkAccess": {
        "description": "Whether or not public endpoint access is allowed for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "version": {
        "description": "The version of the server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorLogin",
      "administratorLoginPassword",
      "version",
      "minimalTlsVersion",
      "publicNetworkAccess"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/administrators": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "administratorType": {
        "description": "Type of the sever administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureADOnlyAuthentication": {
        "description": "Azure Active Directory only Authentication enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "login": {
        "description": "Login name of the server administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sid": {
        "description": "SID (object ID) of the server administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "Tenant ID of the administrator.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorType",
      "login",
      "sid",
      "tenantId",
      "azureADOnlyAuthentication"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/advisors": {
    "api_version": "2014-04-01",
    "full_properties": {
      "autoExecuteValue": {
        "description": "Gets the auto-execute status (whether to let the system execute the recommendations) of this advisor. Possible values are 'Enabled' and 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoExecuteValue"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/auditingPolicies": {
    "api_version": "2014-04-01",
    "full_properties": {
      "auditLogsTableName": {
        "description": "The audit logs table name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "auditingState": {
        "description": "The state of the policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "eventTypesToAudit": {
        "description": "Comma-separated list of event types to audit.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "fullAuditLogsTableName": {
        "description": "The full audit logs table name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "The number of days to keep in the audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountKey": {
        "description": "The key of the auditing storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountName": {
        "description": "The table storage account name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountResourceGroupName": {
        "description": "The table storage account resource group name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSecondaryKey": {
        "description": "The secondary key of the auditing storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "The table storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageTableEndpoint": {
        "description": "The storage table endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditingState",
      "auditLogsTableName",
      "eventTypesToAudit",
      "fullAuditLogsTableName",
      "retentionDays",
      "storageAccountKey",
      "storageAccountName",
      "storageAccountResourceGroupName",
      "storageAccountSecondaryKey",
      "storageAccountSubscriptionId",
      "storageTableEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/auditingSettings": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "auditActionsAndGroups": {
        "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAzureMonitorTargetEnabled": {
        "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isStorageSecondaryKeyInUse": {
        "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "queueDelayMs": {
        "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the audit logs in the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "Specifies the blob storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditActionsAndGroups",
      "isAzureMonitorTargetEnabled",
      "isStorageSecondaryKeyInUse",
      "queueDelayMs",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageAccountSubscriptionId",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/backupLongTermRetentionVaults": {
    "api_version": "2014-04-01",
    "full_properties": {
      "recoveryServicesVaultResourceId": {
        "description": "The azure recovery services vault resource id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "recoveryServicesVaultResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/communicationLinks": {
    "api_version": "2014-04-01",
    "full_properties": {
      "partnerServer": {
        "description": "The name of the partner server.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "partnerServer"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/connectionPolicies": {
    "api_version": "2014-04-01",
    "full_properties": {
      "connectionType": {
        "description": "The server connection type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "connectionType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "autoPauseDelay": {
        "description": "Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "catalogCollation": {
        "description": "Collation of the metadata catalog.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "charset": {
        "description": "The charset of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "collation": {
        "description": "The collation of the database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "edition": {
        "description": "The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "elasticPoolId": {
        "description": "The resource identifier of the elastic pool containing this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "elasticPoolName": {
        "description": "The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriod": {
        "description": "The time the data should be kept in cache for fast queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hotCachePeriodInDays": {
        "description": "The number of days of data that should be kept in cache for fast queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "The license type to apply for this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "longTermRetentionBackupResourceId": {
        "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "The max size of the database expressed in bytes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "minCapacity": {
        "description": "Minimal capacity that database will always have allocated, if not paused",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readReplicaCount": {
        "description": "The number of readonly secondary replicas associated with the database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readScale": {
        "description": "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "The resource identifier of the recoverable database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointId": {
        "description": "The resource identifier of the recovery point associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoveryServicesRecoveryPointResourceId": {
        "description": "Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveId": {
        "description": "The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestedServiceObjectiveName": {
        "description": "The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. \r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "restorableDroppedDatabaseId": {
        "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sampleName": {
        "description": "The name of the sample schema to apply when creating this database.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "softDeletePeriod": {
        "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "softDeletePeriodInDays": {
        "description": "The number of days data should be kept before it stops being accessible to queries.",
        "required": false,
        "type": "integer",
        "update_causes": "unknown"
      },
      "sourceDatabaseDeletionDate": {
        "description": "Specifies the time that the database was deleted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "The resource identifier of the source database associated with create operation of this database.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountType": {
        "description": "The storage account type used to store backups for this database. Currently the only supported option is GRS (GeoRedundantStorage).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "createMode",
      "edition",
      "elasticPoolName",
      "maxSizeBytes",
      "readScale",
      "recoveryServicesRecoveryPointResourceId",
      "requestedServiceObjectiveId",
      "requestedServiceObjectiveName",
      "restorePointInTime",
      "sampleName",
      "sourceDatabaseDeletionDate",
      "sourceDatabaseId",
      "zoneRedundant",
      "softDeletePeriodInDays",
      "autoPauseDelay",
      "catalogCollation",
      "elasticPoolId",
      "licenseType",
      "longTermRetentionBackupResourceId",
      "minCapacity",
      "readReplicaCount",
      "recoverableDatabaseId",
      "recoveryServicesRecoveryPointId",
      "restorableDroppedDatabaseId",
      "charset",
      "hotCachePeriodInDays",
      "softDeletePeriod",
      "hotCachePeriod",
      "storageAccountType"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/advisors": {
    "api_version": "2014-04-01",
    "full_properties": {
      "autoExecuteValue": {
        "description": "Gets the auto-execute status (whether to let the system execute the recommendations) of this advisor. Possible values are 'Enabled' and 'Disabled'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoExecuteValue"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/auditingPolicies": {
    "api_version": "2014-04-01",
    "full_properties": {
      "auditLogsTableName": {
        "description": "The audit logs table name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "auditingState": {
        "description": "The state of the policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "eventTypesToAudit": {
        "description": "Comma-separated list of event types to audit.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "fullAuditLogsTableName": {
        "description": "The full audit logs table name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "The number of days to keep in the audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountKey": {
        "description": "The key of the auditing storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountName": {
        "description": "The table storage account name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountResourceGroupName": {
        "description": "The table storage account resource group name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSecondaryKey": {
        "description": "The secondary key of the auditing storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "The table storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageTableEndpoint": {
        "description": "The storage table endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "useServerDefault": {
        "description": "Whether server default is enabled or disabled.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditingState",
      "auditLogsTableName",
      "eventTypesToAudit",
      "fullAuditLogsTableName",
      "retentionDays",
      "storageAccountKey",
      "storageAccountName",
      "storageAccountResourceGroupName",
      "storageAccountSecondaryKey",
      "storageAccountSubscriptionId",
      "storageTableEndpoint",
      "useServerDefault"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/auditingSettings": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "auditActionsAndGroups": {
        "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAzureMonitorTargetEnabled": {
        "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isStorageSecondaryKeyInUse": {
        "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "queueDelayMs": {
        "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the audit logs in the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "Specifies the blob storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditActionsAndGroups",
      "isAzureMonitorTargetEnabled",
      "isStorageSecondaryKeyInUse",
      "queueDelayMs",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageAccountSubscriptionId",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "monthlyRetention": {
        "description": "The monthly retention policy for an LTR backup in an ISO 8601 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "weekOfYear": {
        "description": "The week of year to take the yearly backup in an ISO 8601 format.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "weeklyRetention": {
        "description": "The weekly retention policy for an LTR backup in an ISO 8601 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "yearlyRetention": {
        "description": "The yearly retention policy for an LTR backup in an ISO 8601 format.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "monthlyRetention",
      "weeklyRetention",
      "weekOfYear",
      "yearlyRetention"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies": {
    "api_version": "2017-10-01-preview",
    "full_properties": {
      "retentionDays": {
        "description": "The backup retention period in days. This is how many days Point-in-Time Restore will be supported.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "retentionDays"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/connectionPolicies": {
    "api_version": "2014-04-01",
    "full_properties": {
      "proxyDnsName": {
        "description": "The fully qualified host name of the auditing proxy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "proxyPort": {
        "description": "The port number of the auditing proxy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "redirectionState": {
        "description": "The state of proxy redirection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "securityEnabledAccess": {
        "description": "The state of security access.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "The connection policy state.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "useServerDefault": {
        "description": "Whether server default is enabled or disabled.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "visibility": {
        "description": "The visibility of the auditing proxy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "proxyDnsName",
      "proxyPort",
      "redirectionState",
      "securityEnabledAccess",
      "state",
      "useServerDefault",
      "visibility"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/dataMaskingPolicies": {
    "api_version": "2014-04-01",
    "full_properties": {
      "dataMaskingState": {
        "description": "The state of the data masking policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exemptPrincipals": {
        "description": "The list of the exempt principals. Specifies the semicolon-separated list of database users for which the data masking policy does not apply. The specified users receive data results without masking for all of the database queries.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataMaskingState",
      "exemptPrincipals"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/dataMaskingPolicies/rules": {
    "api_version": "2014-04-01",
    "full_properties": {
      "aliasName": {
        "description": "The alias name. This is a legacy parameter and is no longer used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "columnName": {
        "description": "The column name on which the data masking rule is applied.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maskingFunction": {
        "description": "The masking function that is used for the data masking rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "numberFrom": {
        "description": "The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "numberTo": {
        "description": "The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "prefixSize": {
        "description": "If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "replacementString": {
        "description": "If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ruleState": {
        "description": "The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schemaName": {
        "description": "The schema name on which the data masking rule is applied.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "suffixSize": {
        "description": "If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tableName": {
        "description": "The table name on which the data masking rule is applied.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "aliasName",
      "columnName",
      "maskingFunction",
      "numberFrom",
      "numberTo",
      "prefixSize",
      "replacementString",
      "ruleState",
      "schemaName",
      "suffixSize",
      "tableName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/extendedAuditingSettings": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "auditActionsAndGroups": {
        "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAzureMonitorTargetEnabled": {
        "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isStorageSecondaryKeyInUse": {
        "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "predicateExpression": {
        "description": "Specifies condition of where clause when creating an audit.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "queueDelayMs": {
        "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the audit logs in the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "Specifies the blob storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditActionsAndGroups",
      "isAzureMonitorTargetEnabled",
      "isStorageSecondaryKeyInUse",
      "predicateExpression",
      "queueDelayMs",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageAccountSubscriptionId",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/extensions": {
    "api_version": "2014-04-01",
    "full_properties": {
      "administratorLogin": {
        "description": "The name of the SQL administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "administratorLoginPassword": {
        "description": "The password of the SQL administrator.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authenticationType": {
        "description": "The authentication type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "operationMode": {
        "description": "The type of import operation being performed. This is always Import.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageKey": {
        "description": "The storage key to use.  If storage key type is SharedAccessKey, it must be preceded with a \"?.\"",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageKeyType": {
        "description": "The type of the storage key to use.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageUri": {
        "description": "The storage uri to use.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorLogin",
      "administratorLoginPassword",
      "authenticationType",
      "operationMode",
      "storageKey",
      "storageKeyType",
      "storageUri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/geoBackupPolicies": {
    "api_version": "2014-04-01",
    "full_properties": {
      "state": {
        "description": "The state of the geo backup policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "state"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/schemas/tables/columns/sensitivityLabels": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "informationType": {
        "description": "The information type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "informationTypeId": {
        "description": "The information type ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labelId": {
        "description": "The label ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labelName": {
        "description": "The label name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "rank": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "informationType",
      "informationTypeId",
      "labelId",
      "labelName",
      "rank"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/securityAlertPolicies": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/syncGroups": {
    "api_version": "2015-05-01-preview",
    "full_properties": {
      "conflictResolutionPolicy": {
        "description": "Conflict resolution policy of the sync group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hubDatabasePassword": {
        "description": "Password for the sync group hub database credential.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hubDatabaseUserName": {
        "description": "User name for the sync group hub database credential.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "interval": {
        "description": "Sync interval of the sync group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schema": {
        "description": "Properties of sync group schema.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "syncDatabaseId": {
        "description": "ARM resource id of the sync database in the sync group.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uniqueId": {
        "description": "Unique Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "conflictResolutionPolicy",
      "hubDatabasePassword",
      "hubDatabaseUserName",
      "interval",
      "schema",
      "syncDatabaseId",
      "uniqueId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/syncGroups/syncMembers": {
    "api_version": "2015-05-01-preview",
    "full_properties": {
      "databaseName": {
        "description": "Database name of the member database in the sync member.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "databaseType": {
        "description": "Database type of the sync member.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "password": {
        "description": "Password of the member database in the sync member.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverName": {
        "description": "Server name of the member database in the sync member",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlServerDatabaseId": {
        "description": "SQL Server database id of the sync member.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "syncAgentId": {
        "description": "ARM resource id of the sync agent in the sync member.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "syncDirection": {
        "description": "Sync direction of the sync member.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userName": {
        "description": "User name of the member database in the sync member.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "databaseName",
      "databaseType",
      "password",
      "serverName",
      "sqlServerDatabaseId",
      "syncAgentId",
      "syncDirection",
      "userName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/transparentDataEncryption": {
    "api_version": "2014-04-01",
    "full_properties": {
      "status": {
        "description": "The status of the database transparent data encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "status"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/vulnerabilityAssessments": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "recurringScans": {
        "description": "Properties of a Vulnerability Assessment recurring scans.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerPath": {
        "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerSasKey": {
        "description": "A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "recurringScans",
      "storageAccountAccessKey",
      "storageContainerPath",
      "storageContainerSasKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/vulnerabilityAssessments/rules/baselines": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "baselineResults": {
        "description": "The rule baseline result",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "baselineResults"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/workloadGroups": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "importance": {
        "description": "The workload group importance level.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxResourcePercent": {
        "description": "The workload group cap percentage resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxResourcePercentPerRequest": {
        "description": "The workload group request maximum grant percentage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minResourcePercent": {
        "description": "The workload group minimum percentage resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minResourcePercentPerRequest": {
        "description": "The workload group request minimum grant percentage.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "queryExecutionTimeout": {
        "description": "The workload group query execution timeout.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "importance",
      "maxResourcePercent",
      "maxResourcePercentPerRequest",
      "minResourcePercent",
      "minResourcePercentPerRequest",
      "queryExecutionTimeout"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/databases/workloadGroups/workloadClassifiers": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "context": {
        "description": "The workload classifier context.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "endTime": {
        "description": "The workload classifier end time for classification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "importance": {
        "description": "The workload classifier importance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "label": {
        "description": "The workload classifier label.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "memberName": {
        "description": "The workload classifier member name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "The workload classifier start time for classification.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "context",
      "endTime",
      "importance",
      "label",
      "memberName",
      "startTime"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/disasterRecoveryConfiguration": {
    "api_version": "2014-04-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Sql/servers/dnsAliases": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Sql/servers/elasticPools": {
    "api_version": "2017-10-01-preview",
    "full_properties": {
      "licenseType": {
        "description": "The license type to apply for this elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "The storage limit for the database elastic pool in bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "perDatabaseSettings": {
        "description": "Per database settings of an elastic pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "zoneRedundant": {
        "description": "Whether or not this elastic pool is zone redundant, which means the replicas of this elastic pool will be spread across multiple availability zones.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "licenseType",
      "maxSizeBytes",
      "perDatabaseSettings",
      "zoneRedundant"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/encryptionProtector": {
    "api_version": "2015-05-01-preview",
    "full_properties": {
      "serverKeyName": {
        "description": "The name of the server key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverKeyType": {
        "description": "The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "serverKeyName",
      "serverKeyType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/extendedAuditingSettings": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "auditActionsAndGroups": {
        "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAzureMonitorTargetEnabled": {
        "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isStorageSecondaryKeyInUse": {
        "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "predicateExpression": {
        "description": "Specifies condition of where clause when creating an audit.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "queueDelayMs": {
        "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the audit logs in the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "Specifies the blob storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditActionsAndGroups",
      "isAzureMonitorTargetEnabled",
      "isStorageSecondaryKeyInUse",
      "predicateExpression",
      "queueDelayMs",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageAccountSubscriptionId",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/failoverGroups": {
    "api_version": "2015-05-01-preview",
    "full_properties": {
      "databases": {
        "description": "List of databases in the failover group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "partnerServers": {
        "description": "List of partner server information for the failover group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readOnlyEndpoint": {
        "description": "Read-only endpoint of the failover group instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readWriteEndpoint": {
        "description": "Read-write endpoint of the failover group instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "databases",
      "partnerServers",
      "readOnlyEndpoint",
      "readWriteEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/firewallRules": {
    "api_version": "2015-05-01-preview",
    "full_properties": {
      "endIpAddress": {
        "description": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress. Use value '0.0.0.0' for all Azure-internal IP addresses.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIpAddress": {
        "description": "The start IP address of the firewall rule. Must be IPv4 format. Use value '0.0.0.0' for all Azure-internal IP addresses.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIpAddress",
      "startIpAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/jobAgents": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "databaseId": {
        "description": "Resource ID of the database to store job metadata in.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "databaseId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/jobAgents/credentials": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "password": {
        "description": "The credential password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "username": {
        "description": "The credential user name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "password",
      "username"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/jobAgents/jobs": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "action": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "correlationData": {
        "description": "Customer provided correlation data that will be returned in Job and JobOutput state events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryInfo": {
        "description": "Additional delivery info.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deliveryType": {
        "description": "Delivery type of Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Optional customer supplied description of the Job.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Job details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "input": {
        "description": "The inputs for the Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputs": {
        "description": "The outputs for the Job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "recurrence": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "schedule": {
        "description": "Scheduling properties of a job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "Gets or sets the job start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "state": {
        "description": "Gets or set the job state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "recurrence",
      "startTime",
      "state",
      "description",
      "schedule",
      "details",
      "input",
      "outputs",
      "priority",
      "correlationData",
      "deliveryInfo",
      "deliveryType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/jobAgents/jobs/executions": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Sql/servers/jobAgents/jobs/steps": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "action": {
        "description": "The action to be executed by a job step.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "credential": {
        "description": "The resource ID of the job credential that will be used to connect to the targets.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "executionOptions": {
        "description": "The execution options of a job step.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "output": {
        "description": "The output configuration of a job step.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "stepId": {
        "description": "The job step's index within the job. If not specified when creating the job step, it will be created as the last step. If not specified when updating the job step, the step id is not modified.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetGroup": {
        "description": "The resource ID of the target group that the job step will be executed on.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "action",
      "credential",
      "executionOptions",
      "output",
      "stepId",
      "targetGroup"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/jobAgents/targetGroups": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "members": {
        "description": "Members of the target group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "members"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/keys": {
    "api_version": "2015-05-01-preview",
    "full_properties": {
      "creationDate": {
        "description": "The server key creation date.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverKeyType": {
        "description": "The key type like 'AzureKeyVault'.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "Thumbprint of the server key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The URI of the key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "creationDate",
      "serverKeyType",
      "thumbprint",
      "uri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/privateEndpointConnections": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "groupIds": {
        "description": "GroupIds from the private link service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/securityAlertPolicies": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/syncAgents": {
    "api_version": "2015-05-01-preview",
    "full_properties": {
      "syncDatabaseId": {
        "description": "ARM resource id of the sync database in the sync agent.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "syncDatabaseId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/virtualNetworkRules": {
    "api_version": "2015-05-01-preview",
    "full_properties": {
      "ignoreMissingVnetServiceEndpoint": {
        "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworkSubnetId": {
        "description": "The ARM resource id of the virtual network subnet.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "ignoreMissingVnetServiceEndpoint",
      "virtualNetworkSubnetId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Sql/servers/vulnerabilityAssessments": {
    "api_version": "2018-06-01-preview",
    "full_properties": {
      "recurringScans": {
        "description": "Properties of a Vulnerability Assessment recurring scans.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerPath": {
        "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerSasKey": {
        "description": "A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "recurringScans",
      "storageAccountAccessKey",
      "storageContainerPath",
      "storageContainerSasKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "sqlImageOffer": {
        "description": "SQL image offer. Examples may include SQL2016-WS2016, SQL2017-WS2016.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlImageSku": {
        "description": "SQL image sku.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "wsfcDomainProfile": {
        "description": "Active Directory account details to operate Windows Server Failover Cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "sqlImageOffer",
      "sqlImageSku",
      "wsfcDomainProfile"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/availabilityGroupListeners": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "availabilityGroupName": {
        "description": "Name of the availability group.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createDefaultAvailabilityGroupIfNotExist": {
        "description": "Create a default availability group if it does not exist.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "loadBalancerConfigurations": {
        "description": "List of load balancer configurations for an availability group listener.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "port": {
        "description": "Listener port.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "availabilityGroupName",
      "createDefaultAvailabilityGroupIfNotExist",
      "loadBalancerConfigurations",
      "port"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.SqlVirtualMachine/sqlVirtualMachines": {
    "api_version": "2017-03-01-preview",
    "full_properties": {
      "autoBackupSettings": {
        "description": "Configure backups for databases in your SQL virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoPatchingSettings": {
        "description": "Set a patching window during which Windows and SQL patches will be applied.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultCredentialSettings": {
        "description": "Configure your SQL virtual machine to be able to connect to the Azure Key Vault service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serverConfigurationsManagementSettings": {
        "description": "Set the connectivity, storage and workload settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlImageOffer": {
        "description": "SQL image offer. Examples include SQL2016-WS2016, SQL2017-WS2016.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlImageSku": {
        "description": "SQL Server edition type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlManagement": {
        "description": "SQL Server Management type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlServerLicenseType": {
        "description": "SQL Server license type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlVirtualMachineGroupResourceId": {
        "description": "ARM resource id of the SQL virtual machine group this SQL virtual machine is or will be part of.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageConfigurationSettings": {
        "description": "Storage Configurations for SQL Data, Log and TempDb.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachineResourceId": {
        "description": "ARM Resource id of underlying virtual machine created from SQL marketplace image.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "wsfcDomainCredentials": {
        "description": "Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoBackupSettings",
      "autoPatchingSettings",
      "keyVaultCredentialSettings",
      "serverConfigurationsManagementSettings",
      "sqlImageOffer",
      "sqlImageSku",
      "sqlManagement",
      "sqlServerLicenseType",
      "sqlVirtualMachineGroupResourceId",
      "storageConfigurationSettings",
      "virtualMachineResourceId",
      "wsfcDomainCredentials"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers": {
    "api_version": "2017-06-01",
    "full_properties": {
      "cisIntrinsicSettings": {
        "description": "Intrinsic settings which refers to the type of the StorSimple Manager.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Specifies the state of the resource as it is getting provisioned. Value of \"Succeeded\" means the Manager was successfully created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The Sku.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cisIntrinsicSettings",
      "sku",
      "provisioningState"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/accessControlRecords": {
    "api_version": "2017-06-01",
    "full_properties": {
      "initiatorName": {
        "description": "The iSCSI initiator name (IQN).",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "initiatorName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/bandwidthSettings": {
    "api_version": "2017-06-01",
    "full_properties": {
      "schedules": {
        "description": "The schedules.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "schedules"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/certificates": {
    "api_version": "2016-10-01",
    "full_properties": {
      "authType": {
        "description": "Specify the Authentication type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "Gets or sets the base64 encoded certificate raw data string",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "authType",
      "certificate"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/alertSettings": {
    "api_version": "2017-06-01",
    "full_properties": {
      "additionalRecipientEmailList": {
        "description": "The alert notification email list.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "alertNotificationCulture": {
        "description": "The alert notification culture.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "emailNotification": {
        "description": "Indicates whether email notification enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "notificationToServiceOwners": {
        "description": "The value indicating whether alert notification enabled for admin or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalRecipientEmailList",
      "alertNotificationCulture",
      "emailNotification",
      "notificationToServiceOwners"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/backupPolicies": {
    "api_version": "2017-06-01",
    "full_properties": {
      "volumeIds": {
        "description": "The path IDs of the volumes which are part of the backup policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "volumeIds"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/backupPolicies/schedules": {
    "api_version": "2017-06-01",
    "full_properties": {
      "backupType": {
        "description": "The type of backup which needs to be taken.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionCount": {
        "description": "The number of backups to be retained.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scheduleRecurrence": {
        "description": "The schedule recurrence.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scheduleStatus": {
        "description": "The schedule status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startTime": {
        "description": "The start time of the schedule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backupType",
      "retentionCount",
      "scheduleRecurrence",
      "scheduleStatus",
      "startTime"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/backupScheduleGroups": {
    "api_version": "2016-10-01",
    "full_properties": {
      "startTime": {
        "description": "The Time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "startTime"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/chapSettings": {
    "api_version": "2016-10-01",
    "full_properties": {
      "password": {
        "description": "This class can be used as the Type for any secret entity represented as Password, CertThumbprint, Algorithm. This class is intended to be used when the secret is encrypted with an asymmetric key pair. The encryptionAlgorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "password"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/fileservers": {
    "api_version": "2016-10-01",
    "full_properties": {
      "backupScheduleGroupId": {
        "description": "The backup policy id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of the file server",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "domainName": {
        "description": "Domain of the file server",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageDomainId": {
        "description": "The storage domain id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backupScheduleGroupId",
      "description",
      "domainName",
      "storageDomainId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/fileservers/shares": {
    "api_version": "2016-10-01",
    "full_properties": {
      "adminUser": {
        "description": "The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\\xyz.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataPolicy": {
        "description": "The data policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description for file share",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "A name-value pair to associate with the share as metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "The monitoring status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisionedCapacityInBytes": {
        "description": "The total provisioned capacity in Bytes",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareQuota": {
        "description": "The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareStatus": {
        "description": "The Share Status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "adminUser",
      "dataPolicy",
      "description",
      "monitoringStatus",
      "provisionedCapacityInBytes",
      "shareStatus",
      "metadata",
      "shareQuota"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/iscsiservers": {
    "api_version": "2016-10-01",
    "full_properties": {
      "backupScheduleGroupId": {
        "description": "The backup policy id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "chapId": {
        "description": "The chap id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "reverseChapId": {
        "description": "The reverse chap id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageDomainId": {
        "description": "The storage domain id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "backupScheduleGroupId",
      "chapId",
      "description",
      "reverseChapId",
      "storageDomainId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/iscsiservers/disks": {
    "api_version": "2016-10-01",
    "full_properties": {
      "accessControlRecords": {
        "description": "The access control records.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataPolicy": {
        "description": "The data policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diskStatus": {
        "description": "The disk status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "The monitoring.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisionedCapacityInBytes": {
        "description": "The provisioned capacity in bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessControlRecords",
      "dataPolicy",
      "description",
      "diskStatus",
      "monitoringStatus",
      "provisionedCapacityInBytes"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/timeSettings": {
    "api_version": "2017-06-01",
    "full_properties": {
      "primaryTimeServer": {
        "description": "The primary Network Time Protocol (NTP) server name, like 'time.windows.com'.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secondaryTimeServer": {
        "description": "The secondary Network Time Protocol (NTP) server name, like 'time.contoso.com'. It's optional.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "timeZone": {
        "description": "The timezone of device, like '(UTC -06:00) Central America'",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "primaryTimeServer",
      "secondaryTimeServer",
      "timeZone"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/volumeContainers": {
    "api_version": "2017-06-01",
    "full_properties": {
      "bandWidthRateInMbps": {
        "description": "The bandwidth-rate set on the volume container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "bandwidthSettingId": {
        "description": "The ID of the bandwidth setting associated with the volume container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptionKey": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountCredentialId": {
        "description": "The path ID of storage account associated with the volume container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "bandWidthRateInMbps",
      "bandwidthSettingId",
      "encryptionKey",
      "storageAccountCredentialId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/devices/volumeContainers/volumes": {
    "api_version": "2017-06-01",
    "full_properties": {
      "accessControlRecordIds": {
        "description": "The IDs of the access control records, associated with the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationToken": {
        "description": "A unique file path for the volume. Used when creating mount targets",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataProtection": {
        "description": "DataProtection type volumes include an object containing details of the replication",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exportPolicy": {
        "description": "Set of export policy rules",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isRestoring": {
        "description": "Restoring",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "The monitoring status of the volume.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "mountTargets": {
        "description": "List of mount targets",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "protocolTypes": {
        "description": "Set of protocol types",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serviceLevel": {
        "description": "The service level of the file system.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sizeInBytes": {
        "description": "The size of the volume in bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "snapshotId": {
        "description": "UUID v4 or resource identifier used to identify the Snapshot.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnetId": {
        "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "usageThreshold": {
        "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeStatus": {
        "description": "The volume status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeType": {
        "description": "What type of volume is this",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessControlRecordIds",
      "monitoringStatus",
      "sizeInBytes",
      "volumeStatus",
      "volumeType",
      "creationToken",
      "exportPolicy",
      "serviceLevel",
      "subnetId",
      "usageThreshold",
      "mountTargets",
      "protocolTypes",
      "snapshotId",
      "dataProtection",
      "isRestoring"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/extendedInformation": {
    "api_version": "2017-06-01",
    "full_properties": {
      "algorithm": {
        "description": "Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptionKey": {
        "description": "Represents the CEK of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryptionKeyThumbprint": {
        "description": "Represents the Cert thumbprint that was used to encrypt the CEK.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "integrityKey": {
        "description": "Represents the CIK of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "portalCertificateThumbprint": {
        "description": "Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "version": {
        "description": "The version of the extended info being persisted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "algorithm",
      "encryptionKey",
      "encryptionKeyThumbprint",
      "integrityKey",
      "portalCertificateThumbprint",
      "version"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/storageAccountCredentials": {
    "api_version": "2017-06-01",
    "full_properties": {
      "accessKey": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "accountKey": {
        "description": "Represent the secrets intended for encryption with asymmetric key pair.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "accountType": {
        "description": "Type of storage accessed on the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "alias": {
        "description": "Alias for the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "blobDomainName": {
        "description": "Blob end point for private clouds.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cloudType": {
        "description": "The cloud service provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionString": {
        "description": "Connection string for the storage account. Use this string if username and account key are not specified.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "enableSSL": {
        "description": "SSL needs to be enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "endPoint": {
        "description": "The storage endpoint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "location": {
        "description": "The storage account's geo location",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "login": {
        "description": "The storage account login",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sslStatus": {
        "description": "Signifies whether SSL needs to be enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountId": {
        "description": "Id of the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userName": {
        "description": "Username for the storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accessKey",
      "cloudType",
      "enableSSL",
      "endPoint",
      "location",
      "login",
      "sslStatus",
      "accountKey",
      "accountType",
      "alias",
      "blobDomainName",
      "connectionString",
      "userName",
      "storageAccountId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorSimple/managers/storageDomains": {
    "api_version": "2016-10-01",
    "full_properties": {
      "encryptionKey": {
        "description": "This class can be used as the Type for any secret entity represented as Password, CertThumbprint, Algorithm. This class is intended to be used when the secret is encrypted with an asymmetric key pair. The encryptionAlgorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionStatus": {
        "description": "The encryption status \"Enabled | Disabled\".",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountCredentialIds": {
        "description": "The storage account credentials.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "encryptionKey",
      "encryptionStatus",
      "storageAccountCredentialIds"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Storage/storageAccounts": {
    "api_version": "2019-06-01",
    "full_properties": {
      "accountType": {
        "description": "Microsoft.Storage/storageAccounts: The type of this account.",
        "required": true,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "accountType"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "sku",
      "kind",
      "location"
    ]
  },
  "Microsoft.Storage/storageAccounts/blobServices": {
    "api_version": "2019-06-01",
    "full_properties": {
      "automaticSnapshotPolicyEnabled": {
        "description": "Automatic Snapshot is enabled if set to true.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "changeFeed": {
        "description": "The blob service properties for change feed events.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cors": {
        "description": "Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultServiceVersion": {
        "description": "DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deleteRetentionPolicy": {
        "description": "The blob service properties for blob soft delete.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cors",
      "defaultServiceVersion",
      "deleteRetentionPolicy",
      "automaticSnapshotPolicyEnabled",
      "changeFeed"
    ],
    "required": [
      "name",
      "type",
      "apiVersion"
    ]
  },
  "Microsoft.Storage/storageAccounts/blobServices/containers": {
    "api_version": "2019-06-01",
    "full_properties": {
      "command": {
        "description": "The commands to execute within the container instance in exec form.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataFormat": {
        "description": "DataFormat for Container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "environmentVariables": {
        "description": "The environment variables to set in the container instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "image": {
        "description": "The name of the image used to create the container instance.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "livenessProbe": {
        "description": "The container probe, for liveness or readiness",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "A name-value pair to associate with the container as metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ports": {
        "description": "The exposed ports on the container instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicAccess": {
        "description": "Specifies whether data in the container may be accessed publicly and the level of access.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "readinessProbe": {
        "description": "The container probe, for liveness or readiness",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resources": {
        "description": "The resource requirements.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeMounts": {
        "description": "The volume mounts available to the container instance.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "command",
      "environmentVariables",
      "image",
      "ports",
      "resources",
      "volumeMounts",
      "publicAccess",
      "metadata",
      "livenessProbe",
      "readinessProbe",
      "dataFormat"
    ],
    "required": [
      "name",
      "type",
      "apiVersion"
    ]
  },
  "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies": {
    "api_version": "2019-06-01",
    "full_properties": {
      "immutabilityPeriodSinceCreationInDays": {
        "description": "The immutability period for the blobs in the container since the policy creation, in days.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "immutabilityPeriodSinceCreationInDays"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Storage/storageAccounts/fileServices": {
    "api_version": "2019-06-01",
    "full_properties": {
      "cors": {
        "description": "Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareDeleteRetentionPolicy": {
        "description": "The file service properties for share soft delete.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cors",
      "shareDeleteRetentionPolicy"
    ],
    "required": [
      "name",
      "type",
      "apiVersion"
    ]
  },
  "Microsoft.Storage/storageAccounts/fileServices/shares": {
    "api_version": "2019-06-01",
    "full_properties": {
      "adminUser": {
        "description": "The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\\xyz.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dataPolicy": {
        "description": "The data policy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Description for file share",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "metadata": {
        "description": "A name-value pair to associate with the share as metadata.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "monitoringStatus": {
        "description": "The monitoring status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisionedCapacityInBytes": {
        "description": "The total provisioned capacity in Bytes",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareQuota": {
        "description": "The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "shareStatus": {
        "description": "The Share Status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "adminUser",
      "dataPolicy",
      "description",
      "monitoringStatus",
      "provisionedCapacityInBytes",
      "shareStatus",
      "metadata",
      "shareQuota"
    ],
    "required": [
      "name",
      "type",
      "apiVersion"
    ]
  },
  "Microsoft.Storage/storageAccounts/managementPolicies": {
    "api_version": "2019-06-01",
    "full_properties": {
      "policy": {
        "description": "The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "policy"
    ],
    "required": [
      "name",
      "type",
      "apiVersion"
    ]
  },
  "Microsoft.Storage/storageAccounts/privateEndpointConnections": {
    "api_version": "2019-06-01",
    "full_properties": {
      "groupIds": {
        "description": "GroupIds from the private link service resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpoint": {
        "description": "The Private Endpoint resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the private endpoint connection resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "groupIds",
      "privateEndpoint",
      "privateLinkServiceConnectionState",
      "provisioningState"
    ],
    "required": [
      "name",
      "type",
      "apiVersion"
    ]
  },
  "Microsoft.StorageCache/caches": {
    "api_version": "2020-03-01",
    "full_properties": {
      "cacheSizeGB": {
        "description": "The size of this Cache, in GB.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "encryptionSettings": {
        "description": "Cache encryption settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkSettings": {
        "description": "Cache network settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "securitySettings": {
        "description": "Cache security settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "subnet": {
        "description": "A fully qualified URL.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "upgradeStatus": {
        "description": "Properties describing the software upgrade state of the Cache.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cacheSizeGB",
      "provisioningState",
      "subnet",
      "upgradeStatus",
      "encryptionSettings",
      "networkSettings",
      "securitySettings"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageCache/caches/storageTargets": {
    "api_version": "2020-03-01",
    "full_properties": {
      "clfs": {
        "description": "Properties pertained to ClfsTarget",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "junctions": {
        "description": "List of Cache namespace junctions to target for namespace associations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nfs3": {
        "description": "Properties pertained to Nfs3Target",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "targetType": {
        "description": "Type of the Storage Target.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "unknown": {
        "description": "Properties pertained to UnknownTarget",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clfs",
      "junctions",
      "nfs3",
      "provisioningState",
      "targetType",
      "unknown"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageSync/storageSyncServices": {
    "api_version": "2019-10-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageSync/storageSyncServices/registeredServers": {
    "api_version": "2019-10-01",
    "full_properties": {
      "agentVersion": {
        "description": "Registered Server Agent Version",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterId": {
        "description": "Registered Server clusterId",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterName": {
        "description": "Registered Server clusterName",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly Name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "lastHeartBeat": {
        "description": "Registered Server last heart beat",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverCertificate": {
        "description": "Registered Server Certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverId": {
        "description": "Registered Server serverId",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverOSVersion": {
        "description": "Registered Server OS Version",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverRole": {
        "description": "Registered Server serverRole",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agentVersion",
      "clusterId",
      "clusterName",
      "friendlyName",
      "lastHeartBeat",
      "serverCertificate",
      "serverId",
      "serverOSVersion",
      "serverRole"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageSync/storageSyncServices/syncGroups": {
    "api_version": "2019-10-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageSync/storageSyncServices/syncGroups/cloudEndpoints": {
    "api_version": "2019-10-01",
    "full_properties": {
      "azureFileShareName": {
        "description": "Azure file share name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly Name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountResourceId": {
        "description": "Storage Account Resource Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountTenantId": {
        "description": "Storage Account Tenant Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureFileShareName",
      "friendlyName",
      "storageAccountResourceId",
      "storageAccountTenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StorageSync/storageSyncServices/syncGroups/serverEndpoints": {
    "api_version": "2019-10-01",
    "full_properties": {
      "cloudTiering": {
        "description": "Cloud Tiering.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "Friendly Name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "offlineDataTransfer": {
        "description": "Offline data transfer.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "offlineDataTransferShareName": {
        "description": "Offline data transfer share name",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverLocalPath": {
        "description": "Server folder used for data synchronization",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverResourceId": {
        "description": "Arm resource identifier.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tierFilesOlderThanDays": {
        "description": "Tier files older than days.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "volumeFreeSpacePercent": {
        "description": "Level of free space to be maintained by Cloud Tiering if it is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "cloudTiering",
      "friendlyName",
      "offlineDataTransfer",
      "offlineDataTransferShareName",
      "serverLocalPath",
      "serverResourceId",
      "tierFilesOlderThanDays",
      "volumeFreeSpacePercent"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StreamAnalytics/streamingjobs": {
    "api_version": "2016-03-01",
    "full_properties": {
      "compatibilityLevel": {
        "description": "Controls certain runtime behaviors of the streaming job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataLocale": {
        "description": "The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "eventsLateArrivalMaxDelayInSeconds": {
        "description": "The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventsOutOfOrderMaxDelayInSeconds": {
        "description": "The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "eventsOutOfOrderPolicy": {
        "description": "Indicates the policy to apply to events that arrive out of order in the input event stream.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "functions": {
        "description": "A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "inputs": {
        "description": "A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputErrorPolicy": {
        "description": "Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputStartMode": {
        "description": "This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "outputStartTime": {
        "description": "Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "outputs": {
        "description": "A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The properties that are associated with a SKU.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "transformation": {
        "description": "A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "compatibilityLevel",
      "dataLocale",
      "eventsLateArrivalMaxDelayInSeconds",
      "eventsOutOfOrderMaxDelayInSeconds",
      "eventsOutOfOrderPolicy",
      "functions",
      "inputs",
      "outputErrorPolicy",
      "outputs",
      "outputStartMode",
      "outputStartTime",
      "sku",
      "transformation"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StreamAnalytics/streamingjobs/functions": {
    "api_version": "2016-03-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StreamAnalytics/streamingjobs/inputs": {
    "api_version": "2016-03-01",
    "full_properties": {
      "serialization": {
        "description": "Describes how data from an input is serialized or how data is serialized when written to an output.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "serialization"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StreamAnalytics/streamingjobs/outputs": {
    "api_version": "2016-03-01",
    "full_properties": {
      "datasource": {
        "description": "Describes the data source that output will be written to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serialization": {
        "description": "Describes how data from an input is serialized or how data is serialized when written to an output.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "datasource",
      "serialization"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.StreamAnalytics/streamingjobs/transformations": {
    "api_version": "2016-03-01",
    "full_properties": {
      "query": {
        "description": "Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "streamingUnits": {
        "description": "Specifies the number of streaming units that the streaming job uses.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "query",
      "streamingUnits"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "allowPublicAccessWhenBehindVnet": {
        "description": "The flag to indicate whether to allow public access when behind VNet.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationInsights": {
        "description": "ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "authorizations": {
        "description": "The workspace provider authorizations.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "batchaiWorkspace": {
        "description": "ARM id of the Batch AI workspace associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectivityEndpoints": {
        "description": "Connectivity endpoints",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerRegistry": {
        "description": "ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createdBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "createdDateTime": {
        "description": "The date and time stamp when the workspace was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultDataLakeStorage": {
        "description": "Details of the data lake storage account associated with the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description of this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "discoveryUrl": {
        "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "encryption": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "friendlyName": {
        "description": "The friendly name for this workspace. This name in mutable",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hbiWorkspace": {
        "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "imageBuildCompute": {
        "description": "The compute name for image build",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVault": {
        "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "keyVaultIdentifierId": {
        "description": "The key vault identifier used for encrypted workspaces.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedResourceGroupId": {
        "description": "The managed resource group Id.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "managedVirtualNetwork": {
        "description": "Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "ownerEmail": {
        "description": "The email id of the owner for this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Custom Parameters used for Cluster Creation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateEndpointConnections": {
        "description": "Private endpoint connections to the workspace",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioning state of the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForIngestion": {
        "description": "The network access type for accessing Log Analytics ingestion.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicNetworkAccessForQuery": {
        "description": "The network access type for accessing Log Analytics query.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionInDays": {
        "description": "The workspace data retention in days. -1 means Unlimited retention for the Unlimited Sku. 730 days is the maximum allowed for all other Skus. ",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sharedPrivateLinkResources": {
        "description": "The list of shared private link resources in this workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "The SKU (tier) of a workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sqlAdministratorLogin": {
        "description": "Login for workspace SQL active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sqlAdministratorLoginPassword": {
        "description": "SQL administrator login password",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccount": {
        "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "uiDefinitionUri": {
        "description": "The blob URI where the UI definition file is located.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "updatedBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userStorageAccountId": {
        "description": "The fully qualified arm id of the storage account associated with this workspace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkProfile": {
        "description": "Virtual Network Profile",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "provisioningState",
      "retentionInDays",
      "sku",
      "keyVaultIdentifierId",
      "ownerEmail",
      "userStorageAccountId",
      "description",
      "friendlyName",
      "applicationInsights",
      "batchaiWorkspace",
      "containerRegistry",
      "discoveryUrl",
      "keyVault",
      "storageAccount",
      "authorizations",
      "createdBy",
      "createdDateTime",
      "managedResourceGroupId",
      "parameters",
      "uiDefinitionUri",
      "updatedBy",
      "connectivityEndpoints",
      "defaultDataLakeStorage",
      "managedVirtualNetwork",
      "privateEndpointConnections",
      "sqlAdministratorLogin",
      "sqlAdministratorLoginPassword",
      "virtualNetworkProfile",
      "encryption",
      "hbiWorkspace",
      "publicNetworkAccessForIngestion",
      "publicNetworkAccessForQuery",
      "allowPublicAccessWhenBehindVnet",
      "imageBuildCompute",
      "sharedPrivateLinkResources"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/administrators": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "administratorType": {
        "description": "Workspace active directory administrator type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "login": {
        "description": "Login of the workspace active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sid": {
        "description": "Object ID of the workspace active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "tenantId": {
        "description": "Tenant ID of the workspace active directory administrator",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "administratorType",
      "login",
      "sid",
      "tenantId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/bigDataPools": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "autoPause": {
        "description": "Auto-pausing properties of a Big Data pool powered by Apache Spark",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoScale": {
        "description": "Auto-scaling properties of a Big Data pool powered by Apache Spark",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "creationDate": {
        "description": "The time when the Big Data pool was created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "defaultSparkLogFolder": {
        "description": "The default folder where Spark logs will be written.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "libraryRequirements": {
        "description": "Library requirements for a Big Data pool powered by Apache Spark",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeCount": {
        "description": "The number of nodes in the Big Data pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeSize": {
        "description": "The level of compute power that each node in the Big Data pool has.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nodeSizeFamily": {
        "description": "The kind of nodes that the Big Data pool provides.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The state of the Big Data pool.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sparkEventsFolder": {
        "description": "The Spark events folder",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sparkVersion": {
        "description": "The Apache Spark version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "autoPause",
      "autoScale",
      "creationDate",
      "defaultSparkLogFolder",
      "libraryRequirements",
      "nodeCount",
      "nodeSize",
      "nodeSizeFamily",
      "provisioningState",
      "sparkEventsFolder",
      "sparkVersion"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/firewallRules": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "endIpAddress": {
        "description": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "startIpAddress": {
        "description": "The start IP address of the firewall rule. Must be IPv4 format",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endIpAddress",
      "startIpAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/integrationRuntimes": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "additionalProperties": {
        "description": "Unmatched properties from the message are deserialized this collection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "Integration runtime description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "additionalProperties",
      "description"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/managedIdentitySqlControlSettings": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "grantSqlControlToManagedIdentity": {
        "description": "Grant sql control to managed identity",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "grantSqlControlToManagedIdentity"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/privateEndpointConnections": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "collation": {
        "description": "Collation mode",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "createMode": {
        "description": "What is this?",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "creationDate": {
        "description": "Date the SQL pool was created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "maxSizeBytes": {
        "description": "Maximum size in bytes",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "Resource state",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "recoverableDatabaseId": {
        "description": "Backup database to restore from",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "restorePointInTime": {
        "description": "Snapshot time to restore",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sourceDatabaseId": {
        "description": "Source database to create from",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Resource status",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "collation",
      "createMode",
      "creationDate",
      "maxSizeBytes",
      "provisioningState",
      "recoverableDatabaseId",
      "restorePointInTime",
      "sourceDatabaseId",
      "status"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/auditingSettings": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "auditActionsAndGroups": {
        "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isAzureMonitorTargetEnabled": {
        "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isStorageSecondaryKeyInUse": {
        "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the audit logs in the storage account.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the auditing storage account. If state is Enabled and storageEndpoint is specified, storageAccountAccessKey is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageAccountSubscriptionId": {
        "description": "Specifies the blob storage subscription Id.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "auditActionsAndGroups",
      "isAzureMonitorTargetEnabled",
      "isStorageSecondaryKeyInUse",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageAccountSubscriptionId",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/metadataSync": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "enabled": {
        "description": "Indicates whether the metadata sync is enabled or disabled",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabled"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/schemas/tables/columns/sensitivityLabels": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "informationType": {
        "description": "The information type.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "informationTypeId": {
        "description": "The information type ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labelId": {
        "description": "The label ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "labelName": {
        "description": "The label name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "rank": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "informationType",
      "informationTypeId",
      "labelId",
      "labelName",
      "rank"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/securityAlertPolicies": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "disabledAlerts": {
        "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAccountAdmins": {
        "description": "Specifies that the alert is sent to the account administrators.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "emailAddresses": {
        "description": "Specifies an array of e-mail addresses to which the alert is sent.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "retentionDays": {
        "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the Threat Detection audit storage account.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageEndpoint": {
        "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "disabledAlerts",
      "emailAccountAdmins",
      "emailAddresses",
      "retentionDays",
      "state",
      "storageAccountAccessKey",
      "storageEndpoint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/transparentDataEncryption": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "status": {
        "description": "The status of the database transparent data encryption.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "status"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/vulnerabilityAssessments": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "recurringScans": {
        "description": "Properties of a Vulnerability Assessment recurring scans.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageAccountAccessKey": {
        "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerPath": {
        "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "storageContainerSasKey": {
        "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "recurringScans",
      "storageAccountAccessKey",
      "storageContainerPath",
      "storageContainerSasKey"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Synapse/workspaces/sqlPools/vulnerabilityAssessments/rules/baselines": {
    "api_version": "2019-06-01-preview",
    "full_properties": {
      "baselineResults": {
        "description": "The rule baseline result",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "baselineResults"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.TimeSeriesInsights/environments": {
    "api_version": "2018-08-15-preview",
    "full_properties": {
      "dataRetentionTime": {
        "description": "ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "partitionKeyProperties": {
        "description": "The list of partition keys according to which the data in the environment will be ordered.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageLimitExceededBehavior": {
        "description": "The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If \"PauseIngress\" is specified, new events will not be read from the event source. If \"PurgeOldData\" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "dataRetentionTime",
      "storageLimitExceededBehavior",
      "partitionKeyProperties"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "sku",
      "type"
    ]
  },
  "Microsoft.TimeSeriesInsights/environments/accessPolicies": {
    "api_version": "2018-08-15-preview",
    "full_properties": {
      "description": {
        "description": "An description of the access policy.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "principalObjectId": {
        "description": "The objectId of the principal in Azure Active Directory.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "roles": {
        "description": "The list of roles the principal is assigned on the environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "principalObjectId",
      "roles"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.TimeSeriesInsights/environments/eventSources": {
    "api_version": "2018-08-15-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "type"
    ]
  },
  "Microsoft.TimeSeriesInsights/environments/referenceDataSets": {
    "api_version": "2018-08-15-preview",
    "full_properties": {
      "dataStringComparisonBehavior": {
        "description": "The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyProperties": {
        "description": "The list of key properties for the reference data set.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "keyProperties",
      "dataStringComparisonBehavior"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.VMwareCloudSimple/dedicatedCloudNodes": {
    "api_version": "2019-04-01",
    "full_properties": {
      "availabilityZoneId": {
        "description": "Availability Zone id, e.g. \"az1\"",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodesCount": {
        "description": "count of nodes to create",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "placementGroupId": {
        "description": "Placement Group id, e.g. \"n1\"",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "purchaseId": {
        "description": "purchase id",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "skuDescription": {
        "description": "The purchase SKU for CloudSimple paid resources",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "availabilityZoneId",
      "nodesCount",
      "placementGroupId",
      "purchaseId",
      "skuDescription"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.VMwareCloudSimple/dedicatedCloudServices": {
    "api_version": "2019-04-01",
    "full_properties": {
      "gatewaySubnet": {
        "description": "gateway Subnet for the account. It will collect the subnet address and always treat it as /28",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "gatewaySubnet"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.VMwareCloudSimple/virtualMachines": {
    "api_version": "2019-04-01",
    "full_properties": {
      "additionalCapabilities": {
        "description": "Specifies additional capabilities enabled or disabled on the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "address": {
        "description": "Public IP address of the virtual machine.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "administratorAccount": {
        "description": "Admin credentials for virtual machine",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "amountOfRam": {
        "description": "The amount of memory",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availabilitySet": {
        "description": "Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Manage the availability of virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> For more information on Azure planned maintenance, see [Planned maintenance for virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Currently, a VM can only be added to availability set at creation time. An existing VM cannot be added to an availability set. <br><br>This property cannot exist along with a non-null properties.virtualMachineScaleSet reference.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "billingProfile": {
        "description": "Specifies the billing related details of a Azure Spot virtual machine. <br><br>Minimum api-version: 2019-03-01.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customization": {
        "description": "Guest OS Customization properties",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "diagnosticsProfile": {
        "description": "Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "disks": {
        "description": "The list of Virtual Disks",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "evictionPolicy": {
        "description": "Specifies the eviction policy for the Azure Spot virtual machine. Only supported value is 'Deallocate'. <br><br>Minimum api-version: 2019-03-01.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "exposeToGuestVM": {
        "description": "Expose Guest OS or not",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hardwareProfile": {
        "description": "Specifies the hardware settings for the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "host": {
        "description": "Specifies information about the dedicated host that the virtual machine resides in. <br><br>Minimum api-version: 2018-10-01.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "licenseType": {
        "description": "Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain the Windows Server operating system. <br><br> Possible values are: <br><br> Windows_Client <br><br> Windows_Server <br><br> If this element is included in a request for an update, the value must match the initial value. This value cannot be updated. <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) <br><br> Minimum api-version: 2015-06-15",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkProfile": {
        "description": "Specifies the network interfaces of the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "nics": {
        "description": "The list of Virtual NICs",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "numberOfCores": {
        "description": "The number of CPU cores",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osProfile": {
        "description": "Specifies the operating system settings for the virtual machine.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "password": {
        "description": "Password for login. Deprecated - use customization property",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "priority": {
        "description": "Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "privateCloudId": {
        "description": "Private Cloud Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "proximityPlacementGroup": {
        "description": "Specifies information about the proximity placement group that the virtual machine should be assigned to. <br><br>Minimum api-version: 2018-04-01.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourcePool": {
        "description": "Resource pool model",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sshPort": {
        "description": "Port open for ssh connections.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "storageProfile": {
        "description": "Specifies the storage settings for the virtual machine disks.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "templateId": {
        "description": "Virtual Machine Template Id",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "username": {
        "description": "Username for login. Deprecated - use customization property",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vSphereNetworks": {
        "description": "The list of Virtual VSphere Networks",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachineScaleSet": {
        "description": "Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. <br><br>This property cannot exist along with a non-null properties.availabilitySet reference. <br><br>Minimum api‐version: 2019‐03‐01",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualMachineSize": {
        "description": "Virtual Machine size",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "hardwareProfile",
      "storageProfile",
      "osProfile",
      "networkProfile",
      "diagnosticsProfile",
      "availabilitySet",
      "licenseType",
      "address",
      "administratorAccount",
      "sshPort",
      "virtualMachineSize",
      "additionalCapabilities",
      "virtualMachineScaleSet",
      "proximityPlacementGroup",
      "priority",
      "evictionPolicy",
      "billingProfile",
      "host",
      "amountOfRam",
      "customization",
      "disks",
      "exposeToGuestVM",
      "nics",
      "numberOfCores",
      "password",
      "privateCloudId",
      "resourcePool",
      "templateId",
      "username",
      "vSphereNetworks"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.VMwareVirtustream/privateClouds": {
    "api_version": "2019-08-09-preview",
    "full_properties": {
      "circuit": {
        "description": "An ExpressRoute Circuit",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cluster": {
        "description": "The properties of a default cluster",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "identitySources": {
        "description": "vCenter Single Sign On Identity Sources",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "internet": {
        "description": "Connectivity to internet is enabled or disabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "networkBlock": {
        "description": "The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nsxtPassword": {
        "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vcenterPassword": {
        "description": "Optionally, set the vCenter admin password when the private cloud is created",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "circuit",
      "cluster",
      "identitySources",
      "internet",
      "networkBlock",
      "nsxtPassword",
      "vcenterPassword"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.VMwareVirtustream/privateClouds/clusters": {
    "api_version": "2019-08-09-preview",
    "full_properties": {
      "addOnFeatures": {
        "description": "The list of add-on features to enable in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "applicationTypeVersionsCleanupPolicy": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "availableClusterVersions": {
        "description": "The Service Fabric runtime versions available for this cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "azureActiveDirectory": {
        "description": "The settings to enable AAD authentication on the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "certificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateCommonNames": {
        "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertificateThumbprints": {
        "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterCodeVersion": {
        "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSize": {
        "description": "The cluster size",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clusterState": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dataIngestionUri": {
        "description": "The cluster data ingestion URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "diagnosticsStorageAccountConfig": {
        "description": "The storage account information for storing Service Fabric diagnostic logs.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableDiskEncryption": {
        "description": "A boolean value that indicates if the cluster's disks are encrypted.",
        "required": false,
        "type": "boolean",
        "update_causes": "unknown"
      },
      "enablePurge": {
        "description": "A boolean value that indicates if the purge operations are enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enableStreamingIngest": {
        "description": "A boolean value that indicates if the streaming ingest is enabled.",
        "required": false,
        "type": "boolean",
        "update_causes": "unknown"
      },
      "eventStoreServiceEnabled": {
        "description": "Indicates if the event store service is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "fabricSettings": {
        "description": "The list of custom fabric settings to configure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpApplicationGatewayCertificate": {
        "description": "Microsoft.ServiceFabric/clusters: The server certificate used by reverse proxy.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "keyVaultProperties": {
        "description": "The key vault properties.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managementEndpoint": {
        "description": "The http management endpoint of the cluster.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nextLink": {
        "description": "The link used to get the next page of recommendations.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeTypes": {
        "description": "The list of node types in the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "optimizedAutoscale": {
        "description": "A class that contains the optimized auto scale definition.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "provisioningState": {
        "description": "The provisioned state of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "reliabilityLevel": {
        "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificate": {
        "description": "Describes the certificate details.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reverseProxyCertificateCommonNames": {
        "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "The state of the resource.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "trustedExternalTenants": {
        "description": "The cluster's external tenants.",
        "required": false,
        "type": "array",
        "update_causes": "unknown"
      },
      "upgradeDescription": {
        "description": "Describes the policy used when upgrading the cluster.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "upgradeMode": {
        "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n\n  - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.\n  - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.\n.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "uri": {
        "description": "The cluster URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "virtualNetworkConfiguration": {
        "description": "A class that contains virtual network definition.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "vmImage": {
        "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vmImage",
      "httpApplicationGatewayCertificate",
      "azureActiveDirectory",
      "reliabilityLevel",
      "nodeTypes",
      "managementEndpoint",
      "certificate",
      "clientCertificateThumbprints",
      "clientCertificateCommonNames",
      "fabricSettings",
      "upgradeDescription",
      "diagnosticsStorageAccountConfig",
      "clusterCodeVersion",
      "reverseProxyCertificate",
      "upgradeMode",
      "addOnFeatures",
      "availableClusterVersions",
      "clusterState",
      "certificateCommonNames",
      "reverseProxyCertificateCommonNames",
      "state",
      "provisioningState",
      "uri",
      "dataIngestionUri",
      "trustedExternalTenants",
      "eventStoreServiceEnabled",
      "optimizedAutoscale",
      "enableDiskEncryption",
      "enableStreamingIngest",
      "virtualNetworkConfiguration",
      "keyVaultProperties",
      "nextLink",
      "clusterSize",
      "applicationTypeVersionsCleanupPolicy",
      "enablePurge"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.VirtualMachineImages/imageTemplates": {
    "api_version": "2020-02-14",
    "full_properties": {
      "buildTimeoutInMinutes": {
        "description": "Maximum duration to wait while building the image template. Omit or specify 0 to use the default (4 hours).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customize": {
        "description": "Specifies the properties used to describe the customization steps of the image, like Image source etc",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "distribute": {
        "description": "The distribution targets where the image output needs to go to.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "source": {
        "description": "Describes a virtual machine image source for building, customizing and distributing",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vmProfile": {
        "description": "Describes the virtual machine used to build, customize and capture images",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "customize",
      "distribute",
      "source",
      "buildTimeoutInMinutes",
      "vmProfile"
    ],
    "required": [
      "apiVersion",
      "identity",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/certificates": {
    "api_version": "2018-11-01",
    "full_properties": {
      "password": {
        "description": "Microsoft.Web/certficates: A string that contains the password for the certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "pfxBlob": {
        "description": "Microsoft.Web/certificates: A base64Binary value that contains the PfxBlob of the certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "pfxBlob",
      "password"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/connectionGateways": {
    "api_version": "2016-06-01",
    "full_properties": {
      "connectionGatewayInstallation": {
        "description": "The reference to connection gateway installation resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "description",
      "connectionGatewayInstallation"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Web/connections": {
    "api_version": "2016-06-01",
    "full_properties": {
      "api": {
        "description": "The reference to API resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customParameterValues": {
        "description": "The custom parameter values.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "parameterValues": {
        "description": "The parameter values.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "customParameterValues",
      "parameterValues",
      "api"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Web/csrs": {
    "api_version": "2016-03-01",
    "full_properties": {
      "csrString": {
        "description": "Actual CSR string created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "distinguishedName": {
        "description": "Distinguished name of certificate to be created.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostingEnvironment": {
        "description": "App Service Environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "Name used to locate CSR object.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "PFX password.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "pfxBlob": {
        "description": "PFX certifcate of created certificate.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publicKeyHash": {
        "description": "Hash of the certificate's public key.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "name",
      "distinguishedName",
      "csrString",
      "pfxBlob",
      "password",
      "publicKeyHash",
      "hostingEnvironment"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Web/customApis": {
    "api_version": "2016-06-01",
    "full_properties": {
      "backendService": {
        "description": "The backend service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "brandColor": {
        "description": "The brand color.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "connectionParameters": {
        "description": "The connection parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "displayName": {
        "description": "The display name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "iconUri": {
        "description": "The icon URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "swagger": {
        "description": "The swagger schema. See Swagger specification: http://swagger.io/specification/",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "displayName",
      "description",
      "brandColor",
      "iconUri",
      "backendService",
      "connectionParameters",
      "swagger"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Web/hostingEnvironments": {
    "api_version": "2018-02-01",
    "full_properties": {
      "apiManagementAccountId": {
        "description": "API Management Account associated with the App Service Environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "clusterSettings": {
        "description": "Custom settings for changing the behavior of the App Service Environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dnsSuffix": {
        "description": "DNS suffix of the App Service Environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dynamicCacheEnabled": {
        "description": "True/false indicating whether the App Service Environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available\n(most likely because NSG blocked the incoming traffic).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frontEndScaleFactor": {
        "description": "Scale factor for front-ends.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hasLinuxWorkers": {
        "description": "Flag that displays whether an ASE has linux workers or not",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "internalLoadBalancingMode": {
        "description": "Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipsslAddressCount": {
        "description": "Number of IP SSL addresses reserved for the App Service Environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "location": {
        "description": "Location of the App Service Environment, e.g. \"West US\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "multiRoleCount": {
        "description": "Number of front-end instances.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "multiSize": {
        "description": "Front-end VM size, e.g. \"Medium\", \"Large\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "name": {
        "description": "Name of the App Service Environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "networkAccessControlList": {
        "description": "Access control list for controlling traffic to the App Service Environment.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sslCertKeyVaultId": {
        "description": "Key Vault ID for ILB App Service Environment default SSL certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sslCertKeyVaultSecretName": {
        "description": "Key Vault Secret Name for ILB App Service Environment default SSL certificate",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "suspended": {
        "description": "<code>true</code> if the App Service Environment is suspended; otherwise, <code>false</code>. The environment can be suspended, e.g. when the management endpoint is no longer available\n (most likely because NSG blocked the incoming traffic).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "userWhitelistedIpRanges": {
        "description": "User added ip ranges to whitelist on ASE db",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetwork": {
        "description": "Specification for using a Virtual Network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetName": {
        "description": "Name of the Virtual Network for the App Service Environment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vnetResourceGroupName": {
        "description": "Resource group of the Virtual Network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vnetSubnetName": {
        "description": "Subnet of the Virtual Network.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "workerPools": {
        "description": "Description of worker pools with worker size IDs, VM sizes, and number of workers in each pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "apiManagementAccountId",
      "clusterSettings",
      "dnsSuffix",
      "dynamicCacheEnabled",
      "frontEndScaleFactor",
      "hasLinuxWorkers",
      "internalLoadBalancingMode",
      "ipsslAddressCount",
      "location",
      "multiRoleCount",
      "multiSize",
      "name",
      "networkAccessControlList",
      "sslCertKeyVaultId",
      "sslCertKeyVaultSecretName",
      "suspended",
      "userWhitelistedIpRanges",
      "virtualNetwork",
      "vnetName",
      "vnetResourceGroupName",
      "vnetSubnetName",
      "workerPools"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/hostingEnvironments/multiRolePools": {
    "api_version": "2018-02-01",
    "full_properties": {
      "computeMode": {
        "description": "Shared or dedicated app hosting.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workerCount": {
        "description": "Number of instances in the worker pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workerSize": {
        "description": "VM size of the worker pool instances.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "workerSizeId": {
        "description": "Worker size ID for referencing this worker pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "workerSizeId",
      "computeMode",
      "workerSize",
      "workerCount"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/hostingEnvironments/workerPools": {
    "api_version": "2018-02-01",
    "full_properties": {
      "computeMode": {
        "description": "Shared or dedicated app hosting.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workerCount": {
        "description": "Number of instances in the worker pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workerSize": {
        "description": "VM size of the worker pool instances.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "workerSizeId": {
        "description": "Worker size ID for referencing this worker pool.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "workerSizeId",
      "computeMode",
      "workerSize",
      "workerCount"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/serverfarms": {
    "api_version": "2018-02-01",
    "full_properties": {
      "name": {
        "description": "Microsoft.Web/serverfarms: Name of the server farm.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "numberOfWorkers": {
        "description": "Microsoft.Web/serverfarms: The instance count, which is the number of virtual machines dedicated to the farm. Supported values are 1-10.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Microsoft.Web/serverfarms: Server farm sku.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "workerSize": {
        "description": "Microsoft.Web/serverfarms: The instance size.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "name",
      "sku",
      "workerSize",
      "numberOfWorkers"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/serverfarms/virtualNetworkConnections/gateways": {
    "api_version": "2018-02-01",
    "full_properties": {
      "vnetName": {
        "description": "The Virtual Network name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vpnPackageUri": {
        "description": "The URI where the VPN package can be downloaded.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vnetName",
      "vpnPackageUri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/serverfarms/virtualNetworkConnections/routes": {
    "api_version": "2018-02-01",
    "full_properties": {
      "endAddress": {
        "description": "The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "routeType": {
        "description": "The type of route this is:\nDEFAULT - By default, every app has routes to the local address ranges specified by RFC1918\nINHERITED - Routes inherited from the real Virtual Network routes\nSTATIC - Static route set on the app only\n\nThese values will be used for syncing an app's routes with those from a Virtual Network.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "startAddress": {
        "description": "The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "endAddress",
      "routeType",
      "startAddress"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites": {
    "api_version": "2018-11-01",
    "full_properties": {
      "enabledHostnames": {
        "description": "Microsoft.Web/sites: An array of strings that contains enabled hostnames for the site. By default, these are <SiteName>.azurewebsites.net and <SiteName>.scm.azurewebsites.net.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostNameSslStates": {
        "description": "Microsoft.Web/sites: Container for SSL states.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostnames": {
        "description": "Microsoft.Web/sites: An array of strings that contains the public hostnames for the site, including custom domains.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "Microsoft.Web/sites: The name of web site.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverFarm": {
        "description": "Microsoft.Web/sites: The name of server farm site belongs to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serverFarmId": {
        "description": "Microsoft.Web/sites: The resource Id of server farm site belongs to.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "name",
      "serverFarm",
      "hostnames",
      "enabledHostnames",
      "hostNameSslStates",
      "serverFarmId"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/config": {
    "api_version": "2018-11-01",
    "full_properties": {
      "alwaysOn": {
        "description": "<code>true</code> if Always On is enabled; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiDefinition": {
        "description": "Information about the formal API definition for the app.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "appCommandLine": {
        "description": "App command line to launch.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "appSettings": {
        "description": "Application settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoHealEnabled": {
        "description": "<code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoHealRules": {
        "description": "Rules that can be defined for auto-heal.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoSwapSlotName": {
        "description": "Auto-swap slot name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azureStorageAccounts": {
        "description": "User-provided Azure storage accounts.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionStrings": {
        "description": "Connection strings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cors": {
        "description": "Cross-Origin Resource Sharing (CORS) settings for the app.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultDocuments": {
        "description": "Default documents.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "detailedErrorLoggingEnabled": {
        "description": "<code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "documentRoot": {
        "description": "Document root.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "experiments": {
        "description": "Routing rules in production experiments.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ftpsState": {
        "description": "State of FTP / FTPS service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "handlerMappings": {
        "description": "Handler mappings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "http20Enabled": {
        "description": "Http20Enabled: configures a web site to allow clients to connect over http2.0",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpLoggingEnabled": {
        "description": "<code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipSecurityRestrictions": {
        "description": "IP security restrictions for main.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "javaContainer": {
        "description": "Java container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "javaContainerVersion": {
        "description": "Java container version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "javaVersion": {
        "description": "Java version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "limits": {
        "description": "Metric limits set on an app.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "linuxFxVersion": {
        "description": "Linux App Framework and version",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "loadBalancing": {
        "description": "Site load balancing.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "localMySqlEnabled": {
        "description": "<code>true</code> to enable local MySQL; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logsDirectorySizeLimit": {
        "description": "HTTP logs directory size limit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedPipelineMode": {
        "description": "Managed pipeline mode.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedServiceIdentityId": {
        "description": "Managed Service Identity Id",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minTlsVersion": {
        "description": "MinTlsVersion: configures the minimum version of TLS required for SSL requests.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "netFrameworkVersion": {
        "description": ".NET Framework version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeVersion": {
        "description": "Version of Node.js.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "numberOfWorkers": {
        "description": "Number of workers.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "phpVersion": {
        "description": "Version of PHP.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingUsername": {
        "description": "Publishing user name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "push": {
        "description": "Push settings for the App.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "pythonVersion": {
        "description": "Version of Python.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "remoteDebuggingEnabled": {
        "description": "<code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "remoteDebuggingVersion": {
        "description": "Remote debugging version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestTracingEnabled": {
        "description": "<code>true</code> if request tracing is enabled; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestTracingExpirationTime": {
        "description": "Request tracing expiration time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "reservedInstanceCount": {
        "description": "Number of reserved instances.\nThis setting only applies to the Consumption Plan",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scmIpSecurityRestrictions": {
        "description": "IP security restrictions for scm.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scmIpSecurityRestrictionsUseMain": {
        "description": "IP security restrictions for scm to use main.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scmType": {
        "description": "SCM type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tracingOptions": {
        "description": "Tracing options.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "use32BitWorkerProcess": {
        "description": "<code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualApplications": {
        "description": "Virtual applications.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetName": {
        "description": "Virtual Network name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "webSocketsEnabled": {
        "description": "<code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "windowsFxVersion": {
        "description": "Xenon App Framework and version",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "xManagedServiceIdentityId": {
        "description": "Explicit Managed Service Identity Id",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "numberOfWorkers",
      "defaultDocuments",
      "netFrameworkVersion",
      "phpVersion",
      "pythonVersion",
      "nodeVersion",
      "linuxFxVersion",
      "requestTracingEnabled",
      "requestTracingExpirationTime",
      "remoteDebuggingEnabled",
      "remoteDebuggingVersion",
      "httpLoggingEnabled",
      "logsDirectorySizeLimit",
      "detailedErrorLoggingEnabled",
      "publishingUsername",
      "appSettings",
      "connectionStrings",
      "handlerMappings",
      "documentRoot",
      "scmType",
      "use32BitWorkerProcess",
      "webSocketsEnabled",
      "alwaysOn",
      "javaVersion",
      "javaContainer",
      "javaContainerVersion",
      "appCommandLine",
      "managedPipelineMode",
      "virtualApplications",
      "loadBalancing",
      "experiments",
      "limits",
      "autoHealEnabled",
      "autoHealRules",
      "tracingOptions",
      "vnetName",
      "cors",
      "push",
      "apiDefinition",
      "autoSwapSlotName",
      "localMySqlEnabled",
      "ipSecurityRestrictions",
      "azureStorageAccounts",
      "ftpsState",
      "http20Enabled",
      "managedServiceIdentityId",
      "minTlsVersion",
      "reservedInstanceCount",
      "scmIpSecurityRestrictions",
      "scmIpSecurityRestrictionsUseMain",
      "windowsFxVersion",
      "xManagedServiceIdentityId"
    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.Web/sites/deployments": {
    "api_version": "2018-11-01",
    "full_properties": {
      "active": {
        "description": "True if deployment is currently active, false if completed and null if not started.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "author": {
        "description": "Who authored the deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "author_email": {
        "description": "Author email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "debugSetting": {
        "description": "The debug setting.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deployer": {
        "description": "Who performed the deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Details on deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "end_time": {
        "description": "End time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "message": {
        "description": "Details about deployment status.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "mode": {
        "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "onErrorDeployment": {
        "description": "Deployment on error behavior.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "parametersLink": {
        "description": "Entity representing the reference to the deployment parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "start_time": {
        "description": "Start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Deployment status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "template": {
        "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "templateLink": {
        "description": "Entity representing the reference to the template.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "mode",
      "parameters",
      "parametersLink",
      "template",
      "templateLink",
      "debugSetting",
      "onErrorDeployment",
      "active",
      "author",
      "author_email",
      "deployer",
      "details",
      "end_time",
      "message",
      "start_time",
      "status"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/domainOwnershipIdentifiers": {
    "api_version": "2018-11-01",
    "full_properties": {
      "id": {
        "description": "String representation of the identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "id"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/extensions": {
    "api_version": "2018-11-01",
    "full_properties": {
      "appOffline": {
        "description": "Sets the AppOffline rule while the MSDeploy operation executes.\nSetting is <code>false</code> by default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionString": {
        "description": "SQL Connection String",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dbType": {
        "description": "Database Type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "packageUri": {
        "description": "Package URI",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "setParameters": {
        "description": "MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "setParametersXmlFileUri": {
        "description": "URI of MSDeploy Parameters file. Must not be set if SetParameters is used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "skipAppData": {
        "description": "Controls whether the MSDeploy operation skips the App_Data directory.\nIf set to <code>true</code>, the existing App_Data directory on the destination\nwill not be deleted, and any App_Data directory in the source will be ignored.\nSetting is <code>false</code> by default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appOffline",
      "connectionString",
      "dbType",
      "packageUri",
      "setParameters",
      "setParametersXmlFileUri",
      "skipAppData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/functions": {
    "api_version": "2018-11-01",
    "full_properties": {
      "config": {
        "description": "Config information.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "config_href": {
        "description": "Config URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "files": {
        "description": "File list.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "function_app_id": {
        "description": "Function App ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "href": {
        "description": "Function URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "script_href": {
        "description": "Script URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "script_root_path_href": {
        "description": "Script root path URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secrets_file_href": {
        "description": "Secrets file URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "test_data": {
        "description": "Test data used when testing via the Azure Portal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "config",
      "config_href",
      "files",
      "function_app_id",
      "href",
      "script_href",
      "script_root_path_href",
      "secrets_file_href",
      "test_data"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/functions/keys": {
    "api_version": "2018-02-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Web/sites/hostNameBindings": {
    "api_version": "2018-11-01",
    "full_properties": {
      "azureResourceName": {
        "description": "Azure resource name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azureResourceType": {
        "description": "Azure resource type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customHostNameDnsRecordType": {
        "description": "Custom DNS record type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "domainId": {
        "description": "Fully qualified ARM domain resource URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostNameType": {
        "description": "Hostname type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "siteName": {
        "description": "App Service app name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sslState": {
        "description": "SSL type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "SSL certificate thumbprint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureResourceName",
      "azureResourceType",
      "customHostNameDnsRecordType",
      "domainId",
      "hostNameType",
      "siteName",
      "sslState",
      "thumbprint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/hybridConnectionNamespaces/relays": {
    "api_version": "2018-11-01",
    "full_properties": {
      "hostname": {
        "description": "The hostname of the endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "port": {
        "description": "The port of the endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "relayArmUri": {
        "description": "The ARM URI to the Service Bus relay.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "relayName": {
        "description": "The name of the Service Bus relay.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requiresClientAuthorization": {
        "description": "Returns true if client authorization is needed for this hybrid connection; otherwise, false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sendKeyName": {
        "description": "The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sendKeyValue": {
        "description": "The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned\nnormally, use the POST /listKeys API instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceBusNamespace": {
        "description": "The name of the Service Bus namespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceBusSuffix": {
        "description": "The suffix for the service bus endpoint. By default this is .servicebus.windows.net",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userMetadata": {
        "description": "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "requiresClientAuthorization",
      "userMetadata",
      "hostname",
      "port",
      "relayArmUri",
      "relayName",
      "sendKeyName",
      "sendKeyValue",
      "serviceBusNamespace",
      "serviceBusSuffix"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/hybridconnection": {
    "api_version": "2018-11-01",
    "full_properties": {
      "biztalkUri": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "entityConnectionString": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "entityName": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostname": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "port": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceConnectionString": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceType": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "biztalkUri",
      "entityConnectionString",
      "entityName",
      "hostname",
      "port",
      "resourceConnectionString",
      "resourceType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/instances/deployments": {
    "api_version": "2016-08-01",
    "full_properties": {
      "active": {
        "description": "Active.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "author": {
        "description": "Author.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "author_email": {
        "description": "Author email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deployer": {
        "description": "Deployer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Detail.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "end_time": {
        "description": "End time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "id": {
        "description": "ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "message": {
        "description": "Message.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "start_time": {
        "description": "Start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "id",
      "status",
      "message",
      "author",
      "deployer",
      "author_email",
      "start_time",
      "end_time",
      "active",
      "details"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Web/sites/instances/extensions": {
    "api_version": "2018-11-01",
    "full_properties": {
      "appOffline": {
        "description": "Sets the AppOffline rule while the MSDeploy operation executes.\nSetting is <code>false</code> by default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionString": {
        "description": "SQL Connection String",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dbType": {
        "description": "Database Type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "packageUri": {
        "description": "Package URI",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "setParameters": {
        "description": "MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "setParametersXmlFileUri": {
        "description": "URI of MSDeploy Parameters file. Must not be set if SetParameters is used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "skipAppData": {
        "description": "Controls whether the MSDeploy operation skips the App_Data directory.\nIf set to <code>true</code>, the existing App_Data directory on the destination\nwill not be deleted, and any App_Data directory in the source will be ignored.\nSetting is <code>false</code> by default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appOffline",
      "connectionString",
      "dbType",
      "packageUri",
      "setParameters",
      "setParametersXmlFileUri",
      "skipAppData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/migrate": {
    "api_version": "2018-11-01",
    "full_properties": {
      "azurefilesConnectionString": {
        "description": "AzureFiles connection string.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azurefilesShare": {
        "description": "AzureFiles share.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "blockWriteAccessToSite": {
        "description": "<code>true</code> if the app should be read only during copy operation; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "switchSiteAfterMigration": {
        "description": "<code>true</code>if the app should be switched over; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azurefilesConnectionString",
      "azurefilesShare",
      "blockWriteAccessToSite",
      "switchSiteAfterMigration"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/networkConfig": {
    "api_version": "2018-11-01",
    "full_properties": {
      "subnetResourceId": {
        "description": "The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "swiftSupported": {
        "description": "A flag that specifies if the scale unit this Web App is on supports Swift integration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "subnetResourceId",
      "swiftSupported"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/premieraddons": {
    "api_version": "2018-11-01",
    "full_properties": {
      "marketplaceOffer": {
        "description": "Premier add on Marketplace offer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "marketplacePublisher": {
        "description": "Premier add on Marketplace publisher.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "product": {
        "description": "Premier add on Product.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Premier add on SKU.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vendor": {
        "description": "Premier add on Vendor.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "marketplaceOffer",
      "marketplacePublisher",
      "product",
      "sku",
      "vendor"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/privateAccess": {
    "api_version": "2018-11-01",
    "full_properties": {
      "enabled": {
        "description": "Whether private access is enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworks": {
        "description": "The Virtual Networks (and subnets) allowed to access the site privately.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabled",
      "virtualNetworks"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/publicCertificates": {
    "api_version": "2018-11-01",
    "full_properties": {
      "blob": {
        "description": "Public Certificate byte array",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicCertificateLocation": {
        "description": "Public Certificate Location.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "blob",
      "publicCertificateLocation"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/siteextensions": {
    "api_version": "2018-11-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots": {
    "api_version": "2018-11-01",
    "full_properties": {
      "clientAffinityEnabled": {
        "description": "<code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertEnabled": {
        "description": "<code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "clientCertExclusionPaths": {
        "description": "client certificate authentication comma-separated exclusion paths",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "cloningInfo": {
        "description": "Information needed for cloning operation.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "containerSize": {
        "description": "Size of the function container.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "dailyMemoryTimeQuota": {
        "description": "Maximum allowed daily memory-time quota (applicable on dynamic apps only).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "enabled": {
        "description": "<code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "geoDistributions": {
        "description": "GeoDistributions for this site",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostNameSslStates": {
        "description": "Hostname SSL states are used to manage the SSL bindings for app's hostnames.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostNamesDisabled": {
        "description": "<code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.\n If <code>true</code>, the app is only accessible via API management process.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hostingEnvironmentProfile": {
        "description": "Specification for an App Service Environment to use for this resource.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpsOnly": {
        "description": "HttpsOnly: configures a web site to accept only https requests. Issues redirect for\nhttp requests",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "hyperV": {
        "description": "Hyper-V sandbox.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isXenon": {
        "description": "Obsolete: Hyper-V sandbox.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "redundancyMode": {
        "description": "Site redundancy mode.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "reserved": {
        "description": "<code>true</code> if reserved; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scmSiteAlsoStopped": {
        "description": "<code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "serverFarmId": {
        "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "siteConfig": {
        "description": "Configuration of an App Service app.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "clientAffinityEnabled",
      "clientCertEnabled",
      "clientCertExclusionPaths",
      "cloningInfo",
      "containerSize",
      "dailyMemoryTimeQuota",
      "enabled",
      "geoDistributions",
      "hostingEnvironmentProfile",
      "hostNamesDisabled",
      "hostNameSslStates",
      "httpsOnly",
      "hyperV",
      "isXenon",
      "redundancyMode",
      "reserved",
      "scmSiteAlsoStopped",
      "serverFarmId",
      "siteConfig"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/config": {
    "api_version": "2018-11-01",
    "full_properties": {
      "alwaysOn": {
        "description": "<code>true</code> if Always On is enabled; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "apiDefinition": {
        "description": "Information about the formal API definition for the app.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "appCommandLine": {
        "description": "App command line to launch.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "appSettings": {
        "description": "Application settings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoHealEnabled": {
        "description": "<code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoHealRules": {
        "description": "Rules that can be defined for auto-heal.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "autoSwapSlotName": {
        "description": "Auto-swap slot name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azureStorageAccounts": {
        "description": "User-provided Azure storage accounts.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionStrings": {
        "description": "Connection strings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "cors": {
        "description": "Cross-Origin Resource Sharing (CORS) settings for the app.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "defaultDocuments": {
        "description": "Default documents.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "detailedErrorLoggingEnabled": {
        "description": "<code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "documentRoot": {
        "description": "Document root.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "experiments": {
        "description": "Routing rules in production experiments.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ftpsState": {
        "description": "State of FTP / FTPS service.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "handlerMappings": {
        "description": "Handler mappings.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "http20Enabled": {
        "description": "Http20Enabled: configures a web site to allow clients to connect over http2.0",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "httpLoggingEnabled": {
        "description": "<code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "ipSecurityRestrictions": {
        "description": "IP security restrictions for main.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "javaContainer": {
        "description": "Java container.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "javaContainerVersion": {
        "description": "Java container version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "javaVersion": {
        "description": "Java version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "limits": {
        "description": "Metric limits set on an app.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "linuxFxVersion": {
        "description": "Linux App Framework and version",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "loadBalancing": {
        "description": "Site load balancing.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "localMySqlEnabled": {
        "description": "<code>true</code> to enable local MySQL; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "logsDirectorySizeLimit": {
        "description": "HTTP logs directory size limit.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedPipelineMode": {
        "description": "Managed pipeline mode.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "managedServiceIdentityId": {
        "description": "Managed Service Identity Id",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "minTlsVersion": {
        "description": "MinTlsVersion: configures the minimum version of TLS required for SSL requests.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "netFrameworkVersion": {
        "description": ".NET Framework version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "nodeVersion": {
        "description": "Version of Node.js.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "numberOfWorkers": {
        "description": "Number of workers.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "phpVersion": {
        "description": "Version of PHP.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "publishingUsername": {
        "description": "Publishing user name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "push": {
        "description": "Push settings for the App.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "pythonVersion": {
        "description": "Version of Python.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "remoteDebuggingEnabled": {
        "description": "<code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "remoteDebuggingVersion": {
        "description": "Remote debugging version.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requestTracingEnabled": {
        "description": "<code>true</code> if request tracing is enabled; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "requestTracingExpirationTime": {
        "description": "Request tracing expiration time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "reservedInstanceCount": {
        "description": "Number of reserved instances.\nThis setting only applies to the Consumption Plan",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scmIpSecurityRestrictions": {
        "description": "IP security restrictions for scm.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scmIpSecurityRestrictionsUseMain": {
        "description": "IP security restrictions for scm to use main.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "scmType": {
        "description": "SCM type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "tracingOptions": {
        "description": "Tracing options.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "use32BitWorkerProcess": {
        "description": "<code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualApplications": {
        "description": "Virtual applications.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetName": {
        "description": "Virtual Network name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "webSocketsEnabled": {
        "description": "<code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "windowsFxVersion": {
        "description": "Xenon App Framework and version",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "xManagedServiceIdentityId": {
        "description": "Explicit Managed Service Identity Id",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "numberOfWorkers",
      "defaultDocuments",
      "netFrameworkVersion",
      "phpVersion",
      "pythonVersion",
      "nodeVersion",
      "linuxFxVersion",
      "requestTracingEnabled",
      "requestTracingExpirationTime",
      "remoteDebuggingEnabled",
      "remoteDebuggingVersion",
      "httpLoggingEnabled",
      "logsDirectorySizeLimit",
      "detailedErrorLoggingEnabled",
      "publishingUsername",
      "appSettings",
      "connectionStrings",
      "handlerMappings",
      "documentRoot",
      "scmType",
      "use32BitWorkerProcess",
      "webSocketsEnabled",
      "alwaysOn",
      "javaVersion",
      "javaContainer",
      "javaContainerVersion",
      "appCommandLine",
      "managedPipelineMode",
      "virtualApplications",
      "loadBalancing",
      "experiments",
      "limits",
      "autoHealEnabled",
      "autoHealRules",
      "tracingOptions",
      "vnetName",
      "cors",
      "push",
      "apiDefinition",
      "autoSwapSlotName",
      "localMySqlEnabled",
      "ipSecurityRestrictions",
      "azureStorageAccounts",
      "ftpsState",
      "http20Enabled",
      "managedServiceIdentityId",
      "minTlsVersion",
      "reservedInstanceCount",
      "scmIpSecurityRestrictions",
      "scmIpSecurityRestrictionsUseMain",
      "windowsFxVersion",
      "xManagedServiceIdentityId"
    ],
    "required": [
      "apiVersion",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/deployments": {
    "api_version": "2018-11-01",
    "full_properties": {
      "active": {
        "description": "True if deployment is currently active, false if completed and null if not started.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "author": {
        "description": "Who authored the deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "author_email": {
        "description": "Author email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "debugSetting": {
        "description": "The debug setting.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "deployer": {
        "description": "Who performed the deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Details on deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "end_time": {
        "description": "End time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "message": {
        "description": "Details about deployment status.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "mode": {
        "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "onErrorDeployment": {
        "description": "Deployment on error behavior.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "parameters": {
        "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "parametersLink": {
        "description": "Entity representing the reference to the deployment parameters.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "start_time": {
        "description": "Start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Deployment status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "template": {
        "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "templateLink": {
        "description": "Entity representing the reference to the template.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "mode",
      "parameters",
      "parametersLink",
      "template",
      "templateLink",
      "debugSetting",
      "onErrorDeployment",
      "active",
      "author",
      "author_email",
      "deployer",
      "details",
      "end_time",
      "message",
      "start_time",
      "status"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/domainOwnershipIdentifiers": {
    "api_version": "2018-11-01",
    "full_properties": {
      "id": {
        "description": "String representation of the identity.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "id"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/extensions": {
    "api_version": "2018-11-01",
    "full_properties": {
      "appOffline": {
        "description": "Sets the AppOffline rule while the MSDeploy operation executes.\nSetting is <code>false</code> by default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionString": {
        "description": "SQL Connection String",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dbType": {
        "description": "Database Type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "packageUri": {
        "description": "Package URI",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "setParameters": {
        "description": "MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "setParametersXmlFileUri": {
        "description": "URI of MSDeploy Parameters file. Must not be set if SetParameters is used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "skipAppData": {
        "description": "Controls whether the MSDeploy operation skips the App_Data directory.\nIf set to <code>true</code>, the existing App_Data directory on the destination\nwill not be deleted, and any App_Data directory in the source will be ignored.\nSetting is <code>false</code> by default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appOffline",
      "connectionString",
      "dbType",
      "packageUri",
      "setParameters",
      "setParametersXmlFileUri",
      "skipAppData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/functions": {
    "api_version": "2018-11-01",
    "full_properties": {
      "config": {
        "description": "Config information.",
        "required": false,
        "type": "object",
        "update_causes": "unknown"
      },
      "config_href": {
        "description": "Config URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "files": {
        "description": "File list.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "function_app_id": {
        "description": "Function App ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "href": {
        "description": "Function URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "script_href": {
        "description": "Script URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "script_root_path_href": {
        "description": "Script root path URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "secrets_file_href": {
        "description": "Secrets file URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "test_data": {
        "description": "Test data used when testing via the Azure Portal.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "config",
      "config_href",
      "files",
      "function_app_id",
      "href",
      "script_href",
      "script_root_path_href",
      "secrets_file_href",
      "test_data"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/functions/keys": {
    "api_version": "2018-02-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/hostNameBindings": {
    "api_version": "2018-11-01",
    "full_properties": {
      "azureResourceName": {
        "description": "Azure resource name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "azureResourceType": {
        "description": "Azure resource type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "customHostNameDnsRecordType": {
        "description": "Custom DNS record type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "domainId": {
        "description": "Fully qualified ARM domain resource URI.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostNameType": {
        "description": "Hostname type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "siteName": {
        "description": "App Service app name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sslState": {
        "description": "SSL type.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "thumbprint": {
        "description": "SSL certificate thumbprint",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "azureResourceName",
      "azureResourceType",
      "customHostNameDnsRecordType",
      "domainId",
      "hostNameType",
      "siteName",
      "sslState",
      "thumbprint"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/hybridConnectionNamespaces/relays": {
    "api_version": "2018-11-01",
    "full_properties": {
      "hostname": {
        "description": "The hostname of the endpoint.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "port": {
        "description": "The port of the endpoint.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "relayArmUri": {
        "description": "The ARM URI to the Service Bus relay.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "relayName": {
        "description": "The name of the Service Bus relay.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "requiresClientAuthorization": {
        "description": "Returns true if client authorization is needed for this hybrid connection; otherwise, false.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "sendKeyName": {
        "description": "The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sendKeyValue": {
        "description": "The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned\nnormally, use the POST /listKeys API instead.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceBusNamespace": {
        "description": "The name of the Service Bus namespace.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "serviceBusSuffix": {
        "description": "The suffix for the service bus endpoint. By default this is .servicebus.windows.net",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "userMetadata": {
        "description": "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "requiresClientAuthorization",
      "userMetadata",
      "hostname",
      "port",
      "relayArmUri",
      "relayName",
      "sendKeyName",
      "sendKeyValue",
      "serviceBusNamespace",
      "serviceBusSuffix"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/hybridconnection": {
    "api_version": "2018-11-01",
    "full_properties": {
      "biztalkUri": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "entityConnectionString": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "entityName": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "hostname": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "port": {
        "description": null,
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "resourceConnectionString": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "resourceType": {
        "description": null,
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "biztalkUri",
      "entityConnectionString",
      "entityName",
      "hostname",
      "port",
      "resourceConnectionString",
      "resourceType"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/instances/deployments": {
    "api_version": "2016-08-01",
    "full_properties": {
      "active": {
        "description": "Active.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "author": {
        "description": "Author.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "author_email": {
        "description": "Author email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deployer": {
        "description": "Deployer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "details": {
        "description": "Detail.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "end_time": {
        "description": "End time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "id": {
        "description": "ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "message": {
        "description": "Message.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "start_time": {
        "description": "Start time.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "status": {
        "description": "Status.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "id",
      "status",
      "message",
      "author",
      "deployer",
      "author_email",
      "start_time",
      "end_time",
      "active",
      "details"
    ],
    "required": [
      "type",
      "apiVersion",
      "properties"
    ]
  },
  "Microsoft.Web/sites/slots/instances/extensions": {
    "api_version": "2018-11-01",
    "full_properties": {
      "appOffline": {
        "description": "Sets the AppOffline rule while the MSDeploy operation executes.\nSetting is <code>false</code> by default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "connectionString": {
        "description": "SQL Connection String",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dbType": {
        "description": "Database Type",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "packageUri": {
        "description": "Package URI",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "setParameters": {
        "description": "MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "setParametersXmlFileUri": {
        "description": "URI of MSDeploy Parameters file. Must not be set if SetParameters is used.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "skipAppData": {
        "description": "Controls whether the MSDeploy operation skips the App_Data directory.\nIf set to <code>true</code>, the existing App_Data directory on the destination\nwill not be deleted, and any App_Data directory in the source will be ignored.\nSetting is <code>false</code> by default.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "appOffline",
      "connectionString",
      "dbType",
      "packageUri",
      "setParameters",
      "setParametersXmlFileUri",
      "skipAppData"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/networkConfig": {
    "api_version": "2018-11-01",
    "full_properties": {
      "subnetResourceId": {
        "description": "The Virtual Network subnet's resource ID. This is the subnet that this Web App will join. This subnet must have a delegation to Microsoft.Web/serverFarms defined first.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "swiftSupported": {
        "description": "A flag that specifies if the scale unit this Web App is on supports Swift integration.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "subnetResourceId",
      "swiftSupported"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/premieraddons": {
    "api_version": "2018-11-01",
    "full_properties": {
      "marketplaceOffer": {
        "description": "Premier add on Marketplace offer.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "marketplacePublisher": {
        "description": "Premier add on Marketplace publisher.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "product": {
        "description": "Premier add on Product.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "sku": {
        "description": "Premier add on SKU.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vendor": {
        "description": "Premier add on Vendor.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "marketplaceOffer",
      "marketplacePublisher",
      "product",
      "sku",
      "vendor"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/privateAccess": {
    "api_version": "2018-11-01",
    "full_properties": {
      "enabled": {
        "description": "Whether private access is enabled or not.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "virtualNetworks": {
        "description": "The Virtual Networks (and subnets) allowed to access the site privately.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "enabled",
      "virtualNetworks"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/publicCertificates": {
    "api_version": "2018-11-01",
    "full_properties": {
      "blob": {
        "description": "Public Certificate byte array",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "publicCertificateLocation": {
        "description": "Public Certificate Location.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "blob",
      "publicCertificateLocation"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/siteextensions": {
    "api_version": "2018-11-01",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/sourcecontrols": {
    "api_version": "2018-11-01",
    "full_properties": {
      "branch": {
        "description": "Name of branch to use for deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deploymentRollbackEnabled": {
        "description": "<code>true</code> to enable deployment rollback; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isManualIntegration": {
        "description": "<code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isMercurial": {
        "description": "<code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "repoUrl": {
        "description": "Repository or source control URL.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "branch",
      "deploymentRollbackEnabled",
      "isManualIntegration",
      "isMercurial",
      "repoUrl"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/virtualNetworkConnections": {
    "api_version": "2018-11-01",
    "full_properties": {
      "certBlob": {
        "description": "A certificate file (.cer) blob containing the public key of the private key used to authenticate a \nPoint-To-Site VPN connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dnsServers": {
        "description": "DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isSwift": {
        "description": "Flag that is used to denote if this is VNET injection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetResourceId": {
        "description": "The Virtual Network's resource ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "certBlob",
      "dnsServers",
      "isSwift",
      "vnetResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/slots/virtualNetworkConnections/gateways": {
    "api_version": "2018-11-01",
    "full_properties": {
      "vnetName": {
        "description": "The Virtual Network name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vpnPackageUri": {
        "description": "The URI where the VPN package can be downloaded.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vnetName",
      "vpnPackageUri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/sourcecontrols": {
    "api_version": "2018-11-01",
    "full_properties": {
      "branch": {
        "description": "Name of branch to use for deployment.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "deploymentRollbackEnabled": {
        "description": "<code>true</code> to enable deployment rollback; otherwise, <code>false</code>.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isManualIntegration": {
        "description": "<code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isMercurial": {
        "description": "<code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "repoUrl": {
        "description": "Repository or source control URL.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "branch",
      "deploymentRollbackEnabled",
      "isManualIntegration",
      "isMercurial",
      "repoUrl"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/virtualNetworkConnections": {
    "api_version": "2018-11-01",
    "full_properties": {
      "certBlob": {
        "description": "A certificate file (.cer) blob containing the public key of the private key used to authenticate a \nPoint-To-Site VPN connection.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "dnsServers": {
        "description": "DNS servers to be used by this Virtual Network. This should be a comma-separated list of IP addresses.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isSwift": {
        "description": "Flag that is used to denote if this is VNET injection",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "vnetResourceId": {
        "description": "The Virtual Network's resource ID.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "certBlob",
      "dnsServers",
      "isSwift",
      "vnetResourceId"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.Web/sites/virtualNetworkConnections/gateways": {
    "api_version": "2018-11-01",
    "full_properties": {
      "vnetName": {
        "description": "The Virtual Network name.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "vpnPackageUri": {
        "description": "The URI where the VPN package can be downloaded.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "vnetName",
      "vpnPackageUri"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.WindowsESU/multipleActivationKeys": {
    "api_version": "2019-09-16-preview",
    "full_properties": {
      "agreementNumber": {
        "description": "Agreement number under which the key is requested.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "installedServerNumber": {
        "description": "Number of activations/servers using the MAK key.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "isEligible": {
        "description": "<code> true </code> if user has eligible on-premises Windows physical or virtual machines, and that the requested key will only be used in their organization; <code> false </code> otherwise.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "osType": {
        "description": "Type of OS for which the key is requested.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "supportType": {
        "description": "Type of support.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "agreementNumber",
      "installedServerNumber",
      "isEligible",
      "osType",
      "supportType"
    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "Microsoft.WindowsIoT/deviceServices": {
    "api_version": "2019-06-01",
    "full_properties": {
      "adminDomainName": {
        "description": "Windows IoT Device Service OEM AAD domain",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "notes": {
        "description": "Windows IoT Device Service notes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "quantity": {
        "description": "Windows IoT Device Service device allocation,",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "adminDomainName",
      "notes",
      "quantity"
    ],
    "required": [
      "apiVersion",
      "name",
      "type"
    ]
  },
  "Sendgrid.Email/accounts": {
    "api_version": "2015-01-01",
    "full_properties": {
      "acceptMarketingEmails": {
        "description": "True if you want to accept Marketing Emails",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      },
      "email": {
        "description": "The user's email address",
        "required": true,
        "type": "string",
        "update_causes": "unknown"
      },
      "password": {
        "description": "The SendGrid account password",
        "required": true,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "password",
      "acceptMarketingEmails",
      "email"
    ],
    "required": [
      "name",
      "type",
      "plan",
      "apiVersion",
      "properties"
    ]
  },
  "microsoft.alertsManagement/smartDetectorAlertRules": {
    "api_version": "2019-06-01",
    "full_properties": {
      "actionGroups": {
        "description": "The Action Groups information, used by the alert rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "The alert rule description.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "detector": {
        "description": "The detector information. By default this is not populated, unless it's specified in expandDetector",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "frequency": {
        "description": "The alert rule frequency in ISO8601 format. The time granularity must be in minutes and minimum value is 5 minutes.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "scope": {
        "description": "The alert rule resources scope.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "severity": {
        "description": "The alert rule severity.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "state": {
        "description": "The alert rule state.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "throttling": {
        "description": "Optional throttling information for the alert rule.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      }
    },
    "properties": [
      "actionGroups",
      "description",
      "detector",
      "frequency",
      "scope",
      "severity",
      "state",
      "throttling"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "microsoft.insights/alertrules": {
    "api_version": "2016-03-01",
    "full_properties": {
      "actions": {
        "description": "the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "condition": {
        "description": "the condition that results in the alert rule being activated.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "description": {
        "description": "the description of the alert rule that will be included in the alert email.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "isEnabled": {
        "description": "the flag that indicates whether the alert rule is enabled.",
        "required": false,
        "type": null,
        "update_causes": "unknown"
      },
      "name": {
        "description": "the name of the alert rule.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "name",
      "description",
      "isEnabled",
      "condition",
      "actions"
    ],
    "required": [
      "name",
      "type",
      "apiVersion",
      "location",
      "properties"
    ]
  },
  "microsoft.insights/privateLinkScopes": {
    "api_version": "2019-10-17-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "location",
      "name",
      "properties",
      "type"
    ]
  },
  "microsoft.visualstudio/account": {
    "api_version": "2014-04-01-preview",
    "full_properties": {
      "AccountName": {
        "description": "microsoft.visualstudio/account: Name of the Visual Studio Online account",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      },
      "OperationType": {
        "description": "microsoft.visualstudio/account: Type of operation being performed on the account, which can be either Create or Link.",
        "required": false,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "OperationType",
      "AccountName"
    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "microsoft.visualstudio/account/extension": {
    "api_version": "2014-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "microsoft.visualstudio/account/project": {
    "api_version": "2014-04-01-preview",
    "full_properties": {
    },
    "properties": [

    ],
    "required": [
      "apiVersion",
      "name",
      "properties",
      "type"
    ]
  },
  "secrets": {
    "api_version": "2015-06-01",
    "full_properties": {
      "value": {
        "description": "Secret value",
        "required": true,
        "type": "string",
        "update_causes": "unknown"
      }
    },
    "properties": [
      "value"
    ],
    "required": [
      "apiVersion",
      "properties",
      "type"
    ]
  }
}
